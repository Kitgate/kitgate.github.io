{"assets/index-c45e7ef4.css":{"fileName":"assets/index-c45e7ef4.css","name":"index.css","needsCodeReference":false,"source":".menu-button{display:inline-block;width:12rem;background-size:cover;cursor:pointer;animation:expand .35s both}.menu-button img{width:100%;height:auto;transition:transform .25s cubic-bezier(.165,.84,.44,1)}.menu-button:hover img{transform:scale(107%)}.menu-button:active img{transform:scale(1)}.menu-button:nth-child(1){animation-delay:0s}.menu-button:nth-child(2){animation-delay:.1s}.menu-button:nth-child(3){animation-delay:.2s}.menu-button:nth-child(4){animation-delay:.3s}.back-container{margin:.5rem .5rem 2rem;height:3.5rem;display:flex}.back-container .menu-button{display:contents}.back-container .menu-button img{height:100%;width:auto;margin-left:auto}.text-box{animation:expand .35s both}main{height:100vh;display:flex;flex-direction:column;margin:0 auto}.glow{filter:drop-shadow(0 0 3px white)}.main-article{display:flex;margin:0 1rem;flex-direction:var(--34784a36)}.main-content{display:flex;flex-direction:column;justify-content:center;width:100%;max-width:40em;margin:0 auto;padding:0 1rem}.cat-container{width:16rem;display:flex;animation:slide .35s}.cat-container img{width:100%;height:auto;margin-top:auto}aside{display:flex;flex-direction:column;position:absolute;right:1rem;top:1rem}.tagline{color:#fff;text-align:center}.title-box{display:flex;text-align:center;margin:2.25rem auto .5rem;padding:.5rem 0;justify-content:center;width:100%;animation:expand .35s;flex-direction:column}.title-box img{margin:0 auto;height:30vh;max-height:11em;width:auto}@media only screen and (max-width: 810px){.title-box img{height:auto;width:85vw;max-height:unset}}.divider{flex-grow:1}.button-container{display:flex;align-items:center;flex-grow:1;flex-wrap:wrap;height:-moz-fit-content;height:fit-content;margin-top:auto}.button-container .menu-button{width:50%}@media only screen and (max-width: 565px){.button-container{max-width:45vw}.button-container .menu-button{width:100%}}main:before,main:after{content:\"\";position:absolute;top:0;left:0;right:0;margin:0 auto;width:100%;height:100%;background-image:var(--fg-background);background-size:cover;background-position:center;z-index:-1;background-blend-mode:multiply;background-color:#4822548f}main:after{background-color:#48225450;-webkit-clip-path:polygon(20% 0%,80% 0%,80% 100%,20% 100%);clip-path:polygon(20% 0%,80% 0%,80% 100%,20% 100%)}@media only screen and (max-height: 810px){.title-box{margin-top:.25rem}}@media only screen and (max-height: 720px){.title-box{margin-top:.25rem}.main-article{width:90%}.cat-container{width:14rem}.article-container{margin:auto}}@media only screen and (max-height: 660px){.cat-container{width:10rem}.textbox.textbox.text-box{font-size:1.2rem;height:12rem;width:80%}}@media only screen and (max-height: 560px){.title-box img{max-height:7rem}.title-box{margin-bottom:0}.textbox.textbox.text-box{height:9rem;font-size:1.1rem}.back-container{margin:.1rem}}@media only screen and (max-height: 520px){.cat-container{width:10rem}.textbox.textbox.text-box{font-size:1rem;height:6rem;border-image-width:.8rem .8rem .8rem .8rem;width:80%;padding:1rem}}@media only screen and (max-height: 420px){.title-box img{max-height:6.5rem}.back-container{height:3rem}}@media only screen and (max-height: 380px){.title-box img{max-height:6rem}.tagline{font-size:.9rem}.main-article{width:85%}.back-container{height:2.6rem}}.timeline-container[data-v-0bb57dd5]{display:flex;flex-direction:column;align-items:center;justify-content:center;background-image:linear-gradient(#c6a3c3,#dfbbd5)}.timeline-container[data-v-0bb57dd5]:before,.timeline-container[data-v-0bb57dd5]:after{content:\"\";width:calc((100% - var(--content-width)) / 2);height:100%;position:absolute;top:0;background-color:#98739a}.timeline-container[data-v-0bb57dd5]:before{left:0}.timeline-container[data-v-0bb57dd5]:after{right:0}.timeline-box[data-v-0bb57dd5]{background-color:#ecd2e8;padding:1em;z-index:1;width:calc(var(--content-width) - 4em);margin:2em 2em 3em}@media only screen and (max-width: 1366px){.timeline-box[data-v-0bb57dd5]{width:calc(var(--content-width) + 4em)}}@media only screen and (max-width: 1025px){.timeline-box[data-v-0bb57dd5]{width:calc(100% - 8em)}}@media only screen and (max-width: 810px){.timeline-box[data-v-0bb57dd5]{width:calc(100% - 4em)}}@media only screen and (max-width: 610px){.timeline-box[data-v-0bb57dd5]{width:100%}}.inner-box[data-v-0bb57dd5]{margin:1em;padding:1em 1.5em;border:12px solid;-o-border-image:linear-gradient(#e4c9e2,rgba(228,201,226,.3333333333)) 1 100%;border-image:linear-gradient(#e4c9e2,rgba(228,201,226,.3333333333)) 1 100%;display:flex;flex-direction:column;gap:1.5em;position:static}@media only screen and (max-width: 1366px){.inner-box[data-v-0bb57dd5]{font-size:14px}}@media only screen and (max-width: 810px){.inner-box[data-v-0bb57dd5]{font-size:11px}}@media only screen and (max-width: 610px){.inner-box[data-v-0bb57dd5]{font-size:10px}}.timeline-section[data-v-0bb57dd5]{display:flex;justify-content:space-between;position:static}.timeline-section img[data-v-0bb57dd5]{width:auto;height:12em}@media only screen and (max-width: 810px){.timeline-section img[data-v-0bb57dd5]{height:8em}}.timeline-section img.large[data-v-0bb57dd5]{width:auto;height:18em;position:absolute;bottom:-32px;right:0}.timeline-section .image-spacer[data-v-0bb57dd5]{height:14em;width:18em}.timeline-section h1[data-v-0bb57dd5]{font-size:2em}.timeline-section h2.special[data-v-0bb57dd5]{font-size:1.2em;font-weight:700}.timeline-section h2[data-v-0bb57dd5]{font-weight:400;margin-bottom:.5em;font-size:1.2em}.timeline-section p[data-v-0bb57dd5]{margin:1.2em 0 0}@media only screen and (max-width: 1366px){.timeline-section p[data-v-0bb57dd5]{font-size:1.2em}}@font-face{font-family:Pixeloid Sans;src:local(\"Pixeloid Sans\"),url(/font/PixeloidSans.ttf);font-display:swap}@font-face{font-family:Pixeloid Sans;font-weight:700;src:local(\"Pixeloid Sans Bold\"),url(/font/PixeloidSans-Bold.ttf);font-display:swap}*,*:before,*:after{box-sizing:border-box;margin:0;position:relative}#app{min-height:100vh}body{min-height:100vh;font-family:Pixeloid Sans,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-size:18px;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;image-rendering:pixelated;display:flex;flex-direction:column;background-color:#000}@media only screen and (max-width: 1025px){html{font-size:14px}}@media only screen and (max-width: 767px){html{font-size:12px}}::-moz-selection{background-color:#fff;color:#000}::selection{background-color:#fff;color:#000}img{-webkit-user-drag:none;-khtml-user-drag:none;-moz-user-drag:none;-o-user-drag:none}:root{--content-width:60%}.kk-enter-active,.kk-leave-active{transition:transform ease .3s;position:absolute;width:100%}.kk-enter-active .article-container,.kk-leave-active .article-container{overflow:hidden}.kk-enter-active .main-article,.kk-leave-active .main-article,.kk-enter-active .title-box,.kk-leave-active .title-box{transition:transform ease .3s}.kk-enter-active main:before,.kk-enter-active main:after,.kk-leave-active main:before,.kk-leave-active main:after{transition:opacity linear .3s,-webkit-clip-path linear .3s;transition:opacity linear .3s,clip-path linear .3s;transition:opacity linear .3s,clip-path linear .3s,-webkit-clip-path linear .3s}.kk-leave-to .main-article,.kk-enter-from .main-article{transform:translateY(100%)}.kk-leave-to .title-box,.kk-enter-from .title-box{transform:scale(0)}.kk-leave-to main:before,.kk-leave-to main:after,.kk-enter-from main:before,.kk-enter-from main:after{opacity:.5}.kk-leave-to main:after,.kk-enter-from main:after{-webkit-clip-path:polygon(calc(20% - 16px) 0%,calc(80% + 16px) 0%,calc(80% + 16px) 100%,calc(20% - 16px) 100%);clip-path:polygon(calc(20% - 16px) 0%,calc(80% + 16px) 0%,calc(80% + 16px) 100%,calc(20% - 16px) 100%)}.kk-leave-from .main-article,.kk-enter-to .main-article{transform:translateY(0)}.kk-leave-from .title-box,.kk-enter-to .title-box{transform:scale(1)}.kk-leave-from main:after,.kk-enter-to main:after{-webkit-clip-path:polygon(20% 0%,80% 0%,80% 100%,20% 100%);clip-path:polygon(20% 0%,80% 0%,80% 100%,20% 100%)}.kk-leave-from main:before,.kk-leave-from main:after{opacity:0}.kk-enter-to main:before,.kk-enter-to main:after{opacity:1}.main-container:before,.main-container:after{content:\"\";position:absolute;top:0;left:0;right:0;margin:0 auto;width:100%;height:100%;background-image:var(--background);background-size:cover;background-position:center;z-index:-2;background-blend-mode:multiply;background-color:#4822548f}.main-container:after{background-color:#0d0d0e50;-webkit-clip-path:polygon(20% 0%,80% 0%,80% 100%,20% 100%);clip-path:polygon(20% 0%,80% 0%,80% 100%,20% 100%)}.main-container{height:100vh;z-index:0;overflow-y:scroll;scrollbar-color:#a890ca #ffe0f7}.textbox[data-v-c12e94d6]{border-image-slice:6 5 5 5 fill;border-image-width:1rem 1rem 1rem 1rem;border-image-outset:0px 0px 0px 0px;border-image-repeat:stretch stretch;border-image-source:url(/img/menu.png);border-style:solid;padding:1.5rem;color:#fff;width:100%;display:flex;flex-direction:column;font-weight:700;margin:0 auto;height:12rem;font-size:1.4rem}@media only screen and (max-width: 480px){.textbox[data-v-c12e94d6]{margin-bottom:0}}.textbox>span[data-v-c12e94d6]:after{content:\"|\";margin-left:.1em}.blinking-cursor[data-v-c12e94d6]:after{animation:blink-c12e94d6 1s steps(2) infinite}@keyframes blink-c12e94d6{0%{visibility:hidden}}\n","type":"asset"},"assets/index-9f8c6cbc.js":{"exports":[],"facadeModuleId":"C:/main/projects/k.g.i/index.html","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["\u0000vite/modulepreload-polyfill","C:/main/projects/k.g.i/node_modules/@vue/shared/dist/shared.esm-bundler.js","C:/main/projects/k.g.i/node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","C:/main/projects/k.g.i/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","C:/main/projects/k.g.i/node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","C:/main/projects/k.g.i/node_modules/vue-router/dist/vue-router.mjs","C:/main/projects/k.g.i/src/App.vue?vue&type=script&setup=true&lang.ts","C:/main/projects/k.g.i/src/components/MenuButton.vue?vue&type=script&setup=true&lang.ts","C:/main/projects/k.g.i/src/components/MenuButton.vue?vue&type=style&index=0&lang.scss","C:/main/projects/k.g.i/src/components/MainView.vue?vue&type=script&setup=true&lang.ts","C:/main/projects/k.g.i/src/components/MainView.vue?vue&type=style&index=0&lang.scss","C:/main/projects/k.g.i/src/views/HomeView.vue?vue&type=script&setup=true&lang.ts","\u0000plugin-vue:export-helper","C:/main/projects/k.g.i/src/views/CatsView.vue","C:/main/projects/k.g.i/src/views/TeamView.vue?vue&type=script&setup=true&lang.ts","/img/timeline/computercat.png","/img/timeline/masscomputercat.png","/img/timeline/cats.png","C:/main/projects/k.g.i/src/views/TimelineView.vue?vue&type=script&setup=true&lang.ts","C:/main/projects/k.g.i/src/views/TimelineView.vue?vue&type=style&index=0&scoped=0bb57dd5&lang.scss","C:/main/projects/k.g.i/src/views/TimelineView.vue","C:/main/projects/k.g.i/src/views/ContactView.vue","C:/main/projects/k.g.i/src/router/index.ts","C:/main/projects/k.g.i/node_modules/vue-flip-transition/dist/vue-flip-transition.es.js","C:/main/projects/k.g.i/src/assets/main.scss","C:/main/projects/k.g.i/node_modules/@altgen/typer-composable/dist/index.esm.js","C:/main/projects/k.g.i/src/components/TextBox.vue?vue&type=script&setup=true&lang.ts","C:/main/projects/k.g.i/src/components/TextBox.vue?vue&type=style&index=0&scoped=c12e94d6&lang.scss","C:/main/projects/k.g.i/src/components/TextBox.vue","C:/main/projects/k.g.i/src/main.ts","C:/main/projects/k.g.i/index.html"],"name":"index","type":"chunk","dynamicImports":[],"fileName":"assets/index-9f8c6cbc.js","implicitlyLoadedBefore":[],"importedBindings":{},"imports":[],"modules":{"\u0000vite/modulepreload-polyfill":{"code":"__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(link) {\n        const fetchOpts = {};\n        if (link.integrity)\n            fetchOpts.integrity = link.integrity;\n        if (link.referrerPolicy)\n            fetchOpts.referrerPolicy = link.referrerPolicy;\n        if (link.crossOrigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (link.crossOrigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","originalLength":1548,"removedExports":[],"renderedExports":[],"renderedLength":1548},"C:/main/projects/k.g.i/node_modules/@vue/shared/dist/shared.esm-bundler.js":{"code":"/**\n* @vue/shared v3.4.21\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\nfunction makeMap(str, expectsLowerCase) {\n  const set = new Set(str.split(\",\"));\n  return expectsLowerCase ? (val) => set.has(val.toLowerCase()) : (val) => set.has(val);\n}\n\nconst EMPTY_OBJ = {};\nconst EMPTY_ARR = [];\nconst NOOP = () => {\n};\nconst NO = () => false;\nconst isOn = (key) => key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // uppercase letter\n(key.charCodeAt(2) > 122 || key.charCodeAt(2) < 97);\nconst isModelListener = (key) => key.startsWith(\"onUpdate:\");\nconst extend = Object.assign;\nconst remove = (arr, el) => {\n  const i = arr.indexOf(el);\n  if (i > -1) {\n    arr.splice(i, 1);\n  }\n};\nconst hasOwnProperty$1 = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty$1.call(val, key);\nconst isArray$1 = Array.isArray;\nconst isMap = (val) => toTypeString(val) === \"[object Map]\";\nconst isSet = (val) => toTypeString(val) === \"[object Set]\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isString = (val) => typeof val === \"string\";\nconst isSymbol = (val) => typeof val === \"symbol\";\nconst isObject = (val) => val !== null && typeof val === \"object\";\nconst isPromise = (val) => {\n  return (isObject(val) || isFunction(val)) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst toRawType = (value) => {\n  return toTypeString(value).slice(8, -1);\n};\nconst isPlainObject = (val) => toTypeString(val) === \"[object Object]\";\nconst isIntegerKey = (key) => isString(key) && key !== \"NaN\" && key[0] !== \"-\" && \"\" + parseInt(key, 10) === key;\nconst isReservedProp = /* @__PURE__ */ makeMap(\n  // the leading comma is intentional so empty string \"\" is also included\n  \",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted\"\n);\nconst cacheStringFunction = (fn) => {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction((str) => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n});\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction(\n  (str) => str.replace(hyphenateRE, \"-$1\").toLowerCase()\n);\nconst capitalize = cacheStringFunction((str) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n});\nconst toHandlerKey = cacheStringFunction((str) => {\n  const s = str ? `on${capitalize(str)}` : ``;\n  return s;\n});\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\nconst invokeArrayFns = (fns, arg) => {\n  for (let i = 0; i < fns.length; i++) {\n    fns[i](arg);\n  }\n};\nconst def = (obj, key, value) => {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: false,\n    value\n  });\n};\nconst looseToNumber = (val) => {\n  const n = parseFloat(val);\n  return isNaN(n) ? val : n;\n};\nconst toNumber = (val) => {\n  const n = isString(val) ? Number(val) : NaN;\n  return isNaN(n) ? val : n;\n};\nlet _globalThis;\nconst getGlobalThis = () => {\n  return _globalThis || (_globalThis = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n};\n\nfunction normalizeStyle(value) {\n  if (isArray$1(value)) {\n    const res = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key];\n        }\n      }\n    }\n    return res;\n  } else if (isString(value) || isObject(value)) {\n    return value;\n  }\n}\nconst listDelimiterRE = /;(?![^(]*\\))/g;\nconst propertyDelimiterRE = /:([^]+)/;\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g;\nfunction parseStringStyle(cssText) {\n  const ret = {};\n  cssText.replace(styleCommentRE, \"\").split(listDelimiterRE).forEach((item) => {\n    if (item) {\n      const tmp = item.split(propertyDelimiterRE);\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return ret;\n}\nfunction normalizeClass(value) {\n  let res = \"\";\n  if (isString(value)) {\n    res = value;\n  } else if (isArray$1(value)) {\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeClass(value[i]);\n      if (normalized) {\n        res += normalized + \" \";\n      }\n    }\n  } else if (isObject(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + \" \";\n      }\n    }\n  }\n  return res.trim();\n}\n\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nconst isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);\nfunction includeBooleanAttr(value) {\n  return !!value || value === \"\";\n}\n\nconst toDisplayString = (val) => {\n  return isString(val) ? val : val == null ? \"\" : isArray$1(val) || isObject(val) && (val.toString === objectToString || !isFunction(val.toString)) ? JSON.stringify(val, replacer, 2) : String(val);\n};\nconst replacer = (_key, val) => {\n  if (val && val.__v_isRef) {\n    return replacer(_key, val.value);\n  } else if (isMap(val)) {\n    return {\n      [`Map(${val.size})`]: [...val.entries()].reduce(\n        (entries, [key, val2], i) => {\n          entries[stringifySymbol(key, i) + \" =>\"] = val2;\n          return entries;\n        },\n        {}\n      )\n    };\n  } else if (isSet(val)) {\n    return {\n      [`Set(${val.size})`]: [...val.values()].map((v) => stringifySymbol(v))\n    };\n  } else if (isSymbol(val)) {\n    return stringifySymbol(val);\n  } else if (isObject(val) && !isArray$1(val) && !isPlainObject(val)) {\n    return String(val);\n  }\n  return val;\n};\nconst stringifySymbol = (v, i = \"\") => {\n  var _a;\n  return isSymbol(v) ? `Symbol(${(_a = v.description) != null ? _a : i})` : v;\n};","originalLength":20762,"removedExports":["PatchFlagNames","PatchFlags","ShapeFlags","SlotFlags","escapeHtml","escapeHtmlComment","genPropsAccessExp","generateCodeFrame","isBooleanAttr","isBuiltInDirective","isDate","isGloballyAllowed","isGloballyWhitelisted","isHTMLTag","isKnownHtmlAttr","isKnownSvgAttr","isMathMLTag","isRegExp","isRenderableAttrValue","isSSRSafeAttrName","isSVGTag","isVoidTag","looseEqual","looseIndexOf","normalizeProps","propsToAttrMap","slotFlagsText","stringifyStyle"],"renderedExports":["EMPTY_ARR","EMPTY_OBJ","NO","NOOP","camelize","capitalize","def","extend","getGlobalThis","hasChanged","hasOwn","hyphenate","includeBooleanAttr","invokeArrayFns","isArray","isFunction","isIntegerKey","isMap","isModelListener","isObject","isOn","isPlainObject","isPromise","isReservedProp","isSet","isSpecialBooleanAttr","isString","isSymbol","looseToNumber","makeMap","normalizeClass","normalizeStyle","objectToString","parseStringStyle","remove","toDisplayString","toHandlerKey","toNumber","toRawType","toTypeString"],"renderedLength":6051},"C:/main/projects/k.g.i/node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js":{"code":"/**\n* @vue/reactivity v3.4.21\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n\nlet activeEffectScope;\nclass EffectScope {\n  constructor(detached = false) {\n    this.detached = detached;\n    /**\n     * @internal\n     */\n    this._active = true;\n    /**\n     * @internal\n     */\n    this.effects = [];\n    /**\n     * @internal\n     */\n    this.cleanups = [];\n    this.parent = activeEffectScope;\n    if (!detached && activeEffectScope) {\n      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\n        this\n      ) - 1;\n    }\n  }\n  get active() {\n    return this._active;\n  }\n  run(fn) {\n    if (this._active) {\n      const currentEffectScope = activeEffectScope;\n      try {\n        activeEffectScope = this;\n        return fn();\n      } finally {\n        activeEffectScope = currentEffectScope;\n      }\n    }\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  on() {\n    activeEffectScope = this;\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  off() {\n    activeEffectScope = this.parent;\n  }\n  stop(fromParent) {\n    if (this._active) {\n      let i, l;\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop();\n      }\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]();\n      }\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true);\n        }\n      }\n      if (!this.detached && this.parent && !fromParent) {\n        const last = this.parent.scopes.pop();\n        if (last && last !== this) {\n          this.parent.scopes[this.index] = last;\n          last.index = this.index;\n        }\n      }\n      this.parent = void 0;\n      this._active = false;\n    }\n  }\n}\nfunction recordEffectScope(effect, scope = activeEffectScope) {\n  if (scope && scope.active) {\n    scope.effects.push(effect);\n  }\n}\nfunction getCurrentScope() {\n  return activeEffectScope;\n}\n\nlet activeEffect;\nclass ReactiveEffect {\n  constructor(fn, trigger, scheduler, scope) {\n    this.fn = fn;\n    this.trigger = trigger;\n    this.scheduler = scheduler;\n    this.active = true;\n    this.deps = [];\n    /**\n     * @internal\n     */\n    this._dirtyLevel = 4;\n    /**\n     * @internal\n     */\n    this._trackId = 0;\n    /**\n     * @internal\n     */\n    this._runnings = 0;\n    /**\n     * @internal\n     */\n    this._shouldSchedule = false;\n    /**\n     * @internal\n     */\n    this._depsLength = 0;\n    recordEffectScope(this, scope);\n  }\n  get dirty() {\n    if (this._dirtyLevel === 2 || this._dirtyLevel === 3) {\n      this._dirtyLevel = 1;\n      pauseTracking();\n      for (let i = 0; i < this._depsLength; i++) {\n        const dep = this.deps[i];\n        if (dep.computed) {\n          triggerComputed(dep.computed);\n          if (this._dirtyLevel >= 4) {\n            break;\n          }\n        }\n      }\n      if (this._dirtyLevel === 1) {\n        this._dirtyLevel = 0;\n      }\n      resetTracking();\n    }\n    return this._dirtyLevel >= 4;\n  }\n  set dirty(v) {\n    this._dirtyLevel = v ? 4 : 0;\n  }\n  run() {\n    this._dirtyLevel = 0;\n    if (!this.active) {\n      return this.fn();\n    }\n    let lastShouldTrack = shouldTrack;\n    let lastEffect = activeEffect;\n    try {\n      shouldTrack = true;\n      activeEffect = this;\n      this._runnings++;\n      preCleanupEffect(this);\n      return this.fn();\n    } finally {\n      postCleanupEffect(this);\n      this._runnings--;\n      activeEffect = lastEffect;\n      shouldTrack = lastShouldTrack;\n    }\n  }\n  stop() {\n    var _a;\n    if (this.active) {\n      preCleanupEffect(this);\n      postCleanupEffect(this);\n      (_a = this.onStop) == null ? void 0 : _a.call(this);\n      this.active = false;\n    }\n  }\n}\nfunction triggerComputed(computed) {\n  return computed.value;\n}\nfunction preCleanupEffect(effect2) {\n  effect2._trackId++;\n  effect2._depsLength = 0;\n}\nfunction postCleanupEffect(effect2) {\n  if (effect2.deps.length > effect2._depsLength) {\n    for (let i = effect2._depsLength; i < effect2.deps.length; i++) {\n      cleanupDepEffect(effect2.deps[i], effect2);\n    }\n    effect2.deps.length = effect2._depsLength;\n  }\n}\nfunction cleanupDepEffect(dep, effect2) {\n  const trackId = dep.get(effect2);\n  if (trackId !== void 0 && effect2._trackId !== trackId) {\n    dep.delete(effect2);\n    if (dep.size === 0) {\n      dep.cleanup();\n    }\n  }\n}\nlet shouldTrack = true;\nlet pauseScheduleStack = 0;\nconst trackStack = [];\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === void 0 ? true : last;\n}\nfunction pauseScheduling() {\n  pauseScheduleStack++;\n}\nfunction resetScheduling() {\n  pauseScheduleStack--;\n  while (!pauseScheduleStack && queueEffectSchedulers.length) {\n    queueEffectSchedulers.shift()();\n  }\n}\nfunction trackEffect(effect2, dep, debuggerEventExtraInfo) {\n  if (dep.get(effect2) !== effect2._trackId) {\n    dep.set(effect2, effect2._trackId);\n    const oldDep = effect2.deps[effect2._depsLength];\n    if (oldDep !== dep) {\n      if (oldDep) {\n        cleanupDepEffect(oldDep, effect2);\n      }\n      effect2.deps[effect2._depsLength++] = dep;\n    } else {\n      effect2._depsLength++;\n    }\n  }\n}\nconst queueEffectSchedulers = [];\nfunction triggerEffects(dep, dirtyLevel, debuggerEventExtraInfo) {\n  pauseScheduling();\n  for (const effect2 of dep.keys()) {\n    let tracking;\n    if (effect2._dirtyLevel < dirtyLevel && (tracking != null ? tracking : tracking = dep.get(effect2) === effect2._trackId)) {\n      effect2._shouldSchedule || (effect2._shouldSchedule = effect2._dirtyLevel === 0);\n      effect2._dirtyLevel = dirtyLevel;\n    }\n    if (effect2._shouldSchedule && (tracking != null ? tracking : tracking = dep.get(effect2) === effect2._trackId)) {\n      effect2.trigger();\n      if ((!effect2._runnings || effect2.allowRecurse) && effect2._dirtyLevel !== 2) {\n        effect2._shouldSchedule = false;\n        if (effect2.scheduler) {\n          queueEffectSchedulers.push(effect2.scheduler);\n        }\n      }\n    }\n  }\n  resetScheduling();\n}\n\nconst createDep = (cleanup, computed) => {\n  const dep = /* @__PURE__ */ new Map();\n  dep.cleanup = cleanup;\n  dep.computed = computed;\n  return dep;\n};\n\nconst targetMap = /* @__PURE__ */ new WeakMap();\nconst ITERATE_KEY = Symbol(\"\");\nconst MAP_KEY_ITERATE_KEY = Symbol(\"\");\nfunction track(target, type, key) {\n  if (shouldTrack && activeEffect) {\n    let depsMap = targetMap.get(target);\n    if (!depsMap) {\n      targetMap.set(target, depsMap = /* @__PURE__ */ new Map());\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n      depsMap.set(key, dep = createDep(() => depsMap.delete(key)));\n    }\n    trackEffect(\n      activeEffect,\n      dep);\n  }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n  if (!depsMap) {\n    return;\n  }\n  let deps = [];\n  if (type === \"clear\") {\n    deps = [...depsMap.values()];\n  } else if (key === \"length\" && isArray$1(target)) {\n    const newLength = Number(newValue);\n    depsMap.forEach((dep, key2) => {\n      if (key2 === \"length\" || !isSymbol(key2) && key2 >= newLength) {\n        deps.push(dep);\n      }\n    });\n  } else {\n    if (key !== void 0) {\n      deps.push(depsMap.get(key));\n    }\n    switch (type) {\n      case \"add\":\n        if (!isArray$1(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        } else if (isIntegerKey(key)) {\n          deps.push(depsMap.get(\"length\"));\n        }\n        break;\n      case \"delete\":\n        if (!isArray$1(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        }\n        break;\n      case \"set\":\n        if (isMap(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n        }\n        break;\n    }\n  }\n  pauseScheduling();\n  for (const dep of deps) {\n    if (dep) {\n      triggerEffects(\n        dep,\n        4);\n    }\n  }\n  resetScheduling();\n}\nfunction getDepFromReactive(object, key) {\n  var _a;\n  return (_a = targetMap.get(object)) == null ? void 0 : _a.get(key);\n}\n\nconst isNonTrackableKeys = /* @__PURE__ */ makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set(\n  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key) => key !== \"arguments\" && key !== \"caller\").map((key) => Symbol[key]).filter(isSymbol)\n);\nconst arrayInstrumentations = /* @__PURE__ */ createArrayInstrumentations();\nfunction createArrayInstrumentations() {\n  const instrumentations = {};\n  [\"includes\", \"indexOf\", \"lastIndexOf\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      const arr = toRaw(this);\n      for (let i = 0, l = this.length; i < l; i++) {\n        track(arr, \"get\", i + \"\");\n      }\n      const res = arr[key](...args);\n      if (res === -1 || res === false) {\n        return arr[key](...args.map(toRaw));\n      } else {\n        return res;\n      }\n    };\n  });\n  [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      pauseTracking();\n      pauseScheduling();\n      const res = toRaw(this)[key].apply(this, args);\n      resetScheduling();\n      resetTracking();\n      return res;\n    };\n  });\n  return instrumentations;\n}\nfunction hasOwnProperty(key) {\n  const obj = toRaw(this);\n  track(obj, \"has\", key);\n  return obj.hasOwnProperty(key);\n}\nclass BaseReactiveHandler {\n  constructor(_isReadonly = false, _isShallow = false) {\n    this._isReadonly = _isReadonly;\n    this._isShallow = _isShallow;\n  }\n  get(target, key, receiver) {\n    const isReadonly2 = this._isReadonly, isShallow2 = this._isShallow;\n    if (key === \"__v_isReactive\") {\n      return !isReadonly2;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly2;\n    } else if (key === \"__v_isShallow\") {\n      return isShallow2;\n    } else if (key === \"__v_raw\") {\n      if (receiver === (isReadonly2 ? isShallow2 ? shallowReadonlyMap : readonlyMap : isShallow2 ? shallowReactiveMap : reactiveMap).get(target) || // receiver is not the reactive proxy, but has the same prototype\n      // this means the reciever is a user proxy of the reactive proxy\n      Object.getPrototypeOf(target) === Object.getPrototypeOf(receiver)) {\n        return target;\n      }\n      return;\n    }\n    const targetIsArray = isArray$1(target);\n    if (!isReadonly2) {\n      if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\n        return Reflect.get(arrayInstrumentations, key, receiver);\n      }\n      if (key === \"hasOwnProperty\") {\n        return hasOwnProperty;\n      }\n    }\n    const res = Reflect.get(target, key, receiver);\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n    if (!isReadonly2) {\n      track(target, \"get\", key);\n    }\n    if (isShallow2) {\n      return res;\n    }\n    if (isRef(res)) {\n      return targetIsArray && isIntegerKey(key) ? res : res.value;\n    }\n    if (isObject(res)) {\n      return isReadonly2 ? readonly(res) : reactive(res);\n    }\n    return res;\n  }\n}\nclass MutableReactiveHandler extends BaseReactiveHandler {\n  constructor(isShallow2 = false) {\n    super(false, isShallow2);\n  }\n  set(target, key, value, receiver) {\n    let oldValue = target[key];\n    if (!this._isShallow) {\n      const isOldValueReadonly = isReadonly(oldValue);\n      if (!isShallow(value) && !isReadonly(value)) {\n        oldValue = toRaw(oldValue);\n        value = toRaw(value);\n      }\n      if (!isArray$1(target) && isRef(oldValue) && !isRef(value)) {\n        if (isOldValueReadonly) {\n          return false;\n        } else {\n          oldValue.value = value;\n          return true;\n        }\n      }\n    }\n    const hadKey = isArray$1(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\n    const result = Reflect.set(target, key, value, receiver);\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\", key, value);\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\", key, value);\n      }\n    }\n    return result;\n  }\n  deleteProperty(target, key) {\n    const hadKey = hasOwn(target, key);\n    target[key];\n    const result = Reflect.deleteProperty(target, key);\n    if (result && hadKey) {\n      trigger(target, \"delete\", key, void 0);\n    }\n    return result;\n  }\n  has(target, key) {\n    const result = Reflect.has(target, key);\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\n      track(target, \"has\", key);\n    }\n    return result;\n  }\n  ownKeys(target) {\n    track(\n      target,\n      \"iterate\",\n      isArray$1(target) ? \"length\" : ITERATE_KEY\n    );\n    return Reflect.ownKeys(target);\n  }\n}\nclass ReadonlyReactiveHandler extends BaseReactiveHandler {\n  constructor(isShallow2 = false) {\n    super(true, isShallow2);\n  }\n  set(target, key) {\n    return true;\n  }\n  deleteProperty(target, key) {\n    return true;\n  }\n}\nconst mutableHandlers = /* @__PURE__ */ new MutableReactiveHandler();\nconst readonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler();\nconst shallowReactiveHandlers = /* @__PURE__ */ new MutableReactiveHandler(\n  true\n);\n\nconst toShallow = (value) => value;\nconst getProto = (v) => Reflect.getPrototypeOf(v);\nfunction get(target, key, isReadonly = false, isShallow = false) {\n  target = target[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (hasChanged(key, rawKey)) {\n      track(rawTarget, \"get\", key);\n    }\n    track(rawTarget, \"get\", rawKey);\n  }\n  const { has: has2 } = getProto(rawTarget);\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n  if (has2.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has2.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    target.get(key);\n  }\n}\nfunction has(key, isReadonly = false) {\n  const target = this[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (hasChanged(key, rawKey)) {\n      track(rawTarget, \"has\", key);\n    }\n    track(rawTarget, \"has\", rawKey);\n  }\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly = false) {\n  target = target[\"__v_raw\"];\n  !isReadonly && track(toRaw(target), \"iterate\", ITERATE_KEY);\n  return Reflect.get(target, \"size\", target);\n}\nfunction add(value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const proto = getProto(target);\n  const hadKey = proto.has.call(target, value);\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\", value, value);\n  }\n  return this;\n}\nfunction set(key, value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  }\n  const oldValue = get2.call(target, key);\n  target.set(key, value);\n  if (!hadKey) {\n    trigger(target, \"add\", key, value);\n  } else if (hasChanged(value, oldValue)) {\n    trigger(target, \"set\", key, value);\n  }\n  return this;\n}\nfunction deleteEntry(key) {\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  }\n  get2 ? get2.call(target, key) : void 0;\n  const result = target.delete(key);\n  if (hadKey) {\n    trigger(target, \"delete\", key, void 0);\n  }\n  return result;\n}\nfunction clear() {\n  const target = toRaw(this);\n  const hadItems = target.size !== 0;\n  const result = target.clear();\n  if (hadItems) {\n    trigger(target, \"clear\", void 0, void 0);\n  }\n  return result;\n}\nfunction createForEach(isReadonly, isShallow) {\n  return function forEach(callback, thisArg) {\n    const observed = this;\n    const target = observed[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\", ITERATE_KEY);\n    return target.forEach((value, key) => {\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\nfunction createIterableMethod(method, isReadonly, isShallow) {\n  return function(...args) {\n    const target = this[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const targetIsMap = isMap(rawTarget);\n    const isPair = method === \"entries\" || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === \"keys\" && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(\n      rawTarget,\n      \"iterate\",\n      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\n    );\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next();\n        return done ? { value, done } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  };\n}\nfunction createReadonlyMethod(type) {\n  return function(...args) {\n    return type === \"delete\" ? false : type === \"clear\" ? void 0 : this;\n  };\n}\nfunction createInstrumentations() {\n  const mutableInstrumentations2 = {\n    get(key) {\n      return get(this, key);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  };\n  const shallowInstrumentations2 = {\n    get(key) {\n      return get(this, key, false, true);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  };\n  const readonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, false)\n  };\n  const shallowReadonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, true)\n  };\n  const iteratorMethods = [\"keys\", \"values\", \"entries\", Symbol.iterator];\n  iteratorMethods.forEach((method) => {\n    mutableInstrumentations2[method] = createIterableMethod(\n      method,\n      false,\n      false\n    );\n    readonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      false\n    );\n    shallowInstrumentations2[method] = createIterableMethod(\n      method,\n      false,\n      true\n    );\n    shallowReadonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      true\n    );\n  });\n  return [\n    mutableInstrumentations2,\n    readonlyInstrumentations2,\n    shallowInstrumentations2,\n    shallowReadonlyInstrumentations2\n  ];\n}\nconst [\n  mutableInstrumentations,\n  readonlyInstrumentations,\n  shallowInstrumentations,\n  shallowReadonlyInstrumentations\n] = /* @__PURE__ */ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly, shallow) {\n  const instrumentations = shallow ? isReadonly ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly ? readonlyInstrumentations : mutableInstrumentations;\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly;\n    } else if (key === \"__v_raw\") {\n      return target;\n    }\n    return Reflect.get(\n      hasOwn(instrumentations, key) && key in target ? instrumentations : target,\n      key,\n      receiver\n    );\n  };\n}\nconst mutableCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, false)\n};\n\nconst reactiveMap = /* @__PURE__ */ new WeakMap();\nconst shallowReactiveMap = /* @__PURE__ */ new WeakMap();\nconst readonlyMap = /* @__PURE__ */ new WeakMap();\nconst shallowReadonlyMap = /* @__PURE__ */ new WeakMap();\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case \"Object\":\n    case \"Array\":\n      return 1 /* COMMON */;\n    case \"Map\":\n    case \"Set\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return 2 /* COLLECTION */;\n    default:\n      return 0 /* INVALID */;\n  }\n}\nfunction getTargetType(value) {\n  return value[\"__v_skip\"] || !Object.isExtensible(value) ? 0 /* INVALID */ : targetTypeMap(toRawType(value));\n}\nfunction reactive(target) {\n  if (isReadonly(target)) {\n    return target;\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers,\n    reactiveMap\n  );\n}\nfunction shallowReactive(target) {\n  return createReactiveObject(\n    target,\n    false,\n    shallowReactiveHandlers,\n    shallowCollectionHandlers,\n    shallowReactiveMap\n  );\n}\nfunction readonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    readonlyHandlers,\n    readonlyCollectionHandlers,\n    readonlyMap\n  );\n}\nfunction createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {\n  if (!isObject(target)) {\n    return target;\n  }\n  if (target[\"__v_raw\"] && !(isReadonly2 && target[\"__v_isReactive\"])) {\n    return target;\n  }\n  const existingProxy = proxyMap.get(target);\n  if (existingProxy) {\n    return existingProxy;\n  }\n  const targetType = getTargetType(target);\n  if (targetType === 0 /* INVALID */) {\n    return target;\n  }\n  const proxy = new Proxy(\n    target,\n    targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers\n  );\n  proxyMap.set(target, proxy);\n  return proxy;\n}\nfunction isReactive(value) {\n  if (isReadonly(value)) {\n    return isReactive(value[\"__v_raw\"]);\n  }\n  return !!(value && value[\"__v_isReactive\"]);\n}\nfunction isReadonly(value) {\n  return !!(value && value[\"__v_isReadonly\"]);\n}\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\nfunction isProxy(value) {\n  return isReactive(value) || isReadonly(value);\n}\nfunction toRaw(observed) {\n  const raw = observed && observed[\"__v_raw\"];\n  return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n  if (Object.isExtensible(value)) {\n    def(value, \"__v_skip\", true);\n  }\n  return value;\n}\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\nclass ComputedRefImpl {\n  constructor(getter, _setter, isReadonly, isSSR) {\n    this.getter = getter;\n    this._setter = _setter;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this[\"__v_isReadonly\"] = false;\n    this.effect = new ReactiveEffect(\n      () => getter(this._value),\n      () => triggerRefValue(\n        this,\n        this.effect._dirtyLevel === 2 ? 2 : 3\n      )\n    );\n    this.effect.computed = this;\n    this.effect.active = this._cacheable = !isSSR;\n    this[\"__v_isReadonly\"] = isReadonly;\n  }\n  get value() {\n    const self = toRaw(this);\n    if ((!self._cacheable || self.effect.dirty) && hasChanged(self._value, self._value = self.effect.run())) {\n      triggerRefValue(self, 4);\n    }\n    trackRefValue(self);\n    if (self.effect._dirtyLevel >= 2) {\n      triggerRefValue(self, 2);\n    }\n    return self._value;\n  }\n  set value(newValue) {\n    this._setter(newValue);\n  }\n  // #region polyfill _dirty for backward compatibility third party code for Vue <= 3.3.x\n  get _dirty() {\n    return this.effect.dirty;\n  }\n  set _dirty(v) {\n    this.effect.dirty = v;\n  }\n  // #endregion\n}\nfunction computed$1(getterOrOptions, debugOptions, isSSR = false) {\n  let getter;\n  let setter;\n  const onlyGetter = isFunction(getterOrOptions);\n  if (onlyGetter) {\n    getter = getterOrOptions;\n    setter = NOOP;\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n  return cRef;\n}\n\nfunction trackRefValue(ref2) {\n  var _a;\n  if (shouldTrack && activeEffect) {\n    ref2 = toRaw(ref2);\n    trackEffect(\n      activeEffect,\n      (_a = ref2.dep) != null ? _a : ref2.dep = createDep(\n        () => ref2.dep = void 0,\n        ref2 instanceof ComputedRefImpl ? ref2 : void 0\n      ));\n  }\n}\nfunction triggerRefValue(ref2, dirtyLevel = 4, newVal) {\n  ref2 = toRaw(ref2);\n  const dep = ref2.dep;\n  if (dep) {\n    triggerEffects(\n      dep,\n      dirtyLevel);\n  }\n}\nfunction isRef(r) {\n  return !!(r && r.__v_isRef === true);\n}\nfunction ref(value) {\n  return createRef(value, false);\n}\nfunction shallowRef(value) {\n  return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n  if (isRef(rawValue)) {\n    return rawValue;\n  }\n  return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n  constructor(value, __v_isShallow) {\n    this.__v_isShallow = __v_isShallow;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this._rawValue = __v_isShallow ? value : toRaw(value);\n    this._value = __v_isShallow ? value : toReactive(value);\n  }\n  get value() {\n    trackRefValue(this);\n    return this._value;\n  }\n  set value(newVal) {\n    const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\n    newVal = useDirectValue ? newVal : toRaw(newVal);\n    if (hasChanged(newVal, this._rawValue)) {\n      this._rawValue = newVal;\n      this._value = useDirectValue ? newVal : toReactive(newVal);\n      triggerRefValue(this, 4);\n    }\n  }\n}\nfunction unref(ref2) {\n  return isRef(ref2) ? ref2.value : ref2;\n}\nconst shallowUnwrapHandlers = {\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key];\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value;\n      return true;\n    } else {\n      return Reflect.set(target, key, value, receiver);\n    }\n  }\n};\nfunction proxyRefs(objectWithRefs) {\n  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nfunction toRefs(object) {\n  const ret = isArray$1(object) ? new Array(object.length) : {};\n  for (const key in object) {\n    ret[key] = propertyToRef(object, key);\n  }\n  return ret;\n}\nclass ObjectRefImpl {\n  constructor(_object, _key, _defaultValue) {\n    this._object = _object;\n    this._key = _key;\n    this._defaultValue = _defaultValue;\n    this.__v_isRef = true;\n  }\n  get value() {\n    const val = this._object[this._key];\n    return val === void 0 ? this._defaultValue : val;\n  }\n  set value(newVal) {\n    this._object[this._key] = newVal;\n  }\n  get dep() {\n    return getDepFromReactive(toRaw(this._object), this._key);\n  }\n}\nfunction propertyToRef(source, key, defaultValue) {\n  const val = source[key];\n  return isRef(val) ? val : new ObjectRefImpl(source, key, defaultValue);\n}","originalLength":34962,"removedExports":["ReactiveFlags","TrackOpTypes","TriggerOpTypes","customRef","deferredComputed","effect","effectScope","enableTracking","onScopeDispose","shallowReadonly","stop","toRef","toValue","triggerRef"],"renderedExports":["EffectScope","ITERATE_KEY","ReactiveEffect","computed","getCurrentScope","isProxy","isReactive","isReadonly","isRef","isShallow","markRaw","pauseScheduling","pauseTracking","proxyRefs","reactive","readonly","ref","resetScheduling","resetTracking","shallowReactive","shallowRef","toRaw","toRefs","track","trigger","unref"],"renderedLength":27640},"C:/main/projects/k.g.i/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js":{"code":"/**\n* @vue/runtime-core v3.4.21\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n\nconst stack = [];\nfunction warn$1(msg, ...args) {\n  pauseTracking();\n  const instance = stack.length ? stack[stack.length - 1].component : null;\n  const appWarnHandler = instance && instance.appContext.config.warnHandler;\n  const trace = getComponentTrace();\n  if (appWarnHandler) {\n    callWithErrorHandling(\n      appWarnHandler,\n      instance,\n      11,\n      [\n        msg + args.map((a) => {\n          var _a, _b;\n          return (_b = (_a = a.toString) == null ? void 0 : _a.call(a)) != null ? _b : JSON.stringify(a);\n        }).join(\"\"),\n        instance && instance.proxy,\n        trace.map(\n          ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\n        ).join(\"\\n\"),\n        trace\n      ]\n    );\n  } else {\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args];\n    if (trace.length && // avoid spamming console during tests\n    true) {\n      warnArgs.push(`\n`, ...formatTrace(trace));\n    }\n    console.warn(...warnArgs);\n  }\n  resetTracking();\n}\nfunction getComponentTrace() {\n  let currentVNode = stack[stack.length - 1];\n  if (!currentVNode) {\n    return [];\n  }\n  const normalizedStack = [];\n  while (currentVNode) {\n    const last = normalizedStack[0];\n    if (last && last.vnode === currentVNode) {\n      last.recurseCount++;\n    } else {\n      normalizedStack.push({\n        vnode: currentVNode,\n        recurseCount: 0\n      });\n    }\n    const parentInstance = currentVNode.component && currentVNode.component.parent;\n    currentVNode = parentInstance && parentInstance.vnode;\n  }\n  return normalizedStack;\n}\nfunction formatTrace(trace) {\n  const logs = [];\n  trace.forEach((entry, i) => {\n    logs.push(...i === 0 ? [] : [`\n`], ...formatTraceEntry(entry));\n  });\n  return logs;\n}\nfunction formatTraceEntry({ vnode, recurseCount }) {\n  const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\n  const isRoot = vnode.component ? vnode.component.parent == null : false;\n  const open = ` at <${formatComponentName(\n    vnode.component,\n    vnode.type,\n    isRoot\n  )}`;\n  const close = `>` + postfix;\n  return vnode.props ? [open, ...formatProps(vnode.props), close] : [open + close];\n}\nfunction formatProps(props) {\n  const res = [];\n  const keys = Object.keys(props);\n  keys.slice(0, 3).forEach((key) => {\n    res.push(...formatProp(key, props[key]));\n  });\n  if (keys.length > 3) {\n    res.push(` ...`);\n  }\n  return res;\n}\nfunction formatProp(key, value, raw) {\n  if (isString(value)) {\n    value = JSON.stringify(value);\n    return raw ? value : [`${key}=${value}`];\n  } else if (typeof value === \"number\" || typeof value === \"boolean\" || value == null) {\n    return raw ? value : [`${key}=${value}`];\n  } else if (isRef(value)) {\n    value = formatProp(key, toRaw(value.value), true);\n    return raw ? value : [`${key}=Ref<`, value, `>`];\n  } else if (isFunction(value)) {\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\n  } else {\n    value = toRaw(value);\n    return raw ? value : [`${key}=`, value];\n  }\n}\nfunction callWithErrorHandling(fn, instance, type, args) {\n  try {\n    return args ? fn(...args) : fn();\n  } catch (err) {\n    handleError(err, instance, type);\n  }\n}\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\n  if (isFunction(fn)) {\n    const res = callWithErrorHandling(fn, instance, type, args);\n    if (res && isPromise(res)) {\n      res.catch((err) => {\n        handleError(err, instance, type);\n      });\n    }\n    return res;\n  }\n  const values = [];\n  for (let i = 0; i < fn.length; i++) {\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\n  }\n  return values;\n}\nfunction handleError(err, instance, type, throwInDev = true) {\n  const contextVNode = instance ? instance.vnode : null;\n  if (instance) {\n    let cur = instance.parent;\n    const exposedInstance = instance.proxy;\n    const errorInfo = `https://vuejs.org/error-reference/#runtime-${type}`;\n    while (cur) {\n      const errorCapturedHooks = cur.ec;\n      if (errorCapturedHooks) {\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\n          if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\n            return;\n          }\n        }\n      }\n      cur = cur.parent;\n    }\n    const appErrorHandler = instance.appContext.config.errorHandler;\n    if (appErrorHandler) {\n      callWithErrorHandling(\n        appErrorHandler,\n        null,\n        10,\n        [err, exposedInstance, errorInfo]\n      );\n      return;\n    }\n  }\n  logError(err, type, contextVNode, throwInDev);\n}\nfunction logError(err, type, contextVNode, throwInDev = true) {\n  {\n    console.error(err);\n  }\n}\n\nlet isFlushing = false;\nlet isFlushPending = false;\nconst queue = [];\nlet flushIndex = 0;\nconst pendingPostFlushCbs = [];\nlet activePostFlushCbs = null;\nlet postFlushIndex = 0;\nconst resolvedPromise = /* @__PURE__ */ Promise.resolve();\nlet currentFlushPromise = null;\nfunction nextTick(fn) {\n  const p = currentFlushPromise || resolvedPromise;\n  return fn ? p.then(this ? fn.bind(this) : fn) : p;\n}\nfunction findInsertionIndex(id) {\n  let start = flushIndex + 1;\n  let end = queue.length;\n  while (start < end) {\n    const middle = start + end >>> 1;\n    const middleJob = queue[middle];\n    const middleJobId = getId(middleJob);\n    if (middleJobId < id || middleJobId === id && middleJob.pre) {\n      start = middle + 1;\n    } else {\n      end = middle;\n    }\n  }\n  return start;\n}\nfunction queueJob(job) {\n  if (!queue.length || !queue.includes(\n    job,\n    isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex\n  )) {\n    if (job.id == null) {\n      queue.push(job);\n    } else {\n      queue.splice(findInsertionIndex(job.id), 0, job);\n    }\n    queueFlush();\n  }\n}\nfunction queueFlush() {\n  if (!isFlushing && !isFlushPending) {\n    isFlushPending = true;\n    currentFlushPromise = resolvedPromise.then(flushJobs);\n  }\n}\nfunction invalidateJob(job) {\n  const i = queue.indexOf(job);\n  if (i > flushIndex) {\n    queue.splice(i, 1);\n  }\n}\nfunction queuePostFlushCb(cb) {\n  if (!isArray$1(cb)) {\n    if (!activePostFlushCbs || !activePostFlushCbs.includes(\n      cb,\n      cb.allowRecurse ? postFlushIndex + 1 : postFlushIndex\n    )) {\n      pendingPostFlushCbs.push(cb);\n    }\n  } else {\n    pendingPostFlushCbs.push(...cb);\n  }\n  queueFlush();\n}\nfunction flushPreFlushCbs(instance, seen, i = isFlushing ? flushIndex + 1 : 0) {\n  for (; i < queue.length; i++) {\n    const cb = queue[i];\n    if (cb && cb.pre) {\n      if (instance && cb.id !== instance.uid) {\n        continue;\n      }\n      queue.splice(i, 1);\n      i--;\n      cb();\n    }\n  }\n}\nfunction flushPostFlushCbs(seen) {\n  if (pendingPostFlushCbs.length) {\n    const deduped = [...new Set(pendingPostFlushCbs)].sort(\n      (a, b) => getId(a) - getId(b)\n    );\n    pendingPostFlushCbs.length = 0;\n    if (activePostFlushCbs) {\n      activePostFlushCbs.push(...deduped);\n      return;\n    }\n    activePostFlushCbs = deduped;\n    for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\n      activePostFlushCbs[postFlushIndex]();\n    }\n    activePostFlushCbs = null;\n    postFlushIndex = 0;\n  }\n}\nconst getId = (job) => job.id == null ? Infinity : job.id;\nconst comparator = (a, b) => {\n  const diff = getId(a) - getId(b);\n  if (diff === 0) {\n    if (a.pre && !b.pre)\n      return -1;\n    if (b.pre && !a.pre)\n      return 1;\n  }\n  return diff;\n};\nfunction flushJobs(seen) {\n  isFlushPending = false;\n  isFlushing = true;\n  queue.sort(comparator);\n  const check = NOOP;\n  try {\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\n      const job = queue[flushIndex];\n      if (job && job.active !== false) {\n        if (!!(\"production\" !== \"production\") && check(job)) ;\n        callWithErrorHandling(job, null, 14);\n      }\n    }\n  } finally {\n    flushIndex = 0;\n    queue.length = 0;\n    flushPostFlushCbs();\n    isFlushing = false;\n    currentFlushPromise = null;\n    if (queue.length || pendingPostFlushCbs.length) {\n      flushJobs();\n    }\n  }\n}\n\nfunction emit(instance, event, ...rawArgs) {\n  if (instance.isUnmounted)\n    return;\n  const props = instance.vnode.props || EMPTY_OBJ;\n  let args = rawArgs;\n  const isModelListener = event.startsWith(\"update:\");\n  const modelArg = isModelListener && event.slice(7);\n  if (modelArg && modelArg in props) {\n    const modifiersKey = `${modelArg === \"modelValue\" ? \"model\" : modelArg}Modifiers`;\n    const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\n    if (trim) {\n      args = rawArgs.map((a) => isString(a) ? a.trim() : a);\n    }\n    if (number) {\n      args = rawArgs.map(looseToNumber);\n    }\n  }\n  let handlerName;\n  let handler = props[handlerName = toHandlerKey(event)] || // also try camelCase event handler (#2249)\n  props[handlerName = toHandlerKey(camelize(event))];\n  if (!handler && isModelListener) {\n    handler = props[handlerName = toHandlerKey(hyphenate(event))];\n  }\n  if (handler) {\n    callWithAsyncErrorHandling(\n      handler,\n      instance,\n      6,\n      args\n    );\n  }\n  const onceHandler = props[handlerName + `Once`];\n  if (onceHandler) {\n    if (!instance.emitted) {\n      instance.emitted = {};\n    } else if (instance.emitted[handlerName]) {\n      return;\n    }\n    instance.emitted[handlerName] = true;\n    callWithAsyncErrorHandling(\n      onceHandler,\n      instance,\n      6,\n      args\n    );\n  }\n}\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.emitsCache;\n  const cached = cache.get(comp);\n  if (cached !== void 0) {\n    return cached;\n  }\n  const raw = comp.emits;\n  let normalized = {};\n  let hasExtends = false;\n  if (!isFunction(comp)) {\n    const extendEmits = (raw2) => {\n      const normalizedFromExtend = normalizeEmitsOptions(raw2, appContext, true);\n      if (normalizedFromExtend) {\n        hasExtends = true;\n        extend(normalized, normalizedFromExtend);\n      }\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendEmits);\n    }\n    if (comp.extends) {\n      extendEmits(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendEmits);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (isObject(comp)) {\n      cache.set(comp, null);\n    }\n    return null;\n  }\n  if (isArray$1(raw)) {\n    raw.forEach((key) => normalized[key] = null);\n  } else {\n    extend(normalized, raw);\n  }\n  if (isObject(comp)) {\n    cache.set(comp, normalized);\n  }\n  return normalized;\n}\nfunction isEmitListener(options, key) {\n  if (!options || !isOn(key)) {\n    return false;\n  }\n  key = key.slice(2).replace(/Once$/, \"\");\n  return hasOwn(options, key[0].toLowerCase() + key.slice(1)) || hasOwn(options, hyphenate(key)) || hasOwn(options, key);\n}\n\nlet currentRenderingInstance = null;\nlet currentScopeId = null;\nfunction setCurrentRenderingInstance(instance) {\n  const prev = currentRenderingInstance;\n  currentRenderingInstance = instance;\n  currentScopeId = instance && instance.type.__scopeId || null;\n  return prev;\n}\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot) {\n  if (!ctx)\n    return fn;\n  if (fn._n) {\n    return fn;\n  }\n  const renderFnWithContext = (...args) => {\n    if (renderFnWithContext._d) {\n      setBlockTracking(-1);\n    }\n    const prevInstance = setCurrentRenderingInstance(ctx);\n    let res;\n    try {\n      res = fn(...args);\n    } finally {\n      setCurrentRenderingInstance(prevInstance);\n      if (renderFnWithContext._d) {\n        setBlockTracking(1);\n      }\n    }\n    return res;\n  };\n  renderFnWithContext._n = true;\n  renderFnWithContext._c = true;\n  renderFnWithContext._d = true;\n  return renderFnWithContext;\n}\nfunction markAttrsAccessed() {\n}\nfunction renderComponentRoot(instance) {\n  const {\n    type: Component,\n    vnode,\n    proxy,\n    withProxy,\n    props,\n    propsOptions: [propsOptions],\n    slots,\n    attrs,\n    emit,\n    render,\n    renderCache,\n    data,\n    setupState,\n    ctx,\n    inheritAttrs\n  } = instance;\n  let result;\n  let fallthroughAttrs;\n  const prev = setCurrentRenderingInstance(instance);\n  try {\n    if (vnode.shapeFlag & 4) {\n      const proxyToUse = withProxy || proxy;\n      const thisProxy = !!(\"production\" !== \"production\") && setupState.__isScriptSetup ? new Proxy(proxyToUse, {\n        get(target, key, receiver) {\n          warn$1(\n            `Property '${String(\n              key\n            )}' was accessed via 'this'. Avoid using 'this' in templates.`\n          );\n          return Reflect.get(target, key, receiver);\n        }\n      }) : proxyToUse;\n      result = normalizeVNode(\n        render.call(\n          thisProxy,\n          proxyToUse,\n          renderCache,\n          props,\n          setupState,\n          data,\n          ctx\n        )\n      );\n      fallthroughAttrs = attrs;\n    } else {\n      const render2 = Component;\n      if (!!(\"production\" !== \"production\") && attrs === props) ;\n      result = normalizeVNode(\n        render2.length > 1 ? render2(\n          props,\n          !!(\"production\" !== \"production\") ? {\n            get attrs() {\n              markAttrsAccessed();\n              return attrs;\n            },\n            slots,\n            emit\n          } : { attrs, slots, emit }\n        ) : render2(\n          props,\n          null\n          /* we know it doesn't need it */\n        )\n      );\n      fallthroughAttrs = Component.props ? attrs : getFunctionalFallthrough(attrs);\n    }\n  } catch (err) {\n    blockStack.length = 0;\n    handleError(err, instance, 1);\n    result = createVNode(Comment);\n  }\n  let root = result;\n  if (fallthroughAttrs && inheritAttrs !== false) {\n    const keys = Object.keys(fallthroughAttrs);\n    const { shapeFlag } = root;\n    if (keys.length) {\n      if (shapeFlag & (1 | 6)) {\n        if (propsOptions && keys.some(isModelListener)) {\n          fallthroughAttrs = filterModelListeners(\n            fallthroughAttrs,\n            propsOptions\n          );\n        }\n        root = cloneVNode(root, fallthroughAttrs);\n      }\n    }\n  }\n  if (vnode.dirs) {\n    root = cloneVNode(root);\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\n  }\n  if (vnode.transition) {\n    root.transition = vnode.transition;\n  }\n  {\n    result = root;\n  }\n  setCurrentRenderingInstance(prev);\n  return result;\n}\nconst getFunctionalFallthrough = (attrs) => {\n  let res;\n  for (const key in attrs) {\n    if (key === \"class\" || key === \"style\" || isOn(key)) {\n      (res || (res = {}))[key] = attrs[key];\n    }\n  }\n  return res;\n};\nconst filterModelListeners = (attrs, props) => {\n  const res = {};\n  for (const key in attrs) {\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\n      res[key] = attrs[key];\n    }\n  }\n  return res;\n};\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\n  const { props: prevProps, children: prevChildren, component } = prevVNode;\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\n  const emits = component.emitsOptions;\n  if (nextVNode.dirs || nextVNode.transition) {\n    return true;\n  }\n  if (optimized && patchFlag >= 0) {\n    if (patchFlag & 1024) {\n      return true;\n    }\n    if (patchFlag & 16) {\n      if (!prevProps) {\n        return !!nextProps;\n      }\n      return hasPropsChanged(prevProps, nextProps, emits);\n    } else if (patchFlag & 8) {\n      const dynamicProps = nextVNode.dynamicProps;\n      for (let i = 0; i < dynamicProps.length; i++) {\n        const key = dynamicProps[i];\n        if (nextProps[key] !== prevProps[key] && !isEmitListener(emits, key)) {\n          return true;\n        }\n      }\n    }\n  } else {\n    if (prevChildren || nextChildren) {\n      if (!nextChildren || !nextChildren.$stable) {\n        return true;\n      }\n    }\n    if (prevProps === nextProps) {\n      return false;\n    }\n    if (!prevProps) {\n      return !!nextProps;\n    }\n    if (!nextProps) {\n      return true;\n    }\n    return hasPropsChanged(prevProps, nextProps, emits);\n  }\n  return false;\n}\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\n  const nextKeys = Object.keys(nextProps);\n  if (nextKeys.length !== Object.keys(prevProps).length) {\n    return true;\n  }\n  for (let i = 0; i < nextKeys.length; i++) {\n    const key = nextKeys[i];\n    if (nextProps[key] !== prevProps[key] && !isEmitListener(emitsOptions, key)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction updateHOCHostEl({ vnode, parent }, el) {\n  while (parent) {\n    const root = parent.subTree;\n    if (root.suspense && root.suspense.activeBranch === vnode) {\n      root.el = vnode.el;\n    }\n    if (root === vnode) {\n      (vnode = parent.vnode).el = el;\n      parent = parent.parent;\n    } else {\n      break;\n    }\n  }\n}\n\nconst COMPONENTS = \"components\";\nfunction resolveComponent(name, maybeSelfReference) {\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\n}\nconst NULL_DYNAMIC_COMPONENT = Symbol.for(\"v-ndc\");\nfunction resolveDynamicComponent(component) {\n  if (isString(component)) {\n    return resolveAsset(COMPONENTS, component, false) || component;\n  } else {\n    return component || NULL_DYNAMIC_COMPONENT;\n  }\n}\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\n  const instance = currentRenderingInstance || currentInstance;\n  if (instance) {\n    const Component = instance.type;\n    if (type === COMPONENTS) {\n      const selfName = getComponentName(\n        Component,\n        false\n      );\n      if (selfName && (selfName === name || selfName === camelize(name) || selfName === capitalize(camelize(name)))) {\n        return Component;\n      }\n    }\n    const res = (\n      // local registration\n      // check instance[type] first which is resolved for options API\n      resolve(instance[type] || Component[type], name) || // global registration\n      resolve(instance.appContext[type], name)\n    );\n    if (!res && maybeSelfReference) {\n      return Component;\n    }\n    return res;\n  }\n}\nfunction resolve(registry, name) {\n  return registry && (registry[name] || registry[camelize(name)] || registry[capitalize(camelize(name))]);\n}\n\nconst isSuspense = (type) => type.__isSuspense;\nfunction queueEffectWithSuspense(fn, suspense) {\n  if (suspense && suspense.pendingBranch) {\n    if (isArray$1(fn)) {\n      suspense.effects.push(...fn);\n    } else {\n      suspense.effects.push(fn);\n    }\n  } else {\n    queuePostFlushCb(fn);\n  }\n}\n\nconst ssrContextKey = Symbol.for(\"v-scx\");\nconst useSSRContext = () => {\n  {\n    const ctx = inject(ssrContextKey);\n    return ctx;\n  }\n};\nfunction watchPostEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    { flush: \"post\" }\n  );\n}\nconst INITIAL_WATCHER_VALUE = {};\nfunction watch(source, cb, options) {\n  return doWatch(source, cb, options);\n}\nfunction doWatch(source, cb, {\n  immediate,\n  deep,\n  flush,\n  once,\n  onTrack,\n  onTrigger\n} = EMPTY_OBJ) {\n  if (cb && once) {\n    const _cb = cb;\n    cb = (...args) => {\n      _cb(...args);\n      unwatch();\n    };\n  }\n  const instance = currentInstance;\n  const reactiveGetter = (source2) => deep === true ? source2 : (\n    // for deep: false, only traverse root-level properties\n    traverse(source2, deep === false ? 1 : void 0)\n  );\n  let getter;\n  let forceTrigger = false;\n  let isMultiSource = false;\n  if (isRef(source)) {\n    getter = () => source.value;\n    forceTrigger = isShallow(source);\n  } else if (isReactive(source)) {\n    getter = () => reactiveGetter(source);\n    forceTrigger = true;\n  } else if (isArray$1(source)) {\n    isMultiSource = true;\n    forceTrigger = source.some((s) => isReactive(s) || isShallow(s));\n    getter = () => source.map((s) => {\n      if (isRef(s)) {\n        return s.value;\n      } else if (isReactive(s)) {\n        return reactiveGetter(s);\n      } else if (isFunction(s)) {\n        return callWithErrorHandling(s, instance, 2);\n      } else ;\n    });\n  } else if (isFunction(source)) {\n    if (cb) {\n      getter = () => callWithErrorHandling(source, instance, 2);\n    } else {\n      getter = () => {\n        if (cleanup) {\n          cleanup();\n        }\n        return callWithAsyncErrorHandling(\n          source,\n          instance,\n          3,\n          [onCleanup]\n        );\n      };\n    }\n  } else {\n    getter = NOOP;\n  }\n  if (cb && deep) {\n    const baseGetter = getter;\n    getter = () => traverse(baseGetter());\n  }\n  let cleanup;\n  let onCleanup = (fn) => {\n    cleanup = effect.onStop = () => {\n      callWithErrorHandling(fn, instance, 4);\n      cleanup = effect.onStop = void 0;\n    };\n  };\n  let ssrCleanup;\n  if (isInSSRComponentSetup) {\n    onCleanup = NOOP;\n    if (!cb) {\n      getter();\n    } else if (immediate) {\n      callWithAsyncErrorHandling(cb, instance, 3, [\n        getter(),\n        isMultiSource ? [] : void 0,\n        onCleanup\n      ]);\n    }\n    if (flush === \"sync\") {\n      const ctx = useSSRContext();\n      ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = []);\n    } else {\n      return NOOP;\n    }\n  }\n  let oldValue = isMultiSource ? new Array(source.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;\n  const job = () => {\n    if (!effect.active || !effect.dirty) {\n      return;\n    }\n    if (cb) {\n      const newValue = effect.run();\n      if (deep || forceTrigger || (isMultiSource ? newValue.some((v, i) => hasChanged(v, oldValue[i])) : hasChanged(newValue, oldValue)) || false) {\n        if (cleanup) {\n          cleanup();\n        }\n        callWithAsyncErrorHandling(cb, instance, 3, [\n          newValue,\n          // pass undefined as the old value when it's changed for the first time\n          oldValue === INITIAL_WATCHER_VALUE ? void 0 : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE ? [] : oldValue,\n          onCleanup\n        ]);\n        oldValue = newValue;\n      }\n    } else {\n      effect.run();\n    }\n  };\n  job.allowRecurse = !!cb;\n  let scheduler;\n  if (flush === \"sync\") {\n    scheduler = job;\n  } else if (flush === \"post\") {\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\n  } else {\n    job.pre = true;\n    if (instance)\n      job.id = instance.uid;\n    scheduler = () => queueJob(job);\n  }\n  const effect = new ReactiveEffect(getter, NOOP, scheduler);\n  const scope = getCurrentScope();\n  const unwatch = () => {\n    effect.stop();\n    if (scope) {\n      remove(scope.effects, effect);\n    }\n  };\n  if (cb) {\n    if (immediate) {\n      job();\n    } else {\n      oldValue = effect.run();\n    }\n  } else if (flush === \"post\") {\n    queuePostRenderEffect(\n      effect.run.bind(effect),\n      instance && instance.suspense\n    );\n  } else {\n    effect.run();\n  }\n  if (ssrCleanup)\n    ssrCleanup.push(unwatch);\n  return unwatch;\n}\nfunction instanceWatch(source, value, options) {\n  const publicThis = this.proxy;\n  const getter = isString(source) ? source.includes(\".\") ? createPathGetter(publicThis, source) : () => publicThis[source] : source.bind(publicThis, publicThis);\n  let cb;\n  if (isFunction(value)) {\n    cb = value;\n  } else {\n    cb = value.handler;\n    options = value;\n  }\n  const reset = setCurrentInstance(this);\n  const res = doWatch(getter, cb.bind(publicThis), options);\n  reset();\n  return res;\n}\nfunction createPathGetter(ctx, path) {\n  const segments = path.split(\".\");\n  return () => {\n    let cur = ctx;\n    for (let i = 0; i < segments.length && cur; i++) {\n      cur = cur[segments[i]];\n    }\n    return cur;\n  };\n}\nfunction traverse(value, depth, currentDepth = 0, seen) {\n  if (!isObject(value) || value[\"__v_skip\"]) {\n    return value;\n  }\n  if (depth && depth > 0) {\n    if (currentDepth >= depth) {\n      return value;\n    }\n    currentDepth++;\n  }\n  seen = seen || /* @__PURE__ */ new Set();\n  if (seen.has(value)) {\n    return value;\n  }\n  seen.add(value);\n  if (isRef(value)) {\n    traverse(value.value, depth, currentDepth, seen);\n  } else if (isArray$1(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], depth, currentDepth, seen);\n    }\n  } else if (isSet(value) || isMap(value)) {\n    value.forEach((v) => {\n      traverse(v, depth, currentDepth, seen);\n    });\n  } else if (isPlainObject(value)) {\n    for (const key in value) {\n      traverse(value[key], depth, currentDepth, seen);\n    }\n  }\n  return value;\n}\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\n  const bindings = vnode.dirs;\n  const oldBindings = prevVNode && prevVNode.dirs;\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n    if (oldBindings) {\n      binding.oldValue = oldBindings[i].value;\n    }\n    let hook = binding.dir[name];\n    if (hook) {\n      pauseTracking();\n      callWithAsyncErrorHandling(hook, instance, 8, [\n        vnode.el,\n        binding,\n        vnode,\n        prevVNode\n      ]);\n      resetTracking();\n    }\n  }\n}\n\nconst leaveCbKey = Symbol(\"_leaveCb\");\nconst enterCbKey = Symbol(\"_enterCb\");\nfunction useTransitionState() {\n  const state = {\n    isMounted: false,\n    isLeaving: false,\n    isUnmounting: false,\n    leavingVNodes: /* @__PURE__ */ new Map()\n  };\n  onMounted(() => {\n    state.isMounted = true;\n  });\n  onBeforeUnmount(() => {\n    state.isUnmounting = true;\n  });\n  return state;\n}\nconst TransitionHookValidator = [Function, Array];\nconst BaseTransitionPropsValidators = {\n  mode: String,\n  appear: Boolean,\n  persisted: Boolean,\n  // enter\n  onBeforeEnter: TransitionHookValidator,\n  onEnter: TransitionHookValidator,\n  onAfterEnter: TransitionHookValidator,\n  onEnterCancelled: TransitionHookValidator,\n  // leave\n  onBeforeLeave: TransitionHookValidator,\n  onLeave: TransitionHookValidator,\n  onAfterLeave: TransitionHookValidator,\n  onLeaveCancelled: TransitionHookValidator,\n  // appear\n  onBeforeAppear: TransitionHookValidator,\n  onAppear: TransitionHookValidator,\n  onAfterAppear: TransitionHookValidator,\n  onAppearCancelled: TransitionHookValidator\n};\nconst BaseTransitionImpl = {\n  name: `BaseTransition`,\n  props: BaseTransitionPropsValidators,\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    return () => {\n      const children = slots.default && getTransitionRawChildren(slots.default(), true);\n      if (!children || !children.length) {\n        return;\n      }\n      let child = children[0];\n      if (children.length > 1) {\n        for (const c of children) {\n          if (c.type !== Comment) {\n            child = c;\n            break;\n          }\n        }\n      }\n      const rawProps = toRaw(props);\n      const { mode } = rawProps;\n      if (state.isLeaving) {\n        return emptyPlaceholder(child);\n      }\n      const innerChild = getKeepAliveChild(child);\n      if (!innerChild) {\n        return emptyPlaceholder(child);\n      }\n      const enterHooks = resolveTransitionHooks(\n        innerChild,\n        rawProps,\n        state,\n        instance\n      );\n      setTransitionHooks(innerChild, enterHooks);\n      const oldChild = instance.subTree;\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\n      if (oldInnerChild && oldInnerChild.type !== Comment && !isSameVNodeType(innerChild, oldInnerChild)) {\n        const leavingHooks = resolveTransitionHooks(\n          oldInnerChild,\n          rawProps,\n          state,\n          instance\n        );\n        setTransitionHooks(oldInnerChild, leavingHooks);\n        if (mode === \"out-in\") {\n          state.isLeaving = true;\n          leavingHooks.afterLeave = () => {\n            state.isLeaving = false;\n            if (instance.update.active !== false) {\n              instance.effect.dirty = true;\n              instance.update();\n            }\n          };\n          return emptyPlaceholder(child);\n        } else if (mode === \"in-out\" && innerChild.type !== Comment) {\n          leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\n            const leavingVNodesCache = getLeavingNodesForType(\n              state,\n              oldInnerChild\n            );\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\n            el[leaveCbKey] = () => {\n              earlyRemove();\n              el[leaveCbKey] = void 0;\n              delete enterHooks.delayedLeave;\n            };\n            enterHooks.delayedLeave = delayedLeave;\n          };\n        }\n      }\n      return child;\n    };\n  }\n};\nconst BaseTransition = BaseTransitionImpl;\nfunction getLeavingNodesForType(state, vnode) {\n  const { leavingVNodes } = state;\n  let leavingVNodesCache = leavingVNodes.get(vnode.type);\n  if (!leavingVNodesCache) {\n    leavingVNodesCache = /* @__PURE__ */ Object.create(null);\n    leavingVNodes.set(vnode.type, leavingVNodesCache);\n  }\n  return leavingVNodesCache;\n}\nfunction resolveTransitionHooks(vnode, props, state, instance) {\n  const {\n    appear,\n    mode,\n    persisted = false,\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onEnterCancelled,\n    onBeforeLeave,\n    onLeave,\n    onAfterLeave,\n    onLeaveCancelled,\n    onBeforeAppear,\n    onAppear,\n    onAfterAppear,\n    onAppearCancelled\n  } = props;\n  const key = String(vnode.key);\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode);\n  const callHook = (hook, args) => {\n    hook && callWithAsyncErrorHandling(\n      hook,\n      instance,\n      9,\n      args\n    );\n  };\n  const callAsyncHook = (hook, args) => {\n    const done = args[1];\n    callHook(hook, args);\n    if (isArray$1(hook)) {\n      if (hook.every((hook2) => hook2.length <= 1))\n        done();\n    } else if (hook.length <= 1) {\n      done();\n    }\n  };\n  const hooks = {\n    mode,\n    persisted,\n    beforeEnter(el) {\n      let hook = onBeforeEnter;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onBeforeAppear || onBeforeEnter;\n        } else {\n          return;\n        }\n      }\n      if (el[leaveCbKey]) {\n        el[leaveCbKey](\n          true\n          /* cancelled */\n        );\n      }\n      const leavingVNode = leavingVNodesCache[key];\n      if (leavingVNode && isSameVNodeType(vnode, leavingVNode) && leavingVNode.el[leaveCbKey]) {\n        leavingVNode.el[leaveCbKey]();\n      }\n      callHook(hook, [el]);\n    },\n    enter(el) {\n      let hook = onEnter;\n      let afterHook = onAfterEnter;\n      let cancelHook = onEnterCancelled;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onAppear || onEnter;\n          afterHook = onAfterAppear || onAfterEnter;\n          cancelHook = onAppearCancelled || onEnterCancelled;\n        } else {\n          return;\n        }\n      }\n      let called = false;\n      const done = el[enterCbKey] = (cancelled) => {\n        if (called)\n          return;\n        called = true;\n        if (cancelled) {\n          callHook(cancelHook, [el]);\n        } else {\n          callHook(afterHook, [el]);\n        }\n        if (hooks.delayedLeave) {\n          hooks.delayedLeave();\n        }\n        el[enterCbKey] = void 0;\n      };\n      if (hook) {\n        callAsyncHook(hook, [el, done]);\n      } else {\n        done();\n      }\n    },\n    leave(el, remove) {\n      const key2 = String(vnode.key);\n      if (el[enterCbKey]) {\n        el[enterCbKey](\n          true\n          /* cancelled */\n        );\n      }\n      if (state.isUnmounting) {\n        return remove();\n      }\n      callHook(onBeforeLeave, [el]);\n      let called = false;\n      const done = el[leaveCbKey] = (cancelled) => {\n        if (called)\n          return;\n        called = true;\n        remove();\n        if (cancelled) {\n          callHook(onLeaveCancelled, [el]);\n        } else {\n          callHook(onAfterLeave, [el]);\n        }\n        el[leaveCbKey] = void 0;\n        if (leavingVNodesCache[key2] === vnode) {\n          delete leavingVNodesCache[key2];\n        }\n      };\n      leavingVNodesCache[key2] = vnode;\n      if (onLeave) {\n        callAsyncHook(onLeave, [el, done]);\n      } else {\n        done();\n      }\n    },\n    clone(vnode2) {\n      return resolveTransitionHooks(vnode2, props, state, instance);\n    }\n  };\n  return hooks;\n}\nfunction emptyPlaceholder(vnode) {\n  if (isKeepAlive(vnode)) {\n    vnode = cloneVNode(vnode);\n    vnode.children = null;\n    return vnode;\n  }\n}\nfunction getKeepAliveChild(vnode) {\n  return isKeepAlive(vnode) ? (\n    // #7121 ensure get the child component subtree in case\n    // it's been replaced during HMR\n    vnode.children ? vnode.children[0] : void 0\n  ) : vnode;\n}\nfunction setTransitionHooks(vnode, hooks) {\n  if (vnode.shapeFlag & 6 && vnode.component) {\n    setTransitionHooks(vnode.component.subTree, hooks);\n  } else if (vnode.shapeFlag & 128) {\n    vnode.ssContent.transition = hooks.clone(vnode.ssContent);\n    vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\n  } else {\n    vnode.transition = hooks;\n  }\n}\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\n  let ret = [];\n  let keyedFragmentCount = 0;\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i];\n    const key = parentKey == null ? child.key : String(parentKey) + String(child.key != null ? child.key : i);\n    if (child.type === Fragment) {\n      if (child.patchFlag & 128)\n        keyedFragmentCount++;\n      ret = ret.concat(\n        getTransitionRawChildren(child.children, keepComment, key)\n      );\n    } else if (keepComment || child.type !== Comment) {\n      ret.push(key != null ? cloneVNode(child, { key }) : child);\n    }\n  }\n  if (keyedFragmentCount > 1) {\n    for (let i = 0; i < ret.length; i++) {\n      ret[i].patchFlag = -2;\n    }\n  }\n  return ret;\n}\n\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction defineComponent(options, extraOptions) {\n  return isFunction(options) ? (\n    // #8326: extend call and options.name access are considered side-effects\n    // by Rollup, so we have to wrap it in a pure-annotated IIFE.\n    /* @__PURE__ */ (() => extend({ name: options.name }, extraOptions, { setup: options }))()\n  ) : options;\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\nfunction onActivated(hook, target) {\n  registerKeepAliveHook(hook, \"a\", target);\n}\nfunction onDeactivated(hook, target) {\n  registerKeepAliveHook(hook, \"da\", target);\n}\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\n  const wrappedHook = hook.__wdc || (hook.__wdc = () => {\n    let current = target;\n    while (current) {\n      if (current.isDeactivated) {\n        return;\n      }\n      current = current.parent;\n    }\n    return hook();\n  });\n  injectHook(type, wrappedHook, target);\n  if (target) {\n    let current = target.parent;\n    while (current && current.parent) {\n      if (isKeepAlive(current.parent.vnode)) {\n        injectToKeepAliveRoot(wrappedHook, type, target, current);\n      }\n      current = current.parent;\n    }\n  }\n}\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\n  const injected = injectHook(\n    type,\n    hook,\n    keepAliveRoot,\n    true\n    /* prepend */\n  );\n  onUnmounted(() => {\n    remove(keepAliveRoot[type], injected);\n  }, target);\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\n  if (target) {\n    const hooks = target[type] || (target[type] = []);\n    const wrappedHook = hook.__weh || (hook.__weh = (...args) => {\n      if (target.isUnmounted) {\n        return;\n      }\n      pauseTracking();\n      const reset = setCurrentInstance(target);\n      const res = callWithAsyncErrorHandling(hook, target, type, args);\n      reset();\n      resetTracking();\n      return res;\n    });\n    if (prepend) {\n      hooks.unshift(wrappedHook);\n    } else {\n      hooks.push(wrappedHook);\n    }\n    return wrappedHook;\n  }\n}\nconst createHook = (lifecycle) => (hook, target = currentInstance) => (\n  // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\n  (!isInSSRComponentSetup || lifecycle === \"sp\") && injectHook(lifecycle, (...args) => hook(...args), target)\n);\nconst onBeforeMount = createHook(\"bm\");\nconst onMounted = createHook(\"m\");\nconst onBeforeUpdate = createHook(\"bu\");\nconst onUpdated = createHook(\"u\");\nconst onBeforeUnmount = createHook(\"bum\");\nconst onUnmounted = createHook(\"um\");\nconst onServerPrefetch = createHook(\"sp\");\nconst onRenderTriggered = createHook(\n  \"rtg\"\n);\nconst onRenderTracked = createHook(\n  \"rtc\"\n);\nfunction onErrorCaptured(hook, target = currentInstance) {\n  injectHook(\"ec\", hook, target);\n}\n\nfunction renderSlot(slots, name, props = {}, fallback, noSlotted) {\n  if (currentRenderingInstance.isCE || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.isCE) {\n    if (name !== \"default\")\n      props.name = name;\n    return createVNode(\"slot\", props, fallback && fallback());\n  }\n  let slot = slots[name];\n  if (slot && slot._c) {\n    slot._d = false;\n  }\n  openBlock();\n  const validSlotContent = slot && ensureValidVNode(slot(props));\n  const rendered = createBlock(\n    Fragment,\n    {\n      key: props.key || // slot content array of a dynamic conditional slot may have a branch\n      // key attached in the `createSlots` helper, respect that\n      validSlotContent && validSlotContent.key || `_${name}`\n    },\n    validSlotContent || (fallback ? fallback() : []),\n    validSlotContent && slots._ === 1 ? 64 : -2\n  );\n  if (!noSlotted && rendered.scopeId) {\n    rendered.slotScopeIds = [rendered.scopeId + \"-s\"];\n  }\n  if (slot && slot._c) {\n    slot._d = true;\n  }\n  return rendered;\n}\nfunction ensureValidVNode(vnodes) {\n  return vnodes.some((child) => {\n    if (!isVNode(child))\n      return true;\n    if (child.type === Comment)\n      return false;\n    if (child.type === Fragment && !ensureValidVNode(child.children))\n      return false;\n    return true;\n  }) ? vnodes : null;\n}\n\nconst getPublicInstance = (i) => {\n  if (!i)\n    return null;\n  if (isStatefulComponent(i))\n    return getExposeProxy(i) || i.proxy;\n  return getPublicInstance(i.parent);\n};\nconst publicPropertiesMap = (\n  // Move PURE marker to new line to workaround compiler discarding it\n  // due to type annotation\n  /* @__PURE__ */ extend(/* @__PURE__ */ Object.create(null), {\n    $: (i) => i,\n    $el: (i) => i.vnode.el,\n    $data: (i) => i.data,\n    $props: (i) => i.props,\n    $attrs: (i) => i.attrs,\n    $slots: (i) => i.slots,\n    $refs: (i) => i.refs,\n    $parent: (i) => getPublicInstance(i.parent),\n    $root: (i) => getPublicInstance(i.root),\n    $emit: (i) => i.emit,\n    $options: (i) => resolveMergedOptions(i) ,\n    $forceUpdate: (i) => i.f || (i.f = () => {\n      i.effect.dirty = true;\n      queueJob(i.update);\n    }),\n    $nextTick: (i) => i.n || (i.n = nextTick.bind(i.proxy)),\n    $watch: (i) => instanceWatch.bind(i) \n  })\n);\nconst hasSetupBinding = (state, key) => state !== EMPTY_OBJ && !state.__isScriptSetup && hasOwn(state, key);\nconst PublicInstanceProxyHandlers = {\n  get({ _: instance }, key) {\n    const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\n    let normalizedProps;\n    if (key[0] !== \"$\") {\n      const n = accessCache[key];\n      if (n !== void 0) {\n        switch (n) {\n          case 1 /* SETUP */:\n            return setupState[key];\n          case 2 /* DATA */:\n            return data[key];\n          case 4 /* CONTEXT */:\n            return ctx[key];\n          case 3 /* PROPS */:\n            return props[key];\n        }\n      } else if (hasSetupBinding(setupState, key)) {\n        accessCache[key] = 1 /* SETUP */;\n        return setupState[key];\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n        accessCache[key] = 2 /* DATA */;\n        return data[key];\n      } else if (\n        // only cache other properties when instance has declared (thus stable)\n        // props\n        (normalizedProps = instance.propsOptions[0]) && hasOwn(normalizedProps, key)\n      ) {\n        accessCache[key] = 3 /* PROPS */;\n        return props[key];\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n        accessCache[key] = 4 /* CONTEXT */;\n        return ctx[key];\n      } else if (shouldCacheAccess) {\n        accessCache[key] = 0 /* OTHER */;\n      }\n    }\n    const publicGetter = publicPropertiesMap[key];\n    let cssModule, globalProperties;\n    if (publicGetter) {\n      if (key === \"$attrs\") {\n        track(instance, \"get\", key);\n      }\n      return publicGetter(instance);\n    } else if (\n      // css module (injected by vue-loader)\n      (cssModule = type.__cssModules) && (cssModule = cssModule[key])\n    ) {\n      return cssModule;\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n      accessCache[key] = 4 /* CONTEXT */;\n      return ctx[key];\n    } else if (\n      // global properties\n      globalProperties = appContext.config.globalProperties, hasOwn(globalProperties, key)\n    ) {\n      {\n        return globalProperties[key];\n      }\n    } else ;\n  },\n  set({ _: instance }, key, value) {\n    const { data, setupState, ctx } = instance;\n    if (hasSetupBinding(setupState, key)) {\n      setupState[key] = value;\n      return true;\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n      data[key] = value;\n      return true;\n    } else if (hasOwn(instance.props, key)) {\n      return false;\n    }\n    if (key[0] === \"$\" && key.slice(1) in instance) {\n      return false;\n    } else {\n      {\n        ctx[key] = value;\n      }\n    }\n    return true;\n  },\n  has({\n    _: { data, setupState, accessCache, ctx, appContext, propsOptions }\n  }, key) {\n    let normalizedProps;\n    return !!accessCache[key] || data !== EMPTY_OBJ && hasOwn(data, key) || hasSetupBinding(setupState, key) || (normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key) || hasOwn(ctx, key) || hasOwn(publicPropertiesMap, key) || hasOwn(appContext.config.globalProperties, key);\n  },\n  defineProperty(target, key, descriptor) {\n    if (descriptor.get != null) {\n      target._.accessCache[key] = 0;\n    } else if (hasOwn(descriptor, \"value\")) {\n      this.set(target, key, descriptor.value, null);\n    }\n    return Reflect.defineProperty(target, key, descriptor);\n  }\n};\nfunction normalizePropsOrEmits(props) {\n  return isArray$1(props) ? props.reduce(\n    (normalized, p) => (normalized[p] = null, normalized),\n    {}\n  ) : props;\n}\nlet shouldCacheAccess = true;\nfunction applyOptions(instance) {\n  const options = resolveMergedOptions(instance);\n  const publicThis = instance.proxy;\n  const ctx = instance.ctx;\n  shouldCacheAccess = false;\n  if (options.beforeCreate) {\n    callHook$1(options.beforeCreate, instance, \"bc\");\n  }\n  const {\n    // state\n    data: dataOptions,\n    computed: computedOptions,\n    methods,\n    watch: watchOptions,\n    provide: provideOptions,\n    inject: injectOptions,\n    // lifecycle\n    created,\n    beforeMount,\n    mounted,\n    beforeUpdate,\n    updated,\n    activated,\n    deactivated,\n    beforeDestroy,\n    beforeUnmount,\n    destroyed,\n    unmounted,\n    render,\n    renderTracked,\n    renderTriggered,\n    errorCaptured,\n    serverPrefetch,\n    // public API\n    expose,\n    inheritAttrs,\n    // assets\n    components,\n    directives,\n    filters\n  } = options;\n  const checkDuplicateProperties = null;\n  if (injectOptions) {\n    resolveInjections(injectOptions, ctx, checkDuplicateProperties);\n  }\n  if (methods) {\n    for (const key in methods) {\n      const methodHandler = methods[key];\n      if (isFunction(methodHandler)) {\n        {\n          ctx[key] = methodHandler.bind(publicThis);\n        }\n      }\n    }\n  }\n  if (dataOptions) {\n    const data = dataOptions.call(publicThis, publicThis);\n    if (!isObject(data)) ; else {\n      instance.data = reactive(data);\n    }\n  }\n  shouldCacheAccess = true;\n  if (computedOptions) {\n    for (const key in computedOptions) {\n      const opt = computedOptions[key];\n      const get = isFunction(opt) ? opt.bind(publicThis, publicThis) : isFunction(opt.get) ? opt.get.bind(publicThis, publicThis) : NOOP;\n      const set = !isFunction(opt) && isFunction(opt.set) ? opt.set.bind(publicThis) : NOOP;\n      const c = computed({\n        get,\n        set\n      });\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => c.value,\n        set: (v) => c.value = v\n      });\n    }\n  }\n  if (watchOptions) {\n    for (const key in watchOptions) {\n      createWatcher(watchOptions[key], ctx, publicThis, key);\n    }\n  }\n  if (provideOptions) {\n    const provides = isFunction(provideOptions) ? provideOptions.call(publicThis) : provideOptions;\n    Reflect.ownKeys(provides).forEach((key) => {\n      provide(key, provides[key]);\n    });\n  }\n  if (created) {\n    callHook$1(created, instance, \"c\");\n  }\n  function registerLifecycleHook(register, hook) {\n    if (isArray$1(hook)) {\n      hook.forEach((_hook) => register(_hook.bind(publicThis)));\n    } else if (hook) {\n      register(hook.bind(publicThis));\n    }\n  }\n  registerLifecycleHook(onBeforeMount, beforeMount);\n  registerLifecycleHook(onMounted, mounted);\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate);\n  registerLifecycleHook(onUpdated, updated);\n  registerLifecycleHook(onActivated, activated);\n  registerLifecycleHook(onDeactivated, deactivated);\n  registerLifecycleHook(onErrorCaptured, errorCaptured);\n  registerLifecycleHook(onRenderTracked, renderTracked);\n  registerLifecycleHook(onRenderTriggered, renderTriggered);\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount);\n  registerLifecycleHook(onUnmounted, unmounted);\n  registerLifecycleHook(onServerPrefetch, serverPrefetch);\n  if (isArray$1(expose)) {\n    if (expose.length) {\n      const exposed = instance.exposed || (instance.exposed = {});\n      expose.forEach((key) => {\n        Object.defineProperty(exposed, key, {\n          get: () => publicThis[key],\n          set: (val) => publicThis[key] = val\n        });\n      });\n    } else if (!instance.exposed) {\n      instance.exposed = {};\n    }\n  }\n  if (render && instance.render === NOOP) {\n    instance.render = render;\n  }\n  if (inheritAttrs != null) {\n    instance.inheritAttrs = inheritAttrs;\n  }\n  if (components)\n    instance.components = components;\n  if (directives)\n    instance.directives = directives;\n}\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP) {\n  if (isArray$1(injectOptions)) {\n    injectOptions = normalizeInject(injectOptions);\n  }\n  for (const key in injectOptions) {\n    const opt = injectOptions[key];\n    let injected;\n    if (isObject(opt)) {\n      if (\"default\" in opt) {\n        injected = inject(\n          opt.from || key,\n          opt.default,\n          true\n        );\n      } else {\n        injected = inject(opt.from || key);\n      }\n    } else {\n      injected = inject(opt);\n    }\n    if (isRef(injected)) {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => injected.value,\n        set: (v) => injected.value = v\n      });\n    } else {\n      ctx[key] = injected;\n    }\n  }\n}\nfunction callHook$1(hook, instance, type) {\n  callWithAsyncErrorHandling(\n    isArray$1(hook) ? hook.map((h) => h.bind(instance.proxy)) : hook.bind(instance.proxy),\n    instance,\n    type\n  );\n}\nfunction createWatcher(raw, ctx, publicThis, key) {\n  const getter = key.includes(\".\") ? createPathGetter(publicThis, key) : () => publicThis[key];\n  if (isString(raw)) {\n    const handler = ctx[raw];\n    if (isFunction(handler)) {\n      watch(getter, handler);\n    }\n  } else if (isFunction(raw)) {\n    watch(getter, raw.bind(publicThis));\n  } else if (isObject(raw)) {\n    if (isArray$1(raw)) {\n      raw.forEach((r) => createWatcher(r, ctx, publicThis, key));\n    } else {\n      const handler = isFunction(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];\n      if (isFunction(handler)) {\n        watch(getter, handler, raw);\n      }\n    }\n  } else ;\n}\nfunction resolveMergedOptions(instance) {\n  const base = instance.type;\n  const { mixins, extends: extendsOptions } = base;\n  const {\n    mixins: globalMixins,\n    optionsCache: cache,\n    config: { optionMergeStrategies }\n  } = instance.appContext;\n  const cached = cache.get(base);\n  let resolved;\n  if (cached) {\n    resolved = cached;\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\n    {\n      resolved = base;\n    }\n  } else {\n    resolved = {};\n    if (globalMixins.length) {\n      globalMixins.forEach(\n        (m) => mergeOptions$1(resolved, m, optionMergeStrategies, true)\n      );\n    }\n    mergeOptions$1(resolved, base, optionMergeStrategies);\n  }\n  if (isObject(base)) {\n    cache.set(base, resolved);\n  }\n  return resolved;\n}\nfunction mergeOptions$1(to, from, strats, asMixin = false) {\n  const { mixins, extends: extendsOptions } = from;\n  if (extendsOptions) {\n    mergeOptions$1(to, extendsOptions, strats, true);\n  }\n  if (mixins) {\n    mixins.forEach(\n      (m) => mergeOptions$1(to, m, strats, true)\n    );\n  }\n  for (const key in from) {\n    if (asMixin && key === \"expose\") ; else {\n      const strat = internalOptionMergeStrats[key] || strats && strats[key];\n      to[key] = strat ? strat(to[key], from[key]) : from[key];\n    }\n  }\n  return to;\n}\nconst internalOptionMergeStrats = {\n  data: mergeDataFn,\n  props: mergeEmitsOrPropsOptions,\n  emits: mergeEmitsOrPropsOptions,\n  // objects\n  methods: mergeObjectOptions,\n  computed: mergeObjectOptions,\n  // lifecycle\n  beforeCreate: mergeAsArray,\n  created: mergeAsArray,\n  beforeMount: mergeAsArray,\n  mounted: mergeAsArray,\n  beforeUpdate: mergeAsArray,\n  updated: mergeAsArray,\n  beforeDestroy: mergeAsArray,\n  beforeUnmount: mergeAsArray,\n  destroyed: mergeAsArray,\n  unmounted: mergeAsArray,\n  activated: mergeAsArray,\n  deactivated: mergeAsArray,\n  errorCaptured: mergeAsArray,\n  serverPrefetch: mergeAsArray,\n  // assets\n  components: mergeObjectOptions,\n  directives: mergeObjectOptions,\n  // watch\n  watch: mergeWatchOptions,\n  // provide / inject\n  provide: mergeDataFn,\n  inject: mergeInject\n};\nfunction mergeDataFn(to, from) {\n  if (!from) {\n    return to;\n  }\n  if (!to) {\n    return from;\n  }\n  return function mergedDataFn() {\n    return (extend)(\n      isFunction(to) ? to.call(this, this) : to,\n      isFunction(from) ? from.call(this, this) : from\n    );\n  };\n}\nfunction mergeInject(to, from) {\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\n}\nfunction normalizeInject(raw) {\n  if (isArray$1(raw)) {\n    const res = {};\n    for (let i = 0; i < raw.length; i++) {\n      res[raw[i]] = raw[i];\n    }\n    return res;\n  }\n  return raw;\n}\nfunction mergeAsArray(to, from) {\n  return to ? [...new Set([].concat(to, from))] : from;\n}\nfunction mergeObjectOptions(to, from) {\n  return to ? extend(/* @__PURE__ */ Object.create(null), to, from) : from;\n}\nfunction mergeEmitsOrPropsOptions(to, from) {\n  if (to) {\n    if (isArray$1(to) && isArray$1(from)) {\n      return [.../* @__PURE__ */ new Set([...to, ...from])];\n    }\n    return extend(\n      /* @__PURE__ */ Object.create(null),\n      normalizePropsOrEmits(to),\n      normalizePropsOrEmits(from != null ? from : {})\n    );\n  } else {\n    return from;\n  }\n}\nfunction mergeWatchOptions(to, from) {\n  if (!to)\n    return from;\n  if (!from)\n    return to;\n  const merged = extend(/* @__PURE__ */ Object.create(null), to);\n  for (const key in from) {\n    merged[key] = mergeAsArray(to[key], from[key]);\n  }\n  return merged;\n}\n\nfunction createAppContext() {\n  return {\n    app: null,\n    config: {\n      isNativeTag: NO,\n      performance: false,\n      globalProperties: {},\n      optionMergeStrategies: {},\n      errorHandler: void 0,\n      warnHandler: void 0,\n      compilerOptions: {}\n    },\n    mixins: [],\n    components: {},\n    directives: {},\n    provides: /* @__PURE__ */ Object.create(null),\n    optionsCache: /* @__PURE__ */ new WeakMap(),\n    propsCache: /* @__PURE__ */ new WeakMap(),\n    emitsCache: /* @__PURE__ */ new WeakMap()\n  };\n}\nlet uid$1 = 0;\nfunction createAppAPI(render, hydrate) {\n  return function createApp(rootComponent, rootProps = null) {\n    if (!isFunction(rootComponent)) {\n      rootComponent = extend({}, rootComponent);\n    }\n    if (rootProps != null && !isObject(rootProps)) {\n      rootProps = null;\n    }\n    const context = createAppContext();\n    const installedPlugins = /* @__PURE__ */ new WeakSet();\n    let isMounted = false;\n    const app = context.app = {\n      _uid: uid$1++,\n      _component: rootComponent,\n      _props: rootProps,\n      _container: null,\n      _context: context,\n      _instance: null,\n      version,\n      get config() {\n        return context.config;\n      },\n      set config(v) {\n      },\n      use(plugin, ...options) {\n        if (installedPlugins.has(plugin)) ; else if (plugin && isFunction(plugin.install)) {\n          installedPlugins.add(plugin);\n          plugin.install(app, ...options);\n        } else if (isFunction(plugin)) {\n          installedPlugins.add(plugin);\n          plugin(app, ...options);\n        } else ;\n        return app;\n      },\n      mixin(mixin) {\n        {\n          if (!context.mixins.includes(mixin)) {\n            context.mixins.push(mixin);\n          }\n        }\n        return app;\n      },\n      component(name, component) {\n        if (!component) {\n          return context.components[name];\n        }\n        context.components[name] = component;\n        return app;\n      },\n      directive(name, directive) {\n        if (!directive) {\n          return context.directives[name];\n        }\n        context.directives[name] = directive;\n        return app;\n      },\n      mount(rootContainer, isHydrate, namespace) {\n        if (!isMounted) {\n          const vnode = createVNode(rootComponent, rootProps);\n          vnode.appContext = context;\n          if (namespace === true) {\n            namespace = \"svg\";\n          } else if (namespace === false) {\n            namespace = void 0;\n          }\n          if (isHydrate && hydrate) {\n            hydrate(vnode, rootContainer);\n          } else {\n            render(vnode, rootContainer, namespace);\n          }\n          isMounted = true;\n          app._container = rootContainer;\n          rootContainer.__vue_app__ = app;\n          return getExposeProxy(vnode.component) || vnode.component.proxy;\n        }\n      },\n      unmount() {\n        if (isMounted) {\n          render(null, app._container);\n          delete app._container.__vue_app__;\n        }\n      },\n      provide(key, value) {\n        context.provides[key] = value;\n        return app;\n      },\n      runWithContext(fn) {\n        const lastApp = currentApp;\n        currentApp = app;\n        try {\n          return fn();\n        } finally {\n          currentApp = lastApp;\n        }\n      }\n    };\n    return app;\n  };\n}\nlet currentApp = null;\n\nfunction provide(key, value) {\n  if (!currentInstance) ; else {\n    let provides = currentInstance.provides;\n    const parentProvides = currentInstance.parent && currentInstance.parent.provides;\n    if (parentProvides === provides) {\n      provides = currentInstance.provides = Object.create(parentProvides);\n    }\n    provides[key] = value;\n  }\n}\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\n  const instance = currentInstance || currentRenderingInstance;\n  if (instance || currentApp) {\n    const provides = instance ? instance.parent == null ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides : currentApp._context.provides;\n    if (provides && key in provides) {\n      return provides[key];\n    } else if (arguments.length > 1) {\n      return treatDefaultAsFactory && isFunction(defaultValue) ? defaultValue.call(instance && instance.proxy) : defaultValue;\n    } else ;\n  }\n}\n\nfunction initProps(instance, rawProps, isStateful, isSSR = false) {\n  const props = {};\n  const attrs = {};\n  def(attrs, InternalObjectKey, 1);\n  instance.propsDefaults = /* @__PURE__ */ Object.create(null);\n  setFullProps(instance, rawProps, props, attrs);\n  for (const key in instance.propsOptions[0]) {\n    if (!(key in props)) {\n      props[key] = void 0;\n    }\n  }\n  if (isStateful) {\n    instance.props = isSSR ? props : shallowReactive(props);\n  } else {\n    if (!instance.type.props) {\n      instance.props = attrs;\n    } else {\n      instance.props = props;\n    }\n  }\n  instance.attrs = attrs;\n}\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\n  const {\n    props,\n    attrs,\n    vnode: { patchFlag }\n  } = instance;\n  const rawCurrentProps = toRaw(props);\n  const [options] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  if (\n    // always force full diff in dev\n    // - #1942 if hmr is enabled with sfc component\n    // - vite#872 non-sfc component used by sfc component\n    (optimized || patchFlag > 0) && !(patchFlag & 16)\n  ) {\n    if (patchFlag & 8) {\n      const propsToUpdate = instance.vnode.dynamicProps;\n      for (let i = 0; i < propsToUpdate.length; i++) {\n        let key = propsToUpdate[i];\n        if (isEmitListener(instance.emitsOptions, key)) {\n          continue;\n        }\n        const value = rawProps[key];\n        if (options) {\n          if (hasOwn(attrs, key)) {\n            if (value !== attrs[key]) {\n              attrs[key] = value;\n              hasAttrsChanged = true;\n            }\n          } else {\n            const camelizedKey = camelize(key);\n            props[camelizedKey] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              camelizedKey,\n              value,\n              instance,\n              false\n            );\n          }\n        } else {\n          if (value !== attrs[key]) {\n            attrs[key] = value;\n            hasAttrsChanged = true;\n          }\n        }\n      }\n    }\n  } else {\n    if (setFullProps(instance, rawProps, props, attrs)) {\n      hasAttrsChanged = true;\n    }\n    let kebabKey;\n    for (const key in rawCurrentProps) {\n      if (!rawProps || // for camelCase\n      !hasOwn(rawProps, key) && // it's possible the original props was passed in as kebab-case\n      // and converted to camelCase (#955)\n      ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey))) {\n        if (options) {\n          if (rawPrevProps && // for camelCase\n          (rawPrevProps[key] !== void 0 || // for kebab-case\n          rawPrevProps[kebabKey] !== void 0)) {\n            props[key] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              key,\n              void 0,\n              instance,\n              true\n            );\n          }\n        } else {\n          delete props[key];\n        }\n      }\n    }\n    if (attrs !== rawCurrentProps) {\n      for (const key in attrs) {\n        if (!rawProps || !hasOwn(rawProps, key) && true) {\n          delete attrs[key];\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (hasAttrsChanged) {\n    trigger(instance, \"set\", \"$attrs\");\n  }\n}\nfunction setFullProps(instance, rawProps, props, attrs) {\n  const [options, needCastKeys] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  let rawCastValues;\n  if (rawProps) {\n    for (let key in rawProps) {\n      if (isReservedProp(key)) {\n        continue;\n      }\n      const value = rawProps[key];\n      let camelKey;\n      if (options && hasOwn(options, camelKey = camelize(key))) {\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\n          props[camelKey] = value;\n        } else {\n          (rawCastValues || (rawCastValues = {}))[camelKey] = value;\n        }\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\n        if (!(key in attrs) || value !== attrs[key]) {\n          attrs[key] = value;\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (needCastKeys) {\n    const rawCurrentProps = toRaw(props);\n    const castValues = rawCastValues || EMPTY_OBJ;\n    for (let i = 0; i < needCastKeys.length; i++) {\n      const key = needCastKeys[i];\n      props[key] = resolvePropValue(\n        options,\n        rawCurrentProps,\n        key,\n        castValues[key],\n        instance,\n        !hasOwn(castValues, key)\n      );\n    }\n  }\n  return hasAttrsChanged;\n}\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\n  const opt = options[key];\n  if (opt != null) {\n    const hasDefault = hasOwn(opt, \"default\");\n    if (hasDefault && value === void 0) {\n      const defaultValue = opt.default;\n      if (opt.type !== Function && !opt.skipFactory && isFunction(defaultValue)) {\n        const { propsDefaults } = instance;\n        if (key in propsDefaults) {\n          value = propsDefaults[key];\n        } else {\n          const reset = setCurrentInstance(instance);\n          value = propsDefaults[key] = defaultValue.call(\n            null,\n            props\n          );\n          reset();\n        }\n      } else {\n        value = defaultValue;\n      }\n    }\n    if (opt[0 /* shouldCast */]) {\n      if (isAbsent && !hasDefault) {\n        value = false;\n      } else if (opt[1 /* shouldCastTrue */] && (value === \"\" || value === hyphenate(key))) {\n        value = true;\n      }\n    }\n  }\n  return value;\n}\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.propsCache;\n  const cached = cache.get(comp);\n  if (cached) {\n    return cached;\n  }\n  const raw = comp.props;\n  const normalized = {};\n  const needCastKeys = [];\n  let hasExtends = false;\n  if (!isFunction(comp)) {\n    const extendProps = (raw2) => {\n      hasExtends = true;\n      const [props, keys] = normalizePropsOptions(raw2, appContext, true);\n      extend(normalized, props);\n      if (keys)\n        needCastKeys.push(...keys);\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendProps);\n    }\n    if (comp.extends) {\n      extendProps(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendProps);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (isObject(comp)) {\n      cache.set(comp, EMPTY_ARR);\n    }\n    return EMPTY_ARR;\n  }\n  if (isArray$1(raw)) {\n    for (let i = 0; i < raw.length; i++) {\n      const normalizedKey = camelize(raw[i]);\n      if (validatePropName(normalizedKey)) {\n        normalized[normalizedKey] = EMPTY_OBJ;\n      }\n    }\n  } else if (raw) {\n    for (const key in raw) {\n      const normalizedKey = camelize(key);\n      if (validatePropName(normalizedKey)) {\n        const opt = raw[key];\n        const prop = normalized[normalizedKey] = isArray$1(opt) || isFunction(opt) ? { type: opt } : extend({}, opt);\n        if (prop) {\n          const booleanIndex = getTypeIndex(Boolean, prop.type);\n          const stringIndex = getTypeIndex(String, prop.type);\n          prop[0 /* shouldCast */] = booleanIndex > -1;\n          prop[1 /* shouldCastTrue */] = stringIndex < 0 || booleanIndex < stringIndex;\n          if (booleanIndex > -1 || hasOwn(prop, \"default\")) {\n            needCastKeys.push(normalizedKey);\n          }\n        }\n      }\n    }\n  }\n  const res = [normalized, needCastKeys];\n  if (isObject(comp)) {\n    cache.set(comp, res);\n  }\n  return res;\n}\nfunction validatePropName(key) {\n  if (key[0] !== \"$\" && !isReservedProp(key)) {\n    return true;\n  }\n  return false;\n}\nfunction getType(ctor) {\n  if (ctor === null) {\n    return \"null\";\n  }\n  if (typeof ctor === \"function\") {\n    return ctor.name || \"\";\n  } else if (typeof ctor === \"object\") {\n    const name = ctor.constructor && ctor.constructor.name;\n    return name || \"\";\n  }\n  return \"\";\n}\nfunction isSameType(a, b) {\n  return getType(a) === getType(b);\n}\nfunction getTypeIndex(type, expectedTypes) {\n  if (isArray$1(expectedTypes)) {\n    return expectedTypes.findIndex((t) => isSameType(t, type));\n  } else if (isFunction(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1;\n  }\n  return -1;\n}\n\nconst isInternalKey = (key) => key[0] === \"_\" || key === \"$stable\";\nconst normalizeSlotValue = (value) => isArray$1(value) ? value.map(normalizeVNode) : [normalizeVNode(value)];\nconst normalizeSlot$1 = (key, rawSlot, ctx) => {\n  if (rawSlot._n) {\n    return rawSlot;\n  }\n  const normalized = withCtx((...args) => {\n    if (!!(\"production\" !== \"production\") && currentInstance && (!ctx || ctx.root === currentInstance.root)) ;\n    return normalizeSlotValue(rawSlot(...args));\n  }, ctx);\n  normalized._c = false;\n  return normalized;\n};\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\n  const ctx = rawSlots._ctx;\n  for (const key in rawSlots) {\n    if (isInternalKey(key))\n      continue;\n    const value = rawSlots[key];\n    if (isFunction(value)) {\n      slots[key] = normalizeSlot$1(key, value, ctx);\n    } else if (value != null) {\n      const normalized = normalizeSlotValue(value);\n      slots[key] = () => normalized;\n    }\n  }\n};\nconst normalizeVNodeSlots = (instance, children) => {\n  const normalized = normalizeSlotValue(children);\n  instance.slots.default = () => normalized;\n};\nconst initSlots = (instance, children) => {\n  if (instance.vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      instance.slots = toRaw(children);\n      def(children, \"_\", type);\n    } else {\n      normalizeObjectSlots(\n        children,\n        instance.slots = {});\n    }\n  } else {\n    instance.slots = {};\n    if (children) {\n      normalizeVNodeSlots(instance, children);\n    }\n  }\n  def(instance.slots, InternalObjectKey, 1);\n};\nconst updateSlots = (instance, children, optimized) => {\n  const { vnode, slots } = instance;\n  let needDeletionCheck = true;\n  let deletionComparisonTarget = EMPTY_OBJ;\n  if (vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      if (optimized && type === 1) {\n        needDeletionCheck = false;\n      } else {\n        extend(slots, children);\n        if (!optimized && type === 1) {\n          delete slots._;\n        }\n      }\n    } else {\n      needDeletionCheck = !children.$stable;\n      normalizeObjectSlots(children, slots);\n    }\n    deletionComparisonTarget = children;\n  } else if (children) {\n    normalizeVNodeSlots(instance, children);\n    deletionComparisonTarget = { default: 1 };\n  }\n  if (needDeletionCheck) {\n    for (const key in slots) {\n      if (!isInternalKey(key) && deletionComparisonTarget[key] == null) {\n        delete slots[key];\n      }\n    }\n  }\n};\n\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\n  if (isArray$1(rawRef)) {\n    rawRef.forEach(\n      (r, i) => setRef(\n        r,\n        oldRawRef && (isArray$1(oldRawRef) ? oldRawRef[i] : oldRawRef),\n        parentSuspense,\n        vnode,\n        isUnmount\n      )\n    );\n    return;\n  }\n  if (isAsyncWrapper(vnode) && !isUnmount) {\n    return;\n  }\n  const refValue = vnode.shapeFlag & 4 ? getExposeProxy(vnode.component) || vnode.component.proxy : vnode.el;\n  const value = isUnmount ? null : refValue;\n  const { i: owner, r: ref } = rawRef;\n  const oldRef = oldRawRef && oldRawRef.r;\n  const refs = owner.refs === EMPTY_OBJ ? owner.refs = {} : owner.refs;\n  const setupState = owner.setupState;\n  if (oldRef != null && oldRef !== ref) {\n    if (isString(oldRef)) {\n      refs[oldRef] = null;\n      if (hasOwn(setupState, oldRef)) {\n        setupState[oldRef] = null;\n      }\n    } else if (isRef(oldRef)) {\n      oldRef.value = null;\n    }\n  }\n  if (isFunction(ref)) {\n    callWithErrorHandling(ref, owner, 12, [value, refs]);\n  } else {\n    const _isString = isString(ref);\n    const _isRef = isRef(ref);\n    if (_isString || _isRef) {\n      const doSet = () => {\n        if (rawRef.f) {\n          const existing = _isString ? hasOwn(setupState, ref) ? setupState[ref] : refs[ref] : ref.value;\n          if (isUnmount) {\n            isArray$1(existing) && remove(existing, refValue);\n          } else {\n            if (!isArray$1(existing)) {\n              if (_isString) {\n                refs[ref] = [refValue];\n                if (hasOwn(setupState, ref)) {\n                  setupState[ref] = refs[ref];\n                }\n              } else {\n                ref.value = [refValue];\n                if (rawRef.k)\n                  refs[rawRef.k] = ref.value;\n              }\n            } else if (!existing.includes(refValue)) {\n              existing.push(refValue);\n            }\n          }\n        } else if (_isString) {\n          refs[ref] = value;\n          if (hasOwn(setupState, ref)) {\n            setupState[ref] = value;\n          }\n        } else if (_isRef) {\n          ref.value = value;\n          if (rawRef.k)\n            refs[rawRef.k] = value;\n        } else ;\n      };\n      if (value) {\n        doSet.id = -1;\n        queuePostRenderEffect(doSet, parentSuspense);\n      } else {\n        doSet();\n      }\n    }\n  }\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense ;\nfunction createRenderer(options) {\n  return baseCreateRenderer(options);\n}\nfunction baseCreateRenderer(options, createHydrationFns) {\n  const target = getGlobalThis();\n  target.__VUE__ = true;\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    createComment: hostCreateComment,\n    setText: hostSetText,\n    setElementText: hostSetElementText,\n    parentNode: hostParentNode,\n    nextSibling: hostNextSibling,\n    setScopeId: hostSetScopeId = NOOP,\n    insertStaticContent: hostInsertStaticContent\n  } = options;\n  const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, namespace = void 0, slotScopeIds = null, optimized = !!n2.dynamicChildren) => {\n    if (n1 === n2) {\n      return;\n    }\n    if (n1 && !isSameVNodeType(n1, n2)) {\n      anchor = getNextHostNode(n1);\n      unmount(n1, parentComponent, parentSuspense, true);\n      n1 = null;\n    }\n    if (n2.patchFlag === -2) {\n      optimized = false;\n      n2.dynamicChildren = null;\n    }\n    const { type, ref, shapeFlag } = n2;\n    switch (type) {\n      case Text:\n        processText(n1, n2, container, anchor);\n        break;\n      case Comment:\n        processCommentNode(n1, n2, container, anchor);\n        break;\n      case Static:\n        if (n1 == null) {\n          mountStaticNode(n2, container, anchor, namespace);\n        }\n        break;\n      case Fragment:\n        processFragment(\n          n1,\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        break;\n      default:\n        if (shapeFlag & 1) {\n          processElement(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 6) {\n          processComponent(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 64) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else if (shapeFlag & 128) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else ;\n    }\n    if (ref != null && parentComponent) {\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\n    }\n  };\n  const processText = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateText(n2.children),\n        container,\n        anchor\n      );\n    } else {\n      const el = n2.el = n1.el;\n      if (n2.children !== n1.children) {\n        hostSetText(el, n2.children);\n      }\n    }\n  };\n  const processCommentNode = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateComment(n2.children || \"\"),\n        container,\n        anchor\n      );\n    } else {\n      n2.el = n1.el;\n    }\n  };\n  const mountStaticNode = (n2, container, anchor, namespace) => {\n    [n2.el, n2.anchor] = hostInsertStaticContent(\n      n2.children,\n      container,\n      anchor,\n      namespace,\n      n2.el,\n      n2.anchor\n    );\n  };\n  const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostInsert(el, container, nextSibling);\n      el = next;\n    }\n    hostInsert(anchor, container, nextSibling);\n  };\n  const removeStaticNode = ({ el, anchor }) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostRemove(el);\n      el = next;\n    }\n    hostRemove(anchor);\n  };\n  const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    if (n2.type === \"svg\") {\n      namespace = \"svg\";\n    } else if (n2.type === \"math\") {\n      namespace = \"mathml\";\n    }\n    if (n1 == null) {\n      mountElement(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      patchElement(\n        n1,\n        n2,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    let el;\n    let vnodeHook;\n    const { props, shapeFlag, transition, dirs } = vnode;\n    el = vnode.el = hostCreateElement(\n      vnode.type,\n      namespace,\n      props && props.is,\n      props\n    );\n    if (shapeFlag & 8) {\n      hostSetElementText(el, vnode.children);\n    } else if (shapeFlag & 16) {\n      mountChildren(\n        vnode.children,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(vnode, namespace),\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n    }\n    setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\n    if (props) {\n      for (const key in props) {\n        if (key !== \"value\" && !isReservedProp(key)) {\n          hostPatchProp(\n            el,\n            key,\n            null,\n            props[key],\n            namespace,\n            vnode.children,\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          );\n        }\n      }\n      if (\"value\" in props) {\n        hostPatchProp(el, \"value\", null, props.value, namespace);\n      }\n      if (vnodeHook = props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHook, parentComponent, vnode);\n      }\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n    }\n    const needCallTransitionHooks = needTransition(parentSuspense, transition);\n    if (needCallTransitionHooks) {\n      transition.beforeEnter(el);\n    }\n    hostInsert(el, container, anchor);\n    if ((vnodeHook = props && props.onVnodeMounted) || needCallTransitionHooks || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        needCallTransitionHooks && transition.enter(el);\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n      }, parentSuspense);\n    }\n  };\n  const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\n    if (scopeId) {\n      hostSetScopeId(el, scopeId);\n    }\n    if (slotScopeIds) {\n      for (let i = 0; i < slotScopeIds.length; i++) {\n        hostSetScopeId(el, slotScopeIds[i]);\n      }\n    }\n    if (parentComponent) {\n      let subTree = parentComponent.subTree;\n      if (vnode === subTree) {\n        const parentVNode = parentComponent.vnode;\n        setScopeId(\n          el,\n          parentVNode,\n          parentVNode.scopeId,\n          parentVNode.slotScopeIds,\n          parentComponent.parent\n        );\n      }\n    }\n  };\n  const mountChildren = (children, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      const child = children[i] = optimized ? cloneIfMounted(children[i]) : normalizeVNode(children[i]);\n      patch(\n        null,\n        child,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const patchElement = (n1, n2, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    const el = n2.el = n1.el;\n    let { patchFlag, dynamicChildren, dirs } = n2;\n    patchFlag |= n1.patchFlag & 16;\n    const oldProps = n1.props || EMPTY_OBJ;\n    const newProps = n2.props || EMPTY_OBJ;\n    let vnodeHook;\n    parentComponent && toggleRecurse(parentComponent, false);\n    if (vnodeHook = newProps.onVnodeBeforeUpdate) {\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n    }\n    if (dirs) {\n      invokeDirectiveHook(n2, n1, parentComponent, \"beforeUpdate\");\n    }\n    parentComponent && toggleRecurse(parentComponent, true);\n    if (dynamicChildren) {\n      patchBlockChildren(\n        n1.dynamicChildren,\n        dynamicChildren,\n        el,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(n2, namespace),\n        slotScopeIds\n      );\n    } else if (!optimized) {\n      patchChildren(\n        n1,\n        n2,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        resolveChildrenNamespace(n2, namespace),\n        slotScopeIds,\n        false\n      );\n    }\n    if (patchFlag > 0) {\n      if (patchFlag & 16) {\n        patchProps(\n          el,\n          n2,\n          oldProps,\n          newProps,\n          parentComponent,\n          parentSuspense,\n          namespace\n        );\n      } else {\n        if (patchFlag & 2) {\n          if (oldProps.class !== newProps.class) {\n            hostPatchProp(el, \"class\", null, newProps.class, namespace);\n          }\n        }\n        if (patchFlag & 4) {\n          hostPatchProp(el, \"style\", oldProps.style, newProps.style, namespace);\n        }\n        if (patchFlag & 8) {\n          const propsToUpdate = n2.dynamicProps;\n          for (let i = 0; i < propsToUpdate.length; i++) {\n            const key = propsToUpdate[i];\n            const prev = oldProps[key];\n            const next = newProps[key];\n            if (next !== prev || key === \"value\") {\n              hostPatchProp(\n                el,\n                key,\n                prev,\n                next,\n                namespace,\n                n1.children,\n                parentComponent,\n                parentSuspense,\n                unmountChildren\n              );\n            }\n          }\n        }\n      }\n      if (patchFlag & 1) {\n        if (n1.children !== n2.children) {\n          hostSetElementText(el, n2.children);\n        }\n      }\n    } else if (!optimized && dynamicChildren == null) {\n      patchProps(\n        el,\n        n2,\n        oldProps,\n        newProps,\n        parentComponent,\n        parentSuspense,\n        namespace\n      );\n    }\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, \"updated\");\n      }, parentSuspense);\n    }\n  };\n  const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, namespace, slotScopeIds) => {\n    for (let i = 0; i < newChildren.length; i++) {\n      const oldVNode = oldChildren[i];\n      const newVNode = newChildren[i];\n      const container = (\n        // oldVNode may be an errored async setup() component inside Suspense\n        // which will not have a mounted element\n        oldVNode.el && // - In the case of a Fragment, we need to provide the actual parent\n        // of the Fragment itself so it can move its children.\n        (oldVNode.type === Fragment || // - In the case of different nodes, there is going to be a replacement\n        // which also requires the correct parent container\n        !isSameVNodeType(oldVNode, newVNode) || // - In the case of a component, it could contain anything.\n        oldVNode.shapeFlag & (6 | 64)) ? hostParentNode(oldVNode.el) : (\n          // In other cases, the parent container is not actually used so we\n          // just pass the block element here to avoid a DOM parentNode call.\n          fallbackContainer\n        )\n      );\n      patch(\n        oldVNode,\n        newVNode,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        true\n      );\n    }\n  };\n  const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, namespace) => {\n    if (oldProps !== newProps) {\n      if (oldProps !== EMPTY_OBJ) {\n        for (const key in oldProps) {\n          if (!isReservedProp(key) && !(key in newProps)) {\n            hostPatchProp(\n              el,\n              key,\n              oldProps[key],\n              null,\n              namespace,\n              vnode.children,\n              parentComponent,\n              parentSuspense,\n              unmountChildren\n            );\n          }\n        }\n      }\n      for (const key in newProps) {\n        if (isReservedProp(key))\n          continue;\n        const next = newProps[key];\n        const prev = oldProps[key];\n        if (next !== prev && key !== \"value\") {\n          hostPatchProp(\n            el,\n            key,\n            prev,\n            next,\n            namespace,\n            vnode.children,\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          );\n        }\n      }\n      if (\"value\" in newProps) {\n        hostPatchProp(el, \"value\", oldProps.value, newProps.value, namespace);\n      }\n    }\n  };\n  const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    const fragmentStartAnchor = n2.el = n1 ? n1.el : hostCreateText(\"\");\n    const fragmentEndAnchor = n2.anchor = n1 ? n1.anchor : hostCreateText(\"\");\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    if (n1 == null) {\n      hostInsert(fragmentStartAnchor, container, anchor);\n      hostInsert(fragmentEndAnchor, container, anchor);\n      mountChildren(\n        // #10007\n        // such fragment like `<></>` will be compiled into\n        // a fragment which doesn't have a children.\n        // In this case fallback to an empty array\n        n2.children || [],\n        container,\n        fragmentEndAnchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      if (patchFlag > 0 && patchFlag & 64 && dynamicChildren && // #2715 the previous fragment could've been a BAILed one as a result\n      // of renderSlot() with no valid children\n      n1.dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          container,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds\n        );\n        if (\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\n          //  get moved around. Make sure all root level vnodes inherit el.\n          // #2134 or if it's a component root, it may also get moved around\n          // as the component is being moved.\n          n2.key != null || parentComponent && n2 === parentComponent.subTree\n        ) {\n          traverseStaticChildren(\n            n1,\n            n2,\n            true\n            /* shallow */\n          );\n        }\n      } else {\n        patchChildren(\n          n1,\n          n2,\n          container,\n          fragmentEndAnchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n  };\n  const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    n2.slotScopeIds = slotScopeIds;\n    if (n1 == null) {\n      if (n2.shapeFlag & 512) {\n        parentComponent.ctx.activate(\n          n2,\n          container,\n          anchor,\n          namespace,\n          optimized\n        );\n      } else {\n        mountComponent(\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          optimized\n        );\n      }\n    } else {\n      updateComponent(n1, n2, optimized);\n    }\n  };\n  const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, namespace, optimized) => {\n    const instance = (initialVNode.component = createComponentInstance(\n      initialVNode,\n      parentComponent,\n      parentSuspense\n    ));\n    if (isKeepAlive(initialVNode)) {\n      instance.ctx.renderer = internals;\n    }\n    {\n      setupComponent(instance);\n    }\n    if (instance.asyncDep) {\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\n      if (!initialVNode.el) {\n        const placeholder = instance.subTree = createVNode(Comment);\n        processCommentNode(null, placeholder, container, anchor);\n      }\n    } else {\n      setupRenderEffect(\n        instance,\n        initialVNode,\n        container,\n        anchor,\n        parentSuspense,\n        namespace,\n        optimized\n      );\n    }\n  };\n  const updateComponent = (n1, n2, optimized) => {\n    const instance = n2.component = n1.component;\n    if (shouldUpdateComponent(n1, n2, optimized)) {\n      if (instance.asyncDep && !instance.asyncResolved) {\n        updateComponentPreRender(instance, n2, optimized);\n        return;\n      } else {\n        instance.next = n2;\n        invalidateJob(instance.update);\n        instance.effect.dirty = true;\n        instance.update();\n      }\n    } else {\n      n2.el = n1.el;\n      instance.vnode = n2;\n    }\n  };\n  const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, namespace, optimized) => {\n    const componentUpdateFn = () => {\n      if (!instance.isMounted) {\n        let vnodeHook;\n        const { el, props } = initialVNode;\n        const { bm, m, parent } = instance;\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\n        toggleRecurse(instance, false);\n        if (bm) {\n          invokeArrayFns(bm);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeBeforeMount)) {\n          invokeVNodeHook(vnodeHook, parent, initialVNode);\n        }\n        toggleRecurse(instance, true);\n        if (el && hydrateNode) {\n          const hydrateSubTree = () => {\n            instance.subTree = renderComponentRoot(instance);\n            hydrateNode(\n              el,\n              instance.subTree,\n              instance,\n              parentSuspense,\n              null\n            );\n          };\n          if (isAsyncWrapperVNode) {\n            initialVNode.type.__asyncLoader().then(\n              // note: we are moving the render call into an async callback,\n              // which means it won't track dependencies - but it's ok because\n              // a server-rendered async wrapper is already in resolved state\n              // and it will never need to change.\n              () => !instance.isUnmounted && hydrateSubTree()\n            );\n          } else {\n            hydrateSubTree();\n          }\n        } else {\n          const subTree = instance.subTree = renderComponentRoot(instance);\n          patch(\n            null,\n            subTree,\n            container,\n            anchor,\n            instance,\n            parentSuspense,\n            namespace\n          );\n          initialVNode.el = subTree.el;\n        }\n        if (m) {\n          queuePostRenderEffect(m, parentSuspense);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeMounted)) {\n          const scopedInitialVNode = initialVNode;\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode),\n            parentSuspense\n          );\n        }\n        if (initialVNode.shapeFlag & 256 || parent && isAsyncWrapper(parent.vnode) && parent.vnode.shapeFlag & 256) {\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense);\n        }\n        instance.isMounted = true;\n        initialVNode = container = anchor = null;\n      } else {\n        let { next, bu, u, parent, vnode } = instance;\n        {\n          const nonHydratedAsyncRoot = locateNonHydratedAsyncRoot(instance);\n          if (nonHydratedAsyncRoot) {\n            if (next) {\n              next.el = vnode.el;\n              updateComponentPreRender(instance, next, optimized);\n            }\n            nonHydratedAsyncRoot.asyncDep.then(() => {\n              if (!instance.isUnmounted) {\n                componentUpdateFn();\n              }\n            });\n            return;\n          }\n        }\n        let originNext = next;\n        let vnodeHook;\n        toggleRecurse(instance, false);\n        if (next) {\n          next.el = vnode.el;\n          updateComponentPreRender(instance, next, optimized);\n        } else {\n          next = vnode;\n        }\n        if (bu) {\n          invokeArrayFns(bu);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeBeforeUpdate) {\n          invokeVNodeHook(vnodeHook, parent, next, vnode);\n        }\n        toggleRecurse(instance, true);\n        const nextTree = renderComponentRoot(instance);\n        const prevTree = instance.subTree;\n        instance.subTree = nextTree;\n        patch(\n          prevTree,\n          nextTree,\n          // parent may have changed if it's in a teleport\n          hostParentNode(prevTree.el),\n          // anchor may have changed if it's in a fragment\n          getNextHostNode(prevTree),\n          instance,\n          parentSuspense,\n          namespace\n        );\n        next.el = nextTree.el;\n        if (originNext === null) {\n          updateHOCHostEl(instance, nextTree.el);\n        }\n        if (u) {\n          queuePostRenderEffect(u, parentSuspense);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeUpdated) {\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, next, vnode),\n            parentSuspense\n          );\n        }\n      }\n    };\n    const effect = instance.effect = new ReactiveEffect(\n      componentUpdateFn,\n      NOOP,\n      () => queueJob(update),\n      instance.scope\n      // track it in component's effect scope\n    );\n    const update = instance.update = () => {\n      if (effect.dirty) {\n        effect.run();\n      }\n    };\n    update.id = instance.uid;\n    toggleRecurse(instance, true);\n    update();\n  };\n  const updateComponentPreRender = (instance, nextVNode, optimized) => {\n    nextVNode.component = instance;\n    const prevProps = instance.vnode.props;\n    instance.vnode = nextVNode;\n    instance.next = null;\n    updateProps(instance, nextVNode.props, prevProps, optimized);\n    updateSlots(instance, nextVNode.children, optimized);\n    pauseTracking();\n    flushPreFlushCbs(instance);\n    resetTracking();\n  };\n  const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized = false) => {\n    const c1 = n1 && n1.children;\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0;\n    const c2 = n2.children;\n    const { patchFlag, shapeFlag } = n2;\n    if (patchFlag > 0) {\n      if (patchFlag & 128) {\n        patchKeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      } else if (patchFlag & 256) {\n        patchUnkeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      }\n    }\n    if (shapeFlag & 8) {\n      if (prevShapeFlag & 16) {\n        unmountChildren(c1, parentComponent, parentSuspense);\n      }\n      if (c2 !== c1) {\n        hostSetElementText(container, c2);\n      }\n    } else {\n      if (prevShapeFlag & 16) {\n        if (shapeFlag & 16) {\n          patchKeyedChildren(\n            c1,\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else {\n          unmountChildren(c1, parentComponent, parentSuspense, true);\n        }\n      } else {\n        if (prevShapeFlag & 8) {\n          hostSetElementText(container, \"\");\n        }\n        if (shapeFlag & 16) {\n          mountChildren(\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        }\n      }\n    }\n  };\n  const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    c1 = c1 || EMPTY_ARR;\n    c2 = c2 || EMPTY_ARR;\n    const oldLength = c1.length;\n    const newLength = c2.length;\n    const commonLength = Math.min(oldLength, newLength);\n    let i;\n    for (i = 0; i < commonLength; i++) {\n      const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      patch(\n        c1[i],\n        nextChild,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (oldLength > newLength) {\n      unmountChildren(\n        c1,\n        parentComponent,\n        parentSuspense,\n        true,\n        false,\n        commonLength\n      );\n    } else {\n      mountChildren(\n        c2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        namespace,\n        slotScopeIds,\n        optimized,\n        commonLength\n      );\n    }\n  };\n  const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {\n    let i = 0;\n    const l2 = c2.length;\n    let e1 = c1.length - 1;\n    let e2 = l2 - 1;\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[i];\n      const n2 = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      i++;\n    }\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[e1];\n      const n2 = c2[e2] = optimized ? cloneIfMounted(c2[e2]) : normalizeVNode(c2[e2]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          namespace,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      e1--;\n      e2--;\n    }\n    if (i > e1) {\n      if (i <= e2) {\n        const nextPos = e2 + 1;\n        const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\n        while (i <= e2) {\n          patch(\n            null,\n            c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]),\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n          i++;\n        }\n      }\n    } else if (i > e2) {\n      while (i <= e1) {\n        unmount(c1[i], parentComponent, parentSuspense, true);\n        i++;\n      }\n    } else {\n      const s1 = i;\n      const s2 = i;\n      const keyToNewIndexMap = /* @__PURE__ */ new Map();\n      for (i = s2; i <= e2; i++) {\n        const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n        if (nextChild.key != null) {\n          keyToNewIndexMap.set(nextChild.key, i);\n        }\n      }\n      let j;\n      let patched = 0;\n      const toBePatched = e2 - s2 + 1;\n      let moved = false;\n      let maxNewIndexSoFar = 0;\n      const newIndexToOldIndexMap = new Array(toBePatched);\n      for (i = 0; i < toBePatched; i++)\n        newIndexToOldIndexMap[i] = 0;\n      for (i = s1; i <= e1; i++) {\n        const prevChild = c1[i];\n        if (patched >= toBePatched) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n          continue;\n        }\n        let newIndex;\n        if (prevChild.key != null) {\n          newIndex = keyToNewIndexMap.get(prevChild.key);\n        } else {\n          for (j = s2; j <= e2; j++) {\n            if (newIndexToOldIndexMap[j - s2] === 0 && isSameVNodeType(prevChild, c2[j])) {\n              newIndex = j;\n              break;\n            }\n          }\n        }\n        if (newIndex === void 0) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n        } else {\n          newIndexToOldIndexMap[newIndex - s2] = i + 1;\n          if (newIndex >= maxNewIndexSoFar) {\n            maxNewIndexSoFar = newIndex;\n          } else {\n            moved = true;\n          }\n          patch(\n            prevChild,\n            c2[newIndex],\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n          patched++;\n        }\n      }\n      const increasingNewIndexSequence = moved ? getSequence(newIndexToOldIndexMap) : EMPTY_ARR;\n      j = increasingNewIndexSequence.length - 1;\n      for (i = toBePatched - 1; i >= 0; i--) {\n        const nextIndex = s2 + i;\n        const nextChild = c2[nextIndex];\n        const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\n        if (newIndexToOldIndexMap[i] === 0) {\n          patch(\n            null,\n            nextChild,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            namespace,\n            slotScopeIds,\n            optimized\n          );\n        } else if (moved) {\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\n            move(nextChild, container, anchor, 2);\n          } else {\n            j--;\n          }\n        }\n      }\n    }\n  };\n  const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\n    const { el, type, transition, children, shapeFlag } = vnode;\n    if (shapeFlag & 6) {\n      move(vnode.component.subTree, container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 128) {\n      vnode.suspense.move(container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 64) {\n      type.move(vnode, container, anchor, internals);\n      return;\n    }\n    if (type === Fragment) {\n      hostInsert(el, container, anchor);\n      for (let i = 0; i < children.length; i++) {\n        move(children[i], container, anchor, moveType);\n      }\n      hostInsert(vnode.anchor, container, anchor);\n      return;\n    }\n    if (type === Static) {\n      moveStaticNode(vnode, container, anchor);\n      return;\n    }\n    const needTransition2 = moveType !== 2 && shapeFlag & 1 && transition;\n    if (needTransition2) {\n      if (moveType === 0) {\n        transition.beforeEnter(el);\n        hostInsert(el, container, anchor);\n        queuePostRenderEffect(() => transition.enter(el), parentSuspense);\n      } else {\n        const { leave, delayLeave, afterLeave } = transition;\n        const remove2 = () => hostInsert(el, container, anchor);\n        const performLeave = () => {\n          leave(el, () => {\n            remove2();\n            afterLeave && afterLeave();\n          });\n        };\n        if (delayLeave) {\n          delayLeave(el, remove2, performLeave);\n        } else {\n          performLeave();\n        }\n      }\n    } else {\n      hostInsert(el, container, anchor);\n    }\n  };\n  const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\n    const {\n      type,\n      props,\n      ref,\n      children,\n      dynamicChildren,\n      shapeFlag,\n      patchFlag,\n      dirs\n    } = vnode;\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode, true);\n    }\n    if (shapeFlag & 256) {\n      parentComponent.ctx.deactivate(vnode);\n      return;\n    }\n    const shouldInvokeDirs = shapeFlag & 1 && dirs;\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\n    let vnodeHook;\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeBeforeUnmount)) {\n      invokeVNodeHook(vnodeHook, parentComponent, vnode);\n    }\n    if (shapeFlag & 6) {\n      unmountComponent(vnode.component, parentSuspense, doRemove);\n    } else {\n      if (shapeFlag & 128) {\n        vnode.suspense.unmount(parentSuspense, doRemove);\n        return;\n      }\n      if (shouldInvokeDirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeUnmount\");\n      }\n      if (shapeFlag & 64) {\n        vnode.type.remove(\n          vnode,\n          parentComponent,\n          parentSuspense,\n          optimized,\n          internals,\n          doRemove\n        );\n      } else if (dynamicChildren && // #1153: fast path should not be taken for non-stable (v-for) fragments\n      (type !== Fragment || patchFlag > 0 && patchFlag & 64)) {\n        unmountChildren(\n          dynamicChildren,\n          parentComponent,\n          parentSuspense,\n          false,\n          true\n        );\n      } else if (type === Fragment && patchFlag & (128 | 256) || !optimized && shapeFlag & 16) {\n        unmountChildren(children, parentComponent, parentSuspense);\n      }\n      if (doRemove) {\n        remove(vnode);\n      }\n    }\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        shouldInvokeDirs && invokeDirectiveHook(vnode, null, parentComponent, \"unmounted\");\n      }, parentSuspense);\n    }\n  };\n  const remove = (vnode) => {\n    const { type, el, anchor, transition } = vnode;\n    if (type === Fragment) {\n      {\n        removeFragment(el, anchor);\n      }\n      return;\n    }\n    if (type === Static) {\n      removeStaticNode(vnode);\n      return;\n    }\n    const performRemove = () => {\n      hostRemove(el);\n      if (transition && !transition.persisted && transition.afterLeave) {\n        transition.afterLeave();\n      }\n    };\n    if (vnode.shapeFlag & 1 && transition && !transition.persisted) {\n      const { leave, delayLeave } = transition;\n      const performLeave = () => leave(el, performRemove);\n      if (delayLeave) {\n        delayLeave(vnode.el, performRemove, performLeave);\n      } else {\n        performLeave();\n      }\n    } else {\n      performRemove();\n    }\n  };\n  const removeFragment = (cur, end) => {\n    let next;\n    while (cur !== end) {\n      next = hostNextSibling(cur);\n      hostRemove(cur);\n      cur = next;\n    }\n    hostRemove(end);\n  };\n  const unmountComponent = (instance, parentSuspense, doRemove) => {\n    const { bum, scope, update, subTree, um } = instance;\n    if (bum) {\n      invokeArrayFns(bum);\n    }\n    scope.stop();\n    if (update) {\n      update.active = false;\n      unmount(subTree, instance, parentSuspense, doRemove);\n    }\n    if (um) {\n      queuePostRenderEffect(um, parentSuspense);\n    }\n    queuePostRenderEffect(() => {\n      instance.isUnmounted = true;\n    }, parentSuspense);\n    if (parentSuspense && parentSuspense.pendingBranch && !parentSuspense.isUnmounted && instance.asyncDep && !instance.asyncResolved && instance.suspenseId === parentSuspense.pendingId) {\n      parentSuspense.deps--;\n      if (parentSuspense.deps === 0) {\n        parentSuspense.resolve();\n      }\n    }\n  };\n  const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\n    }\n  };\n  const getNextHostNode = (vnode) => {\n    if (vnode.shapeFlag & 6) {\n      return getNextHostNode(vnode.component.subTree);\n    }\n    if (vnode.shapeFlag & 128) {\n      return vnode.suspense.next();\n    }\n    return hostNextSibling(vnode.anchor || vnode.el);\n  };\n  let isFlushing = false;\n  const render = (vnode, container, namespace) => {\n    if (vnode == null) {\n      if (container._vnode) {\n        unmount(container._vnode, null, null, true);\n      }\n    } else {\n      patch(\n        container._vnode || null,\n        vnode,\n        container,\n        null,\n        null,\n        null,\n        namespace\n      );\n    }\n    if (!isFlushing) {\n      isFlushing = true;\n      flushPreFlushCbs();\n      flushPostFlushCbs();\n      isFlushing = false;\n    }\n    container._vnode = vnode;\n  };\n  const internals = {\n    p: patch,\n    um: unmount,\n    m: move,\n    r: remove,\n    mt: mountComponent,\n    mc: mountChildren,\n    pc: patchChildren,\n    pbc: patchBlockChildren,\n    n: getNextHostNode,\n    o: options\n  };\n  let hydrate;\n  let hydrateNode;\n  if (createHydrationFns) {\n    [hydrate, hydrateNode] = createHydrationFns(\n      internals\n    );\n  }\n  return {\n    render,\n    hydrate,\n    createApp: createAppAPI(render, hydrate)\n  };\n}\nfunction resolveChildrenNamespace({ type, props }, currentNamespace) {\n  return currentNamespace === \"svg\" && type === \"foreignObject\" || currentNamespace === \"mathml\" && type === \"annotation-xml\" && props && props.encoding && props.encoding.includes(\"html\") ? void 0 : currentNamespace;\n}\nfunction toggleRecurse({ effect, update }, allowed) {\n  effect.allowRecurse = update.allowRecurse = allowed;\n}\nfunction needTransition(parentSuspense, transition) {\n  return (!parentSuspense || parentSuspense && !parentSuspense.pendingBranch) && transition && !transition.persisted;\n}\nfunction traverseStaticChildren(n1, n2, shallow = false) {\n  const ch1 = n1.children;\n  const ch2 = n2.children;\n  if (isArray$1(ch1) && isArray$1(ch2)) {\n    for (let i = 0; i < ch1.length; i++) {\n      const c1 = ch1[i];\n      let c2 = ch2[i];\n      if (c2.shapeFlag & 1 && !c2.dynamicChildren) {\n        if (c2.patchFlag <= 0 || c2.patchFlag === 32) {\n          c2 = ch2[i] = cloneIfMounted(ch2[i]);\n          c2.el = c1.el;\n        }\n        if (!shallow)\n          traverseStaticChildren(c1, c2);\n      }\n      if (c2.type === Text) {\n        c2.el = c1.el;\n      }\n    }\n  }\n}\nfunction getSequence(arr) {\n  const p = arr.slice();\n  const result = [0];\n  let i, j, u, v, c;\n  const len = arr.length;\n  for (i = 0; i < len; i++) {\n    const arrI = arr[i];\n    if (arrI !== 0) {\n      j = result[result.length - 1];\n      if (arr[j] < arrI) {\n        p[i] = j;\n        result.push(i);\n        continue;\n      }\n      u = 0;\n      v = result.length - 1;\n      while (u < v) {\n        c = u + v >> 1;\n        if (arr[result[c]] < arrI) {\n          u = c + 1;\n        } else {\n          v = c;\n        }\n      }\n      if (arrI < arr[result[u]]) {\n        if (u > 0) {\n          p[i] = result[u - 1];\n        }\n        result[u] = i;\n      }\n    }\n  }\n  u = result.length;\n  v = result[u - 1];\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n  return result;\n}\nfunction locateNonHydratedAsyncRoot(instance) {\n  const subComponent = instance.subTree.component;\n  if (subComponent) {\n    if (subComponent.asyncDep && !subComponent.asyncResolved) {\n      return subComponent;\n    } else {\n      return locateNonHydratedAsyncRoot(subComponent);\n    }\n  }\n}\n\nconst isTeleport = (type) => type.__isTeleport;\n\nconst Fragment = Symbol.for(\"v-fgt\");\nconst Text = Symbol.for(\"v-txt\");\nconst Comment = Symbol.for(\"v-cmt\");\nconst Static = Symbol.for(\"v-stc\");\nconst blockStack = [];\nlet currentBlock = null;\nfunction openBlock(disableTracking = false) {\n  blockStack.push(currentBlock = disableTracking ? null : []);\n}\nfunction closeBlock() {\n  blockStack.pop();\n  currentBlock = blockStack[blockStack.length - 1] || null;\n}\nlet isBlockTreeEnabled = 1;\nfunction setBlockTracking(value) {\n  isBlockTreeEnabled += value;\n}\nfunction setupBlock(vnode) {\n  vnode.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;\n  closeBlock();\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\n  return setupBlock(\n    createBaseVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      shapeFlag,\n      true\n    )\n  );\n}\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\n  return setupBlock(\n    createVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      true\n    )\n  );\n}\nfunction isVNode(value) {\n  return value ? value.__v_isVNode === true : false;\n}\nfunction isSameVNodeType(n1, n2) {\n  return n1.type === n2.type && n1.key === n2.key;\n}\nconst InternalObjectKey = `__vInternal`;\nconst normalizeKey = ({ key }) => key != null ? key : null;\nconst normalizeRef = ({\n  ref,\n  ref_key,\n  ref_for\n}) => {\n  if (typeof ref === \"number\") {\n    ref = \"\" + ref;\n  }\n  return ref != null ? isString(ref) || isRef(ref) || isFunction(ref) ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for } : ref : null;\n};\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1, isBlockNode = false, needFullChildrenNormalization = false) {\n  const vnode = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type,\n    props,\n    key: props && normalizeKey(props),\n    ref: props && normalizeRef(props),\n    scopeId: currentScopeId,\n    slotScopeIds: null,\n    children,\n    component: null,\n    suspense: null,\n    ssContent: null,\n    ssFallback: null,\n    dirs: null,\n    transition: null,\n    el: null,\n    anchor: null,\n    target: null,\n    targetAnchor: null,\n    staticCount: 0,\n    shapeFlag,\n    patchFlag,\n    dynamicProps,\n    dynamicChildren: null,\n    appContext: null,\n    ctx: currentRenderingInstance\n  };\n  if (needFullChildrenNormalization) {\n    normalizeChildren(vnode, children);\n    if (shapeFlag & 128) {\n      type.normalize(vnode);\n    }\n  } else if (children) {\n    vnode.shapeFlag |= isString(children) ? 8 : 16;\n  }\n  if (isBlockTreeEnabled > 0 && // avoid a block node from tracking itself\n  !isBlockNode && // has current parent block\n  currentBlock && // presence of a patch flag indicates this node needs patching on updates.\n  // component nodes also should always be patched, because even if the\n  // component doesn't need to update, it needs to persist the instance on to\n  // the next vnode so that it can be properly unmounted later.\n  (vnode.patchFlag > 0 || shapeFlag & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the\n  // vnode should not be considered dynamic due to handler caching.\n  vnode.patchFlag !== 32) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nconst createVNode = _createVNode;\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\n    type = Comment;\n  }\n  if (isVNode(type)) {\n    const cloned = cloneVNode(\n      type,\n      props,\n      true\n      /* mergeRef: true */\n    );\n    if (children) {\n      normalizeChildren(cloned, children);\n    }\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\n      if (cloned.shapeFlag & 6) {\n        currentBlock[currentBlock.indexOf(type)] = cloned;\n      } else {\n        currentBlock.push(cloned);\n      }\n    }\n    cloned.patchFlag |= -2;\n    return cloned;\n  }\n  if (isClassComponent(type)) {\n    type = type.__vccOpts;\n  }\n  if (props) {\n    props = guardReactiveProps(props);\n    let { class: klass, style } = props;\n    if (klass && !isString(klass)) {\n      props.class = normalizeClass(klass);\n    }\n    if (isObject(style)) {\n      if (isProxy(style) && !isArray$1(style)) {\n        style = extend({}, style);\n      }\n      props.style = normalizeStyle(style);\n    }\n  }\n  const shapeFlag = isString(type) ? 1 : isSuspense(type) ? 128 : isTeleport(type) ? 64 : isObject(type) ? 4 : isFunction(type) ? 2 : 0;\n  return createBaseVNode(\n    type,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    shapeFlag,\n    isBlockNode,\n    true\n  );\n}\nfunction guardReactiveProps(props) {\n  if (!props)\n    return null;\n  return isProxy(props) || InternalObjectKey in props ? extend({}, props) : props;\n}\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\n  const { props, ref, patchFlag, children } = vnode;\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\n  const cloned = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type: vnode.type,\n    props: mergedProps,\n    key: mergedProps && normalizeKey(mergedProps),\n    ref: extraProps && extraProps.ref ? (\n      // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n      // if the vnode itself already has a ref, cloneVNode will need to merge\n      // the refs so the single vnode can be set on multiple refs\n      mergeRef && ref ? isArray$1(ref) ? ref.concat(normalizeRef(extraProps)) : [ref, normalizeRef(extraProps)] : normalizeRef(extraProps)\n    ) : ref,\n    scopeId: vnode.scopeId,\n    slotScopeIds: vnode.slotScopeIds,\n    children: children,\n    target: vnode.target,\n    targetAnchor: vnode.targetAnchor,\n    staticCount: vnode.staticCount,\n    shapeFlag: vnode.shapeFlag,\n    // if the vnode is cloned with extra props, we can no longer assume its\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\n    // note: preserve flag for fragments since they use the flag for children\n    // fast paths only.\n    patchFlag: extraProps && vnode.type !== Fragment ? patchFlag === -1 ? 16 : patchFlag | 16 : patchFlag,\n    dynamicProps: vnode.dynamicProps,\n    dynamicChildren: vnode.dynamicChildren,\n    appContext: vnode.appContext,\n    dirs: vnode.dirs,\n    transition: vnode.transition,\n    // These should technically only be non-null on mounted VNodes. However,\n    // they *should* be copied for kept-alive vnodes. So we just always copy\n    // them since them being non-null during a mount doesn't affect the logic as\n    // they will simply be overwritten.\n    component: vnode.component,\n    suspense: vnode.suspense,\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\n    el: vnode.el,\n    anchor: vnode.anchor,\n    ctx: vnode.ctx,\n    ce: vnode.ce\n  };\n  return cloned;\n}\nfunction createTextVNode(text = \" \", flag = 0) {\n  return createVNode(Text, null, text, flag);\n}\nfunction createStaticVNode(content, numberOfNodes) {\n  const vnode = createVNode(Static, null, content);\n  vnode.staticCount = numberOfNodes;\n  return vnode;\n}\nfunction createCommentVNode(text = \"\", asBlock = false) {\n  return asBlock ? (openBlock(), createBlock(Comment, null, text)) : createVNode(Comment, null, text);\n}\nfunction normalizeVNode(child) {\n  if (child == null || typeof child === \"boolean\") {\n    return createVNode(Comment);\n  } else if (isArray$1(child)) {\n    return createVNode(\n      Fragment,\n      null,\n      // #3666, avoid reference pollution when reusing vnode\n      child.slice()\n    );\n  } else if (typeof child === \"object\") {\n    return cloneIfMounted(child);\n  } else {\n    return createVNode(Text, null, String(child));\n  }\n}\nfunction cloneIfMounted(child) {\n  return child.el === null && child.patchFlag !== -1 || child.memo ? child : cloneVNode(child);\n}\nfunction normalizeChildren(vnode, children) {\n  let type = 0;\n  const { shapeFlag } = vnode;\n  if (children == null) {\n    children = null;\n  } else if (isArray$1(children)) {\n    type = 16;\n  } else if (typeof children === \"object\") {\n    if (shapeFlag & (1 | 64)) {\n      const slot = children.default;\n      if (slot) {\n        slot._c && (slot._d = false);\n        normalizeChildren(vnode, slot());\n        slot._c && (slot._d = true);\n      }\n      return;\n    } else {\n      type = 32;\n      const slotFlag = children._;\n      if (!slotFlag && !(InternalObjectKey in children)) {\n        children._ctx = currentRenderingInstance;\n      } else if (slotFlag === 3 && currentRenderingInstance) {\n        if (currentRenderingInstance.slots._ === 1) {\n          children._ = 1;\n        } else {\n          children._ = 2;\n          vnode.patchFlag |= 1024;\n        }\n      }\n    }\n  } else if (isFunction(children)) {\n    children = { default: children, _ctx: currentRenderingInstance };\n    type = 32;\n  } else {\n    children = String(children);\n    if (shapeFlag & 64) {\n      type = 16;\n      children = [createTextVNode(children)];\n    } else {\n      type = 8;\n    }\n  }\n  vnode.children = children;\n  vnode.shapeFlag |= type;\n}\nfunction mergeProps(...args) {\n  const ret = {};\n  for (let i = 0; i < args.length; i++) {\n    const toMerge = args[i];\n    for (const key in toMerge) {\n      if (key === \"class\") {\n        if (ret.class !== toMerge.class) {\n          ret.class = normalizeClass([ret.class, toMerge.class]);\n        }\n      } else if (key === \"style\") {\n        ret.style = normalizeStyle([ret.style, toMerge.style]);\n      } else if (isOn(key)) {\n        const existing = ret[key];\n        const incoming = toMerge[key];\n        if (incoming && existing !== incoming && !(isArray$1(existing) && existing.includes(incoming))) {\n          ret[key] = existing ? [].concat(existing, incoming) : incoming;\n        }\n      } else if (key !== \"\") {\n        ret[key] = toMerge[key];\n      }\n    }\n  }\n  return ret;\n}\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\n  callWithAsyncErrorHandling(hook, instance, 7, [\n    vnode,\n    prevVNode\n  ]);\n}\n\nconst emptyAppContext = createAppContext();\nlet uid = 0;\nfunction createComponentInstance(vnode, parent, suspense) {\n  const type = vnode.type;\n  const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\n  const instance = {\n    uid: uid++,\n    vnode,\n    type,\n    parent,\n    appContext,\n    root: null,\n    // to be immediately set\n    next: null,\n    subTree: null,\n    // will be set synchronously right after creation\n    effect: null,\n    update: null,\n    // will be set synchronously right after creation\n    scope: new EffectScope(\n      true\n      /* detached */\n    ),\n    render: null,\n    proxy: null,\n    exposed: null,\n    exposeProxy: null,\n    withProxy: null,\n    provides: parent ? parent.provides : Object.create(appContext.provides),\n    accessCache: null,\n    renderCache: [],\n    // local resolved assets\n    components: null,\n    directives: null,\n    // resolved props and emits options\n    propsOptions: normalizePropsOptions(type, appContext),\n    emitsOptions: normalizeEmitsOptions(type, appContext),\n    // emit\n    emit: null,\n    // to be set immediately\n    emitted: null,\n    // props default value\n    propsDefaults: EMPTY_OBJ,\n    // inheritAttrs\n    inheritAttrs: type.inheritAttrs,\n    // state\n    ctx: EMPTY_OBJ,\n    data: EMPTY_OBJ,\n    props: EMPTY_OBJ,\n    attrs: EMPTY_OBJ,\n    slots: EMPTY_OBJ,\n    refs: EMPTY_OBJ,\n    setupState: EMPTY_OBJ,\n    setupContext: null,\n    attrsProxy: null,\n    slotsProxy: null,\n    // suspense related\n    suspense,\n    suspenseId: suspense ? suspense.pendingId : 0,\n    asyncDep: null,\n    asyncResolved: false,\n    // lifecycle hooks\n    // not using enums here because it results in computed properties\n    isMounted: false,\n    isUnmounted: false,\n    isDeactivated: false,\n    bc: null,\n    c: null,\n    bm: null,\n    m: null,\n    bu: null,\n    u: null,\n    um: null,\n    bum: null,\n    da: null,\n    a: null,\n    rtg: null,\n    rtc: null,\n    ec: null,\n    sp: null\n  };\n  {\n    instance.ctx = { _: instance };\n  }\n  instance.root = parent ? parent.root : instance;\n  instance.emit = emit.bind(null, instance);\n  if (vnode.ce) {\n    vnode.ce(instance);\n  }\n  return instance;\n}\nlet currentInstance = null;\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\nlet internalSetCurrentInstance;\nlet setInSSRSetupState;\n{\n  const g = getGlobalThis();\n  const registerGlobalSetter = (key, setter) => {\n    let setters;\n    if (!(setters = g[key]))\n      setters = g[key] = [];\n    setters.push(setter);\n    return (v) => {\n      if (setters.length > 1)\n        setters.forEach((set) => set(v));\n      else\n        setters[0](v);\n    };\n  };\n  internalSetCurrentInstance = registerGlobalSetter(\n    `__VUE_INSTANCE_SETTERS__`,\n    (v) => currentInstance = v\n  );\n  setInSSRSetupState = registerGlobalSetter(\n    `__VUE_SSR_SETTERS__`,\n    (v) => isInSSRComponentSetup = v\n  );\n}\nconst setCurrentInstance = (instance) => {\n  const prev = currentInstance;\n  internalSetCurrentInstance(instance);\n  instance.scope.on();\n  return () => {\n    instance.scope.off();\n    internalSetCurrentInstance(prev);\n  };\n};\nconst unsetCurrentInstance = () => {\n  currentInstance && currentInstance.scope.off();\n  internalSetCurrentInstance(null);\n};\nfunction isStatefulComponent(instance) {\n  return instance.vnode.shapeFlag & 4;\n}\nlet isInSSRComponentSetup = false;\nfunction setupComponent(instance, isSSR = false) {\n  isSSR && setInSSRSetupState(isSSR);\n  const { props, children } = instance.vnode;\n  const isStateful = isStatefulComponent(instance);\n  initProps(instance, props, isStateful, isSSR);\n  initSlots(instance, children);\n  const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : void 0;\n  isSSR && setInSSRSetupState(false);\n  return setupResult;\n}\nfunction setupStatefulComponent(instance, isSSR) {\n  const Component = instance.type;\n  instance.accessCache = /* @__PURE__ */ Object.create(null);\n  instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\n  const { setup } = Component;\n  if (setup) {\n    const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;\n    const reset = setCurrentInstance(instance);\n    pauseTracking();\n    const setupResult = callWithErrorHandling(\n      setup,\n      instance,\n      0,\n      [\n        instance.props,\n        setupContext\n      ]\n    );\n    resetTracking();\n    reset();\n    if (isPromise(setupResult)) {\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\n      if (isSSR) {\n        return setupResult.then((resolvedResult) => {\n          handleSetupResult(instance, resolvedResult, isSSR);\n        }).catch((e) => {\n          handleError(e, instance, 0);\n        });\n      } else {\n        instance.asyncDep = setupResult;\n      }\n    } else {\n      handleSetupResult(instance, setupResult, isSSR);\n    }\n  } else {\n    finishComponentSetup(instance, isSSR);\n  }\n}\nfunction handleSetupResult(instance, setupResult, isSSR) {\n  if (isFunction(setupResult)) {\n    if (instance.type.__ssrInlineRender) {\n      instance.ssrRender = setupResult;\n    } else {\n      instance.render = setupResult;\n    }\n  } else if (isObject(setupResult)) {\n    instance.setupState = proxyRefs(setupResult);\n  } else ;\n  finishComponentSetup(instance, isSSR);\n}\nlet compile;\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\n  const Component = instance.type;\n  if (!instance.render) {\n    if (!isSSR && compile && !Component.render) {\n      const template = Component.template || resolveMergedOptions(instance).template;\n      if (template) {\n        const { isCustomElement, compilerOptions } = instance.appContext.config;\n        const { delimiters, compilerOptions: componentCompilerOptions } = Component;\n        const finalCompilerOptions = extend(\n          extend(\n            {\n              isCustomElement,\n              delimiters\n            },\n            compilerOptions\n          ),\n          componentCompilerOptions\n        );\n        Component.render = compile(template, finalCompilerOptions);\n      }\n    }\n    instance.render = Component.render || NOOP;\n  }\n  {\n    const reset = setCurrentInstance(instance);\n    pauseTracking();\n    try {\n      applyOptions(instance);\n    } finally {\n      resetTracking();\n      reset();\n    }\n  }\n}\nfunction getAttrsProxy(instance) {\n  return instance.attrsProxy || (instance.attrsProxy = new Proxy(\n    instance.attrs,\n    {\n      get(target, key) {\n        track(instance, \"get\", \"$attrs\");\n        return target[key];\n      }\n    }\n  ));\n}\nfunction createSetupContext(instance) {\n  const expose = (exposed) => {\n    instance.exposed = exposed || {};\n  };\n  {\n    return {\n      get attrs() {\n        return getAttrsProxy(instance);\n      },\n      slots: instance.slots,\n      emit: instance.emit,\n      expose\n    };\n  }\n}\nfunction getExposeProxy(instance) {\n  if (instance.exposed) {\n    return instance.exposeProxy || (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\n      get(target, key) {\n        if (key in target) {\n          return target[key];\n        } else if (key in publicPropertiesMap) {\n          return publicPropertiesMap[key](instance);\n        }\n      },\n      has(target, key) {\n        return key in target || key in publicPropertiesMap;\n      }\n    }));\n  }\n}\nconst classifyRE = /(?:^|[-_])(\\w)/g;\nconst classify = (str) => str.replace(classifyRE, (c) => c.toUpperCase()).replace(/[-_]/g, \"\");\nfunction getComponentName(Component, includeInferred = true) {\n  return isFunction(Component) ? Component.displayName || Component.name : Component.name || includeInferred && Component.__name;\n}\nfunction formatComponentName(instance, Component, isRoot = false) {\n  let name = getComponentName(Component);\n  if (!name && Component.__file) {\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\n    if (match) {\n      name = match[1];\n    }\n  }\n  if (!name && instance && instance.parent) {\n    const inferFromRegistry = (registry) => {\n      for (const key in registry) {\n        if (registry[key] === Component) {\n          return key;\n        }\n      }\n    };\n    name = inferFromRegistry(\n      instance.components || instance.parent.type.components\n    ) || inferFromRegistry(instance.appContext.components);\n  }\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`;\n}\nfunction isClassComponent(value) {\n  return isFunction(value) && \"__vccOpts\" in value;\n}\n\nconst computed = (getterOrOptions, debugOptions) => {\n  const c = computed$1(getterOrOptions, debugOptions, isInSSRComponentSetup);\n  return c;\n};\n\nfunction h(type, propsOrChildren, children) {\n  const l = arguments.length;\n  if (l === 2) {\n    if (isObject(propsOrChildren) && !isArray$1(propsOrChildren)) {\n      if (isVNode(propsOrChildren)) {\n        return createVNode(type, null, [propsOrChildren]);\n      }\n      return createVNode(type, propsOrChildren);\n    } else {\n      return createVNode(type, null, propsOrChildren);\n    }\n  } else {\n    if (l > 3) {\n      children = Array.prototype.slice.call(arguments, 2);\n    } else if (l === 3 && isVNode(children)) {\n      children = [children];\n    }\n    return createVNode(type, propsOrChildren, children);\n  }\n}\n\nconst version = \"3.4.21\";","originalLength":251052,"removedExports":["DeprecationTypes","ErrorCodes","ErrorTypeStrings","KeepAlive","Suspense","Teleport","assertNumber","compatUtils","createHydrationRenderer","createPropsRestProxy","createSlots","defineAsyncComponent","defineEmits","defineExpose","defineModel","defineOptions","defineProps","defineSlots","devtools","hasInjectionContext","initCustomFormatter","isMemoSame","isRuntimeOnly","mergeDefaults","mergeModels","popScopeId","pushScopeId","registerRuntimeCompiler","renderList","resolveDirective","resolveFilter","setDevtoolsHook","ssrUtils","toHandlers","transformVNodeArgs","useAttrs","useModel","useSlots","warn","watchEffect","watchSyncEffect","withAsyncContext","withDefaults","withDirectives","withMemo","withScopeId"],"renderedExports":["BaseTransition","BaseTransitionPropsValidators","Comment","Fragment","Static","Text","callWithAsyncErrorHandling","callWithErrorHandling","cloneVNode","computed","createBlock","createCommentVNode","createElementBlock","createElementVNode","createRenderer","createStaticVNode","createTextVNode","createVNode","defineComponent","getCurrentInstance","getTransitionRawChildren","guardReactiveProps","h","handleError","inject","isVNode","mergeProps","nextTick","onActivated","onBeforeMount","onBeforeUnmount","onBeforeUpdate","onDeactivated","onErrorCaptured","onMounted","onRenderTracked","onRenderTriggered","onServerPrefetch","onUnmounted","onUpdated","openBlock","provide","queuePostFlushCb","renderSlot","resolveComponent","resolveDynamicComponent","resolveTransitionHooks","setBlockTracking","setTransitionHooks","ssrContextKey","useSSRContext","useTransitionState","version","watch","watchPostEffect","withCtx"],"renderedLength":127549},"C:/main/projects/k.g.i/node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js":{"code":"/**\n* @vue/runtime-dom v3.4.21\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n\nconst svgNS = \"http://www.w3.org/2000/svg\";\nconst mathmlNS = \"http://www.w3.org/1998/Math/MathML\";\nconst doc = typeof document !== \"undefined\" ? document : null;\nconst templateContainer = doc && /* @__PURE__ */ doc.createElement(\"template\");\nconst nodeOps = {\n  insert: (child, parent, anchor) => {\n    parent.insertBefore(child, anchor || null);\n  },\n  remove: (child) => {\n    const parent = child.parentNode;\n    if (parent) {\n      parent.removeChild(child);\n    }\n  },\n  createElement: (tag, namespace, is, props) => {\n    const el = namespace === \"svg\" ? doc.createElementNS(svgNS, tag) : namespace === \"mathml\" ? doc.createElementNS(mathmlNS, tag) : doc.createElement(tag, is ? { is } : void 0);\n    if (tag === \"select\" && props && props.multiple != null) {\n      el.setAttribute(\"multiple\", props.multiple);\n    }\n    return el;\n  },\n  createText: (text) => doc.createTextNode(text),\n  createComment: (text) => doc.createComment(text),\n  setText: (node, text) => {\n    node.nodeValue = text;\n  },\n  setElementText: (el, text) => {\n    el.textContent = text;\n  },\n  parentNode: (node) => node.parentNode,\n  nextSibling: (node) => node.nextSibling,\n  querySelector: (selector) => doc.querySelector(selector),\n  setScopeId(el, id) {\n    el.setAttribute(id, \"\");\n  },\n  // __UNSAFE__\n  // Reason: innerHTML.\n  // Static content here can only come from compiled templates.\n  // As long as the user only uses trusted templates, this is safe.\n  insertStaticContent(content, parent, anchor, namespace, start, end) {\n    const before = anchor ? anchor.previousSibling : parent.lastChild;\n    if (start && (start === end || start.nextSibling)) {\n      while (true) {\n        parent.insertBefore(start.cloneNode(true), anchor);\n        if (start === end || !(start = start.nextSibling))\n          break;\n      }\n    } else {\n      templateContainer.innerHTML = namespace === \"svg\" ? `<svg>${content}</svg>` : namespace === \"mathml\" ? `<math>${content}</math>` : content;\n      const template = templateContainer.content;\n      if (namespace === \"svg\" || namespace === \"mathml\") {\n        const wrapper = template.firstChild;\n        while (wrapper.firstChild) {\n          template.appendChild(wrapper.firstChild);\n        }\n        template.removeChild(wrapper);\n      }\n      parent.insertBefore(template, anchor);\n    }\n    return [\n      // first\n      before ? before.nextSibling : parent.firstChild,\n      // last\n      anchor ? anchor.previousSibling : parent.lastChild\n    ];\n  }\n};\n\nconst TRANSITION = \"transition\";\nconst ANIMATION = \"animation\";\nconst vtcKey = Symbol(\"_vtc\");\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\nTransition.displayName = \"Transition\";\nconst DOMTransitionPropsValidators = {\n  name: String,\n  type: String,\n  css: {\n    type: Boolean,\n    default: true\n  },\n  duration: [String, Number, Object],\n  enterFromClass: String,\n  enterActiveClass: String,\n  enterToClass: String,\n  appearFromClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  leaveFromClass: String,\n  leaveActiveClass: String,\n  leaveToClass: String\n};\nTransition.props = /* @__PURE__ */ extend(\n  {},\n  BaseTransitionPropsValidators,\n  DOMTransitionPropsValidators\n);\nconst callHook = (hook, args = []) => {\n  if (isArray$1(hook)) {\n    hook.forEach((h2) => h2(...args));\n  } else if (hook) {\n    hook(...args);\n  }\n};\nconst hasExplicitCallback = (hook) => {\n  return hook ? isArray$1(hook) ? hook.some((h2) => h2.length > 1) : hook.length > 1 : false;\n};\nfunction resolveTransitionProps(rawProps) {\n  const baseProps = {};\n  for (const key in rawProps) {\n    if (!(key in DOMTransitionPropsValidators)) {\n      baseProps[key] = rawProps[key];\n    }\n  }\n  if (rawProps.css === false) {\n    return baseProps;\n  }\n  const {\n    name = \"v\",\n    type,\n    duration,\n    enterFromClass = `${name}-enter-from`,\n    enterActiveClass = `${name}-enter-active`,\n    enterToClass = `${name}-enter-to`,\n    appearFromClass = enterFromClass,\n    appearActiveClass = enterActiveClass,\n    appearToClass = enterToClass,\n    leaveFromClass = `${name}-leave-from`,\n    leaveActiveClass = `${name}-leave-active`,\n    leaveToClass = `${name}-leave-to`\n  } = rawProps;\n  const durations = normalizeDuration(duration);\n  const enterDuration = durations && durations[0];\n  const leaveDuration = durations && durations[1];\n  const {\n    onBeforeEnter,\n    onEnter,\n    onEnterCancelled,\n    onLeave,\n    onLeaveCancelled,\n    onBeforeAppear = onBeforeEnter,\n    onAppear = onEnter,\n    onAppearCancelled = onEnterCancelled\n  } = baseProps;\n  const finishEnter = (el, isAppear, done) => {\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\n    done && done();\n  };\n  const finishLeave = (el, done) => {\n    el._isLeaving = false;\n    removeTransitionClass(el, leaveFromClass);\n    removeTransitionClass(el, leaveToClass);\n    removeTransitionClass(el, leaveActiveClass);\n    done && done();\n  };\n  const makeEnterHook = (isAppear) => {\n    return (el, done) => {\n      const hook = isAppear ? onAppear : onEnter;\n      const resolve = () => finishEnter(el, isAppear, done);\n      callHook(hook, [el, resolve]);\n      nextFrame(() => {\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass);\n        if (!hasExplicitCallback(hook)) {\n          whenTransitionEnds(el, type, enterDuration, resolve);\n        }\n      });\n    };\n  };\n  return extend(baseProps, {\n    onBeforeEnter(el) {\n      callHook(onBeforeEnter, [el]);\n      addTransitionClass(el, enterFromClass);\n      addTransitionClass(el, enterActiveClass);\n    },\n    onBeforeAppear(el) {\n      callHook(onBeforeAppear, [el]);\n      addTransitionClass(el, appearFromClass);\n      addTransitionClass(el, appearActiveClass);\n    },\n    onEnter: makeEnterHook(false),\n    onAppear: makeEnterHook(true),\n    onLeave(el, done) {\n      el._isLeaving = true;\n      const resolve = () => finishLeave(el, done);\n      addTransitionClass(el, leaveFromClass);\n      forceReflow();\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(() => {\n        if (!el._isLeaving) {\n          return;\n        }\n        removeTransitionClass(el, leaveFromClass);\n        addTransitionClass(el, leaveToClass);\n        if (!hasExplicitCallback(onLeave)) {\n          whenTransitionEnds(el, type, leaveDuration, resolve);\n        }\n      });\n      callHook(onLeave, [el, resolve]);\n    },\n    onEnterCancelled(el) {\n      finishEnter(el, false);\n      callHook(onEnterCancelled, [el]);\n    },\n    onAppearCancelled(el) {\n      finishEnter(el, true);\n      callHook(onAppearCancelled, [el]);\n    },\n    onLeaveCancelled(el) {\n      finishLeave(el);\n      callHook(onLeaveCancelled, [el]);\n    }\n  });\n}\nfunction normalizeDuration(duration) {\n  if (duration == null) {\n    return null;\n  } else if (isObject(duration)) {\n    return [NumberOf(duration.enter), NumberOf(duration.leave)];\n  } else {\n    const n = NumberOf(duration);\n    return [n, n];\n  }\n}\nfunction NumberOf(val) {\n  const res = toNumber(val);\n  return res;\n}\nfunction addTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.add(c));\n  (el[vtcKey] || (el[vtcKey] = /* @__PURE__ */ new Set())).add(cls);\n}\nfunction removeTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.remove(c));\n  const _vtc = el[vtcKey];\n  if (_vtc) {\n    _vtc.delete(cls);\n    if (!_vtc.size) {\n      el[vtcKey] = void 0;\n    }\n  }\n}\nfunction nextFrame(cb) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(cb);\n  });\n}\nlet endId = 0;\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\n  const id = el._endId = ++endId;\n  const resolveIfNotStale = () => {\n    if (id === el._endId) {\n      resolve();\n    }\n  };\n  if (explicitTimeout) {\n    return setTimeout(resolveIfNotStale, explicitTimeout);\n  }\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\n  if (!type) {\n    return resolve();\n  }\n  const endEvent = type + \"end\";\n  let ended = 0;\n  const end = () => {\n    el.removeEventListener(endEvent, onEnd);\n    resolveIfNotStale();\n  };\n  const onEnd = (e) => {\n    if (e.target === el && ++ended >= propCount) {\n      end();\n    }\n  };\n  setTimeout(() => {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(endEvent, onEnd);\n}\nfunction getTransitionInfo(el, expectedType) {\n  const styles = window.getComputedStyle(el);\n  const getStyleProperties = (key) => (styles[key] || \"\").split(\", \");\n  const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);\n  const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  const animationDelays = getStyleProperties(`${ANIMATION}Delay`);\n  const animationDurations = getStyleProperties(`${ANIMATION}Duration`);\n  const animationTimeout = getTimeout(animationDelays, animationDurations);\n  let type = null;\n  let timeout = 0;\n  let propCount = 0;\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;\n    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;\n  }\n  const hasTransform = type === TRANSITION && /\\b(transform|all)(,|$)/.test(\n    getStyleProperties(`${TRANSITION}Property`).toString()\n  );\n  return {\n    type,\n    timeout,\n    propCount,\n    hasTransform\n  };\n}\nfunction getTimeout(delays, durations) {\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\n}\nfunction toMs(s) {\n  if (s === \"auto\")\n    return 0;\n  return Number(s.slice(0, -1).replace(\",\", \".\")) * 1e3;\n}\nfunction forceReflow() {\n  return document.body.offsetHeight;\n}\n\nfunction patchClass(el, value, isSVG) {\n  const transitionClasses = el[vtcKey];\n  if (transitionClasses) {\n    value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(\" \");\n  }\n  if (value == null) {\n    el.removeAttribute(\"class\");\n  } else if (isSVG) {\n    el.setAttribute(\"class\", value);\n  } else {\n    el.className = value;\n  }\n}\n\nconst vShowOriginalDisplay = Symbol(\"_vod\");\nconst vShowHidden = Symbol(\"_vsh\");\n\nconst CSS_VAR_TEXT = Symbol(\"\");\nfunction useCssVars(getter) {\n  const instance = getCurrentInstance();\n  if (!instance) {\n    return;\n  }\n  const updateTeleports = instance.ut = (vars = getter(instance.proxy)) => {\n    Array.from(\n      document.querySelectorAll(`[data-v-owner=\"${instance.uid}\"]`)\n    ).forEach((node) => setVarsOnNode(node, vars));\n  };\n  const setVars = () => {\n    const vars = getter(instance.proxy);\n    setVarsOnVNode(instance.subTree, vars);\n    updateTeleports(vars);\n  };\n  watchPostEffect(setVars);\n  onMounted(() => {\n    const ob = new MutationObserver(setVars);\n    ob.observe(instance.subTree.el.parentNode, { childList: true });\n    onUnmounted(() => ob.disconnect());\n  });\n}\nfunction setVarsOnVNode(vnode, vars) {\n  if (vnode.shapeFlag & 128) {\n    const suspense = vnode.suspense;\n    vnode = suspense.activeBranch;\n    if (suspense.pendingBranch && !suspense.isHydrating) {\n      suspense.effects.push(() => {\n        setVarsOnVNode(suspense.activeBranch, vars);\n      });\n    }\n  }\n  while (vnode.component) {\n    vnode = vnode.component.subTree;\n  }\n  if (vnode.shapeFlag & 1 && vnode.el) {\n    setVarsOnNode(vnode.el, vars);\n  } else if (vnode.type === Fragment) {\n    vnode.children.forEach((c) => setVarsOnVNode(c, vars));\n  } else if (vnode.type === Static) {\n    let { el, anchor } = vnode;\n    while (el) {\n      setVarsOnNode(el, vars);\n      if (el === anchor)\n        break;\n      el = el.nextSibling;\n    }\n  }\n}\nfunction setVarsOnNode(el, vars) {\n  if (el.nodeType === 1) {\n    const style = el.style;\n    let cssText = \"\";\n    for (const key in vars) {\n      style.setProperty(`--${key}`, vars[key]);\n      cssText += `--${key}: ${vars[key]};`;\n    }\n    style[CSS_VAR_TEXT] = cssText;\n  }\n}\n\nconst displayRE = /(^|;)\\s*display\\s*:/;\nfunction patchStyle(el, prev, next) {\n  const style = el.style;\n  const isCssString = isString(next);\n  let hasControlledDisplay = false;\n  if (next && !isCssString) {\n    if (prev) {\n      if (!isString(prev)) {\n        for (const key in prev) {\n          if (next[key] == null) {\n            setStyle(style, key, \"\");\n          }\n        }\n      } else {\n        for (const prevStyle of prev.split(\";\")) {\n          const key = prevStyle.slice(0, prevStyle.indexOf(\":\")).trim();\n          if (next[key] == null) {\n            setStyle(style, key, \"\");\n          }\n        }\n      }\n    }\n    for (const key in next) {\n      if (key === \"display\") {\n        hasControlledDisplay = true;\n      }\n      setStyle(style, key, next[key]);\n    }\n  } else {\n    if (isCssString) {\n      if (prev !== next) {\n        const cssVarText = style[CSS_VAR_TEXT];\n        if (cssVarText) {\n          next += \";\" + cssVarText;\n        }\n        style.cssText = next;\n        hasControlledDisplay = displayRE.test(next);\n      }\n    } else if (prev) {\n      el.removeAttribute(\"style\");\n    }\n  }\n  if (vShowOriginalDisplay in el) {\n    el[vShowOriginalDisplay] = hasControlledDisplay ? style.display : \"\";\n    if (el[vShowHidden]) {\n      style.display = \"none\";\n    }\n  }\n}\nconst importantRE = /\\s*!important$/;\nfunction setStyle(style, name, val) {\n  if (isArray$1(val)) {\n    val.forEach((v) => setStyle(style, name, v));\n  } else {\n    if (val == null)\n      val = \"\";\n    if (name.startsWith(\"--\")) {\n      style.setProperty(name, val);\n    } else {\n      const prefixed = autoPrefix(style, name);\n      if (importantRE.test(val)) {\n        style.setProperty(\n          hyphenate(prefixed),\n          val.replace(importantRE, \"\"),\n          \"important\"\n        );\n      } else {\n        style[prefixed] = val;\n      }\n    }\n  }\n}\nconst prefixes = [\"Webkit\", \"Moz\", \"ms\"];\nconst prefixCache = {};\nfunction autoPrefix(style, rawName) {\n  const cached = prefixCache[rawName];\n  if (cached) {\n    return cached;\n  }\n  let name = camelize(rawName);\n  if (name !== \"filter\" && name in style) {\n    return prefixCache[rawName] = name;\n  }\n  name = capitalize(name);\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefixed = prefixes[i] + name;\n    if (prefixed in style) {\n      return prefixCache[rawName] = prefixed;\n    }\n  }\n  return rawName;\n}\n\nconst xlinkNS = \"http://www.w3.org/1999/xlink\";\nfunction patchAttr(el, key, value, isSVG, instance) {\n  if (isSVG && key.startsWith(\"xlink:\")) {\n    if (value == null) {\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    const isBoolean = isSpecialBooleanAttr(key);\n    if (value == null || isBoolean && !includeBooleanAttr(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, isBoolean ? \"\" : value);\n    }\n  }\n}\n\nfunction patchDOMProp(el, key, value, prevChildren, parentComponent, parentSuspense, unmountChildren) {\n  if (key === \"innerHTML\" || key === \"textContent\") {\n    if (prevChildren) {\n      unmountChildren(prevChildren, parentComponent, parentSuspense);\n    }\n    el[key] = value == null ? \"\" : value;\n    return;\n  }\n  const tag = el.tagName;\n  if (key === \"value\" && tag !== \"PROGRESS\" && // custom elements may use _value internally\n  !tag.includes(\"-\")) {\n    const oldValue = tag === \"OPTION\" ? el.getAttribute(\"value\") || \"\" : el.value;\n    const newValue = value == null ? \"\" : value;\n    if (oldValue !== newValue || !(\"_value\" in el)) {\n      el.value = newValue;\n    }\n    if (value == null) {\n      el.removeAttribute(key);\n    }\n    el._value = value;\n    return;\n  }\n  let needRemove = false;\n  if (value === \"\" || value == null) {\n    const type = typeof el[key];\n    if (type === \"boolean\") {\n      value = includeBooleanAttr(value);\n    } else if (value == null && type === \"string\") {\n      value = \"\";\n      needRemove = true;\n    } else if (type === \"number\") {\n      value = 0;\n      needRemove = true;\n    }\n  }\n  try {\n    el[key] = value;\n  } catch (e) {\n  }\n  needRemove && el.removeAttribute(key);\n}\n\nfunction addEventListener(el, event, handler, options) {\n  el.addEventListener(event, handler, options);\n}\nfunction removeEventListener(el, event, handler, options) {\n  el.removeEventListener(event, handler, options);\n}\nconst veiKey = Symbol(\"_vei\");\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\n  const invokers = el[veiKey] || (el[veiKey] = {});\n  const existingInvoker = invokers[rawName];\n  if (nextValue && existingInvoker) {\n    existingInvoker.value = nextValue;\n  } else {\n    const [name, options] = parseName(rawName);\n    if (nextValue) {\n      const invoker = invokers[rawName] = createInvoker(nextValue, instance);\n      addEventListener(el, name, invoker, options);\n    } else if (existingInvoker) {\n      removeEventListener(el, name, existingInvoker, options);\n      invokers[rawName] = void 0;\n    }\n  }\n}\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\nfunction parseName(name) {\n  let options;\n  if (optionsModifierRE.test(name)) {\n    options = {};\n    let m;\n    while (m = name.match(optionsModifierRE)) {\n      name = name.slice(0, name.length - m[0].length);\n      options[m[0].toLowerCase()] = true;\n    }\n  }\n  const event = name[2] === \":\" ? name.slice(3) : hyphenate(name.slice(2));\n  return [event, options];\n}\nlet cachedNow = 0;\nconst p = /* @__PURE__ */ Promise.resolve();\nconst getNow = () => cachedNow || (p.then(() => cachedNow = 0), cachedNow = Date.now());\nfunction createInvoker(initialValue, instance) {\n  const invoker = (e) => {\n    if (!e._vts) {\n      e._vts = Date.now();\n    } else if (e._vts <= invoker.attached) {\n      return;\n    }\n    callWithAsyncErrorHandling(\n      patchStopImmediatePropagation(e, invoker.value),\n      instance,\n      5,\n      [e]\n    );\n  };\n  invoker.value = initialValue;\n  invoker.attached = getNow();\n  return invoker;\n}\nfunction patchStopImmediatePropagation(e, value) {\n  if (isArray$1(value)) {\n    const originalStop = e.stopImmediatePropagation;\n    e.stopImmediatePropagation = () => {\n      originalStop.call(e);\n      e._stopped = true;\n    };\n    return value.map((fn) => (e2) => !e2._stopped && fn && fn(e2));\n  } else {\n    return value;\n  }\n}\n\nconst isNativeOn = (key) => key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // lowercase letter\nkey.charCodeAt(2) > 96 && key.charCodeAt(2) < 123;\nconst patchProp = (el, key, prevValue, nextValue, namespace, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\n  const isSVG = namespace === \"svg\";\n  if (key === \"class\") {\n    patchClass(el, nextValue, isSVG);\n  } else if (key === \"style\") {\n    patchStyle(el, prevValue, nextValue);\n  } else if (isOn(key)) {\n    if (!isModelListener(key)) {\n      patchEvent(el, key, prevValue, nextValue, parentComponent);\n    }\n  } else if (key[0] === \".\" ? (key = key.slice(1), true) : key[0] === \"^\" ? (key = key.slice(1), false) : shouldSetAsProp(el, key, nextValue, isSVG)) {\n    patchDOMProp(\n      el,\n      key,\n      nextValue,\n      prevChildren,\n      parentComponent,\n      parentSuspense,\n      unmountChildren\n    );\n  } else {\n    if (key === \"true-value\") {\n      el._trueValue = nextValue;\n    } else if (key === \"false-value\") {\n      el._falseValue = nextValue;\n    }\n    patchAttr(el, key, nextValue, isSVG);\n  }\n};\nfunction shouldSetAsProp(el, key, value, isSVG) {\n  if (isSVG) {\n    if (key === \"innerHTML\" || key === \"textContent\") {\n      return true;\n    }\n    if (key in el && isNativeOn(key) && isFunction(value)) {\n      return true;\n    }\n    return false;\n  }\n  if (key === \"spellcheck\" || key === \"draggable\" || key === \"translate\") {\n    return false;\n  }\n  if (key === \"form\") {\n    return false;\n  }\n  if (key === \"list\" && el.tagName === \"INPUT\") {\n    return false;\n  }\n  if (key === \"type\" && el.tagName === \"TEXTAREA\") {\n    return false;\n  }\n  if (key === \"width\" || key === \"height\") {\n    const tag = el.tagName;\n    if (tag === \"IMG\" || tag === \"VIDEO\" || tag === \"CANVAS\" || tag === \"SOURCE\") {\n      return false;\n    }\n  }\n  if (isNativeOn(key) && isString(value)) {\n    return false;\n  }\n  return key in el;\n}\n\nconst rendererOptions = /* @__PURE__ */ extend({ patchProp }, nodeOps);\nlet renderer;\nfunction ensureRenderer() {\n  return renderer || (renderer = createRenderer(rendererOptions));\n}\nconst createApp = (...args) => {\n  const app = ensureRenderer().createApp(...args);\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (!container)\n      return;\n    const component = app._component;\n    if (!isFunction(component) && !component.render && !component.template) {\n      component.template = container.innerHTML;\n    }\n    container.innerHTML = \"\";\n    const proxy = mount(container, false, resolveRootNamespace(container));\n    if (container instanceof Element) {\n      container.removeAttribute(\"v-cloak\");\n      container.setAttribute(\"data-v-app\", \"\");\n    }\n    return proxy;\n  };\n  return app;\n};\nfunction resolveRootNamespace(container) {\n  if (container instanceof SVGElement) {\n    return \"svg\";\n  }\n  if (typeof MathMLElement === \"function\" && container instanceof MathMLElement) {\n    return \"mathml\";\n  }\n}\nfunction normalizeContainer(container) {\n  if (isString(container)) {\n    const res = document.querySelector(container);\n    return res;\n  }\n  return container;\n}","originalLength":49371,"removedExports":["TransitionGroup","VueElement","createSSRApp","defineCustomElement","defineSSRCustomElement","hydrate","initDirectivesForSSR","render","useCssModule","vModelCheckbox","vModelDynamic","vModelRadio","vModelSelect","vModelText","vShow","withKeys","withModifiers"],"renderedExports":["Transition","createApp","useCssVars"],"renderedLength":22181},"C:/main/projects/k.g.i/node_modules/vue-router/dist/vue-router.mjs":{"code":"/*!\n  * vue-router v4.3.0\n  * (c) 2024 Eduardo San Martin Morote\n  * @license MIT\n  */\n\nconst isBrowser = typeof document !== 'undefined';\n\nfunction isESModule(obj) {\n    return obj.__esModule || obj[Symbol.toStringTag] === 'Module';\n}\nconst assign = Object.assign;\nfunction applyToParams(fn, params) {\n    const newParams = {};\n    for (const key in params) {\n        const value = params[key];\n        newParams[key] = isArray(value)\n            ? value.map(fn)\n            : fn(value);\n    }\n    return newParams;\n}\nconst noop = () => { };\n/**\n * Typesafe alternative to Array.isArray\n * https://github.com/microsoft/TypeScript/pull/48228\n */\nconst isArray = Array.isArray;\n\n/**\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\n * < > `\n *\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\n * defines some extra characters to be encoded. Most browsers do not encode them\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\n * also encode `!'()*`. Leaving un-encoded only ASCII alphanumeric(`a-zA-Z0-9`)\n * plus `-._~`. This extra safety should be applied to query by patching the\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\n * encoded everywhere because some browsers like FF encode it when directly\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\n */\n// const EXTRA_RESERVED_RE = /[!'()*]/g\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\nconst HASH_RE = /#/g; // %23\nconst AMPERSAND_RE = /&/g; // %26\nconst SLASH_RE = /\\//g; // %2F\nconst EQUAL_RE = /=/g; // %3D\nconst IM_RE = /\\?/g; // %3F\nconst PLUS_RE = /\\+/g; // %2B\n/**\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\n * seems to be less flexible than not doing so and I can't find out the legacy\n * systems requiring this for regular requests like text/html. In the standard,\n * the encoding of the plus character is only mentioned for\n * application/x-www-form-urlencoded\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\n * leave the plus character as is in queries. To be more flexible, we allow the\n * plus character on the query, but it can also be manually encoded by the user.\n *\n * Resources:\n * - https://url.spec.whatwg.org/#urlencoded-parsing\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\n */\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\nconst ENC_CARET_RE = /%5E/g; // ^\nconst ENC_BACKTICK_RE = /%60/g; // `\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\nconst ENC_PIPE_RE = /%7C/g; // |\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\nconst ENC_SPACE_RE = /%20/g; // }\n/**\n * Encode characters that need to be encoded on the path, search and hash\n * sections of the URL.\n *\n * @internal\n * @param text - string to encode\n * @returns encoded string\n */\nfunction commonEncode(text) {\n    return encodeURI('' + text)\n        .replace(ENC_PIPE_RE, '|')\n        .replace(ENC_BRACKET_OPEN_RE, '[')\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\n}\n/**\n * Encode characters that need to be encoded on the hash section of the URL.\n *\n * @param text - string to encode\n * @returns encoded string\n */\nfunction encodeHash(text) {\n    return commonEncode(text)\n        .replace(ENC_CURLY_OPEN_RE, '{')\n        .replace(ENC_CURLY_CLOSE_RE, '}')\n        .replace(ENC_CARET_RE, '^');\n}\n/**\n * Encode characters that need to be encoded query values on the query\n * section of the URL.\n *\n * @param text - string to encode\n * @returns encoded string\n */\nfunction encodeQueryValue(text) {\n    return (commonEncode(text)\n        // Encode the space as +, encode the + to differentiate it from the space\n        .replace(PLUS_RE, '%2B')\n        .replace(ENC_SPACE_RE, '+')\n        .replace(HASH_RE, '%23')\n        .replace(AMPERSAND_RE, '%26')\n        .replace(ENC_BACKTICK_RE, '`')\n        .replace(ENC_CURLY_OPEN_RE, '{')\n        .replace(ENC_CURLY_CLOSE_RE, '}')\n        .replace(ENC_CARET_RE, '^'));\n}\n/**\n * Like `encodeQueryValue` but also encodes the `=` character.\n *\n * @param text - string to encode\n */\nfunction encodeQueryKey(text) {\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\n}\n/**\n * Encode characters that need to be encoded on the path section of the URL.\n *\n * @param text - string to encode\n * @returns encoded string\n */\nfunction encodePath(text) {\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\n}\n/**\n * Encode characters that need to be encoded on the path section of the URL as a\n * param. This function encodes everything {@link encodePath} does plus the\n * slash (`/`) character. If `text` is `null` or `undefined`, returns an empty\n * string instead.\n *\n * @param text - string to encode\n * @returns encoded string\n */\nfunction encodeParam(text) {\n    return text == null ? '' : encodePath(text).replace(SLASH_RE, '%2F');\n}\n/**\n * Decode text using `decodeURIComponent`. Returns the original text if it\n * fails.\n *\n * @param text - string to decode\n * @returns decoded string\n */\nfunction decode(text) {\n    try {\n        return decodeURIComponent('' + text);\n    }\n    catch (err) {\n    }\n    return '' + text;\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\n/**\n * Transforms a URI into a normalized history location\n *\n * @param parseQuery\n * @param location - URI to normalize\n * @param currentLocation - current absolute location. Allows resolving relative\n * paths. Must start with `/`. Defaults to `/`\n * @returns a normalized history location\n */\nfunction parseURL(parseQuery, location, currentLocation = '/') {\n    let path, query = {}, searchString = '', hash = '';\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\n    // TODO: move to new URL()\n    const hashPos = location.indexOf('#');\n    let searchPos = location.indexOf('?');\n    // the hash appears before the search, so it's not part of the search string\n    if (hashPos < searchPos && hashPos >= 0) {\n        searchPos = -1;\n    }\n    if (searchPos > -1) {\n        path = location.slice(0, searchPos);\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\n        query = parseQuery(searchString);\n    }\n    if (hashPos > -1) {\n        path = path || location.slice(0, hashPos);\n        // keep the # character\n        hash = location.slice(hashPos, location.length);\n    }\n    // no search and no query\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\n    // empty path means a relative query or hash `?foo=f`, `#thing`\n    return {\n        fullPath: path + (searchString && '?') + searchString + hash,\n        path,\n        query,\n        hash: decode(hash),\n    };\n}\n/**\n * Stringifies a URL object\n *\n * @param stringifyQuery\n * @param location\n */\nfunction stringifyURL(stringifyQuery, location) {\n    const query = location.query ? stringifyQuery(location.query) : '';\n    return location.path + (query && '?') + query + (location.hash || '');\n}\n/**\n * Strips off the base from the beginning of a location.pathname in a non-case-sensitive way.\n *\n * @param pathname - location.pathname\n * @param base - base to strip off\n */\nfunction stripBase(pathname, base) {\n    // no base or base is not found at the beginning\n    if (!base || !pathname.toLowerCase().startsWith(base.toLowerCase()))\n        return pathname;\n    return pathname.slice(base.length) || '/';\n}\n/**\n * Checks if two RouteLocation are equal. This means that both locations are\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\n * parameters and `hash` are the same\n *\n * @param stringifyQuery - A function that takes a query object of type LocationQueryRaw and returns a string representation of it.\n * @param a - first {@link RouteLocation}\n * @param b - second {@link RouteLocation}\n */\nfunction isSameRouteLocation(stringifyQuery, a, b) {\n    const aLastIndex = a.matched.length - 1;\n    const bLastIndex = b.matched.length - 1;\n    return (aLastIndex > -1 &&\n        aLastIndex === bLastIndex &&\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\n        isSameRouteLocationParams(a.params, b.params) &&\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\n        a.hash === b.hash);\n}\n/**\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\n * considered equal to the `RouteRecord` they are aliasing.\n *\n * @param a - first {@link RouteRecord}\n * @param b - second {@link RouteRecord}\n */\nfunction isSameRouteRecord(a, b) {\n    // since the original record has an undefined value for aliasOf\n    // but all aliases point to the original record, this will always compare\n    // the original record\n    return (a.aliasOf || a) === (b.aliasOf || b);\n}\nfunction isSameRouteLocationParams(a, b) {\n    if (Object.keys(a).length !== Object.keys(b).length)\n        return false;\n    for (const key in a) {\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\n            return false;\n    }\n    return true;\n}\nfunction isSameRouteLocationParamsValue(a, b) {\n    return isArray(a)\n        ? isEquivalentArray(a, b)\n        : isArray(b)\n            ? isEquivalentArray(b, a)\n            : a === b;\n}\n/**\n * Check if two arrays are the same or if an array with one single entry is the\n * same as another primitive value. Used to check query and parameters\n *\n * @param a - array of values\n * @param b - array of values or a single value\n */\nfunction isEquivalentArray(a, b) {\n    return isArray(b)\n        ? a.length === b.length && a.every((value, i) => value === b[i])\n        : a.length === 1 && a[0] === b;\n}\n/**\n * Resolves a relative path that starts with `.`.\n *\n * @param to - path location we are resolving\n * @param from - currentLocation.path, should start with `/`\n */\nfunction resolveRelativePath(to, from) {\n    if (to.startsWith('/'))\n        return to;\n    if (!to)\n        return from;\n    const fromSegments = from.split('/');\n    const toSegments = to.split('/');\n    const lastToSegment = toSegments[toSegments.length - 1];\n    // make . and ./ the same (../ === .., ../../ === ../..)\n    // this is the same behavior as new URL()\n    if (lastToSegment === '..' || lastToSegment === '.') {\n        toSegments.push('');\n    }\n    let position = fromSegments.length - 1;\n    let toPosition;\n    let segment;\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\n        segment = toSegments[toPosition];\n        // we stay on the same position\n        if (segment === '.')\n            continue;\n        // go up in the from array\n        if (segment === '..') {\n            // we can't go below zero, but we still need to increment toPosition\n            if (position > 1)\n                position--;\n            // continue\n        }\n        // we reached a non-relative path, we stop here\n        else\n            break;\n    }\n    return (fromSegments.slice(0, position).join('/') +\n        '/' +\n        toSegments.slice(toPosition).join('/'));\n}\n\nvar NavigationType;\n(function (NavigationType) {\n    NavigationType[\"pop\"] = \"pop\";\n    NavigationType[\"push\"] = \"push\";\n})(NavigationType || (NavigationType = {}));\nvar NavigationDirection;\n(function (NavigationDirection) {\n    NavigationDirection[\"back\"] = \"back\";\n    NavigationDirection[\"forward\"] = \"forward\";\n    NavigationDirection[\"unknown\"] = \"\";\n})(NavigationDirection || (NavigationDirection = {}));\n// Generic utils\n/**\n * Normalizes a base by removing any trailing slash and reading the base tag if\n * present.\n *\n * @param base - base to normalize\n */\nfunction normalizeBase(base) {\n    if (!base) {\n        if (isBrowser) {\n            // respect <base> tag\n            const baseEl = document.querySelector('base');\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\n            // strip full URL origin\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\n        }\n        else {\n            base = '/';\n        }\n    }\n    // ensure leading slash when it was removed by the regex above avoid leading\n    // slash with hash because the file could be read from the disk like file://\n    // and the leading slash would cause problems\n    if (base[0] !== '/' && base[0] !== '#')\n        base = '/' + base;\n    // remove the trailing slash so all other method can just do `base + fullPath`\n    // to build an href\n    return removeTrailingSlash(base);\n}\n// remove any character before the hash\nconst BEFORE_HASH_RE = /^[^#]+#/;\nfunction createHref(base, location) {\n    return base.replace(BEFORE_HASH_RE, '#') + location;\n}\n\nfunction getElementPosition(el, offset) {\n    const docRect = document.documentElement.getBoundingClientRect();\n    const elRect = el.getBoundingClientRect();\n    return {\n        behavior: offset.behavior,\n        left: elRect.left - docRect.left - (offset.left || 0),\n        top: elRect.top - docRect.top - (offset.top || 0),\n    };\n}\nconst computeScrollPosition = () => ({\n    left: window.scrollX,\n    top: window.scrollY,\n});\nfunction scrollToPosition(position) {\n    let scrollToOptions;\n    if ('el' in position) {\n        const positionEl = position.el;\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\n        const el = typeof positionEl === 'string'\n            ? isIdSelector\n                ? document.getElementById(positionEl.slice(1))\n                : document.querySelector(positionEl)\n            : positionEl;\n        if (!el) {\n            return;\n        }\n        scrollToOptions = getElementPosition(el, position);\n    }\n    else {\n        scrollToOptions = position;\n    }\n    if ('scrollBehavior' in document.documentElement.style)\n        window.scrollTo(scrollToOptions);\n    else {\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.scrollX, scrollToOptions.top != null ? scrollToOptions.top : window.scrollY);\n    }\n}\nfunction getScrollKey(path, delta) {\n    const position = history.state ? history.state.position - delta : -1;\n    return position + path;\n}\nconst scrollPositions = new Map();\nfunction saveScrollPosition(key, scrollPosition) {\n    scrollPositions.set(key, scrollPosition);\n}\nfunction getSavedScrollPosition(key) {\n    const scroll = scrollPositions.get(key);\n    // consume it so it's not used again\n    scrollPositions.delete(key);\n    return scroll;\n}\n// TODO: RFC about how to save scroll position\n/**\n * ScrollBehavior instance used by the router to compute and restore the scroll\n * position when navigating.\n */\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\n//   // returns a scroll position that can be saved in history\n//   compute(): ScrollPositionEntry\n//   // can take an extended ScrollPositionEntry\n//   scroll(position: ScrollPosition): void\n// }\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\n//   compute: computeScroll,\n//   scroll: scrollToPosition,\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\n/**\n * Creates a normalized history location from a window.location object\n * @param base - The base path\n * @param location - The window.location object\n */\nfunction createCurrentLocation(base, location) {\n    const { pathname, search, hash } = location;\n    // allows hash bases like #, /#, #/, #!, #!/, /#!/, or even /folder#end\n    const hashPos = base.indexOf('#');\n    if (hashPos > -1) {\n        let slicePos = hash.includes(base.slice(hashPos))\n            ? base.slice(hashPos).length\n            : 1;\n        let pathFromHash = hash.slice(slicePos);\n        // prepend the starting slash to hash so the url starts with /#\n        if (pathFromHash[0] !== '/')\n            pathFromHash = '/' + pathFromHash;\n        return stripBase(pathFromHash, '');\n    }\n    const path = stripBase(pathname, base);\n    return path + search + hash;\n}\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\n    let listeners = [];\n    let teardowns = [];\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\n    // can trigger twice\n    let pauseState = null;\n    const popStateHandler = ({ state, }) => {\n        const to = createCurrentLocation(base, location);\n        const from = currentLocation.value;\n        const fromState = historyState.value;\n        let delta = 0;\n        if (state) {\n            currentLocation.value = to;\n            historyState.value = state;\n            // ignore the popstate and reset the pauseState\n            if (pauseState && pauseState === from) {\n                pauseState = null;\n                return;\n            }\n            delta = fromState ? state.position - fromState.position : 0;\n        }\n        else {\n            replace(to);\n        }\n        // Here we could also revert the navigation by calling history.go(-delta)\n        // this listener will have to be adapted to not trigger again and to wait for the url\n        // to be updated before triggering the listeners. Some kind of validation function would also\n        // need to be passed to the listeners so the navigation can be accepted\n        // call all listeners\n        listeners.forEach(listener => {\n            listener(currentLocation.value, from, {\n                delta,\n                type: NavigationType.pop,\n                direction: delta\n                    ? delta > 0\n                        ? NavigationDirection.forward\n                        : NavigationDirection.back\n                    : NavigationDirection.unknown,\n            });\n        });\n    };\n    function pauseListeners() {\n        pauseState = currentLocation.value;\n    }\n    function listen(callback) {\n        // set up the listener and prepare teardown callbacks\n        listeners.push(callback);\n        const teardown = () => {\n            const index = listeners.indexOf(callback);\n            if (index > -1)\n                listeners.splice(index, 1);\n        };\n        teardowns.push(teardown);\n        return teardown;\n    }\n    function beforeUnloadListener() {\n        const { history } = window;\n        if (!history.state)\n            return;\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\n    }\n    function destroy() {\n        for (const teardown of teardowns)\n            teardown();\n        teardowns = [];\n        window.removeEventListener('popstate', popStateHandler);\n        window.removeEventListener('beforeunload', beforeUnloadListener);\n    }\n    // set up the listeners and prepare teardown callbacks\n    window.addEventListener('popstate', popStateHandler);\n    // TODO: could we use 'pagehide' or 'visibilitychange' instead?\n    // https://developer.chrome.com/blog/page-lifecycle-api/\n    window.addEventListener('beforeunload', beforeUnloadListener, {\n        passive: true,\n    });\n    return {\n        pauseListeners,\n        listen,\n        destroy,\n    };\n}\n/**\n * Creates a state object\n */\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\n    return {\n        back,\n        current,\n        forward,\n        replaced,\n        position: window.history.length,\n        scroll: computeScroll ? computeScrollPosition() : null,\n    };\n}\nfunction useHistoryStateNavigation(base) {\n    const { history, location } = window;\n    // private variables\n    const currentLocation = {\n        value: createCurrentLocation(base, location),\n    };\n    const historyState = { value: history.state };\n    // build current history entry as this is a fresh navigation\n    if (!historyState.value) {\n        changeLocation(currentLocation.value, {\n            back: null,\n            current: currentLocation.value,\n            forward: null,\n            // the length is off by one, we need to decrease it\n            position: history.length - 1,\n            replaced: true,\n            // don't add a scroll as the user may have an anchor, and we want\n            // scrollBehavior to be triggered without a saved position\n            scroll: null,\n        }, true);\n    }\n    function changeLocation(to, state, replace) {\n        /**\n         * if a base tag is provided, and we are on a normal domain, we have to\n         * respect the provided `base` attribute because pushState() will use it and\n         * potentially erase anything before the `#` like at\n         * https://github.com/vuejs/router/issues/685 where a base of\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\n         * base tag we can just use everything after the `#`.\n         */\n        const hashIndex = base.indexOf('#');\n        const url = hashIndex > -1\n            ? (location.host && document.querySelector('base')\n                ? base\n                : base.slice(hashIndex)) + to\n            : createBaseLocation() + base + to;\n        try {\n            // BROWSER QUIRK\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\n            historyState.value = state;\n        }\n        catch (err) {\n            {\n                console.error(err);\n            }\n            // Force the navigation, this also resets the call count\n            location[replace ? 'replace' : 'assign'](url);\n        }\n    }\n    function replace(to, data) {\n        const state = assign({}, history.state, buildState(historyState.value.back, \n        // keep back and forward entries but override current position\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\n        changeLocation(to, state, true);\n        currentLocation.value = to;\n    }\n    function push(to, data) {\n        // Add to current entry the information of where we are going\n        // as well as saving the current position\n        const currentState = assign({}, \n        // use current history state to gracefully handle a wrong call to\n        // history.replaceState\n        // https://github.com/vuejs/router/issues/366\n        historyState.value, history.state, {\n            forward: to,\n            scroll: computeScrollPosition(),\n        });\n        changeLocation(currentState.current, currentState, true);\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\n        changeLocation(to, state, false);\n        currentLocation.value = to;\n    }\n    return {\n        location: currentLocation,\n        state: historyState,\n        push,\n        replace,\n    };\n}\n/**\n * Creates an HTML5 history. Most common history for single page applications.\n *\n * @param base -\n */\nfunction createWebHistory(base) {\n    base = normalizeBase(base);\n    const historyNavigation = useHistoryStateNavigation(base);\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\n    function go(delta, triggerListeners = true) {\n        if (!triggerListeners)\n            historyListeners.pauseListeners();\n        history.go(delta);\n    }\n    const routerHistory = assign({\n        // it's overridden right after\n        location: '',\n        base,\n        go,\n        createHref: createHref.bind(null, base),\n    }, historyNavigation, historyListeners);\n    Object.defineProperty(routerHistory, 'location', {\n        enumerable: true,\n        get: () => historyNavigation.location.value,\n    });\n    Object.defineProperty(routerHistory, 'state', {\n        enumerable: true,\n        get: () => historyNavigation.state.value,\n    });\n    return routerHistory;\n}\n\nfunction isRouteLocation(route) {\n    return typeof route === 'string' || (route && typeof route === 'object');\n}\nfunction isRouteName(name) {\n    return typeof name === 'string' || typeof name === 'symbol';\n}\n\n/**\n * Initial route location where the router is. Can be used in navigation guards\n * to differentiate the initial navigation.\n *\n * @example\n * ```js\n * import { START_LOCATION } from 'vue-router'\n *\n * router.beforeEach((to, from) => {\n *   if (from === START_LOCATION) {\n *     // initial navigation\n *   }\n * })\n * ```\n */\nconst START_LOCATION_NORMALIZED = {\n    path: '/',\n    name: undefined,\n    params: {},\n    query: {},\n    hash: '',\n    fullPath: '/',\n    matched: [],\n    meta: {},\n    redirectedFrom: undefined,\n};\n\nconst NavigationFailureSymbol = Symbol('');\n/**\n * Enumeration with all possible types for navigation failures. Can be passed to\n * {@link isNavigationFailure} to check for specific failures.\n */\nvar NavigationFailureType;\n(function (NavigationFailureType) {\n    /**\n     * An aborted navigation is a navigation that failed because a navigation\n     * guard returned `false` or called `next(false)`\n     */\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\n    /**\n     * A cancelled navigation is a navigation that failed because a more recent\n     * navigation finished started (not necessarily finished).\n     */\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\n    /**\n     * A duplicated navigation is a navigation that failed because it was\n     * initiated while already being at the exact same location.\n     */\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\n})(NavigationFailureType || (NavigationFailureType = {}));\n/**\n * Creates a typed NavigationFailure object.\n * @internal\n * @param type - NavigationFailureType\n * @param params - { from, to }\n */\nfunction createRouterError(type, params) {\n    // keep full error messages in cjs versions\n    {\n        return assign(new Error(), {\n            type,\n            [NavigationFailureSymbol]: true,\n        }, params);\n    }\n}\nfunction isNavigationFailure(error, type) {\n    return (error instanceof Error &&\n        NavigationFailureSymbol in error &&\n        (type == null || !!(error.type & type)));\n}\n\n// default pattern for a param: non-greedy everything but /\nconst BASE_PARAM_PATTERN = '[^/]+?';\nconst BASE_PATH_PARSER_OPTIONS = {\n    sensitive: false,\n    strict: false,\n    start: true,\n    end: true,\n};\n// Special Regex characters that must be escaped in static tokens\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\n/**\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\n *\n * @param segments - array of segments returned by tokenizePath\n * @param extraOptions - optional options for the regexp\n * @returns a PathParser\n */\nfunction tokensToParser(segments, extraOptions) {\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\n    const score = [];\n    // the regexp as a string\n    let pattern = options.start ? '^' : '';\n    // extracted keys\n    const keys = [];\n    for (const segment of segments) {\n        // the root segment needs special treatment\n        const segmentScores = segment.length ? [] : [90 /* PathScore.Root */];\n        // allow trailing slash\n        if (options.strict && !segment.length)\n            pattern += '/';\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\n            const token = segment[tokenIndex];\n            // resets the score if we are inside a sub-segment /:a-other-:b\n            let subSegmentScore = 40 /* PathScore.Segment */ +\n                (options.sensitive ? 0.25 /* PathScore.BonusCaseSensitive */ : 0);\n            if (token.type === 0 /* TokenType.Static */) {\n                // prepend the slash if we are starting a new segment\n                if (!tokenIndex)\n                    pattern += '/';\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\n                subSegmentScore += 40 /* PathScore.Static */;\n            }\n            else if (token.type === 1 /* TokenType.Param */) {\n                const { value, repeatable, optional, regexp } = token;\n                keys.push({\n                    name: value,\n                    repeatable,\n                    optional,\n                });\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\n                // the user provided a custom regexp /:id(\\\\d+)\n                if (re !== BASE_PARAM_PATTERN) {\n                    subSegmentScore += 10 /* PathScore.BonusCustomRegExp */;\n                    // make sure the regexp is valid before using it\n                    try {\n                        new RegExp(`(${re})`);\n                    }\n                    catch (err) {\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\n                            err.message);\n                    }\n                }\n                // when we repeat we must take care of the repeating leading slash\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\n                // prepend the slash if we are starting a new segment\n                if (!tokenIndex)\n                    subPattern =\n                        // avoid an optional / if there are more segments e.g. /:p?-static\n                        // or /:p?-:p2\n                        optional && segment.length < 2\n                            ? `(?:/${subPattern})`\n                            : '/' + subPattern;\n                if (optional)\n                    subPattern += '?';\n                pattern += subPattern;\n                subSegmentScore += 20 /* PathScore.Dynamic */;\n                if (optional)\n                    subSegmentScore += -8 /* PathScore.BonusOptional */;\n                if (repeatable)\n                    subSegmentScore += -20 /* PathScore.BonusRepeatable */;\n                if (re === '.*')\n                    subSegmentScore += -50 /* PathScore.BonusWildcard */;\n            }\n            segmentScores.push(subSegmentScore);\n        }\n        // an empty array like /home/ -> [[{home}], []]\n        // if (!segment.length) pattern += '/'\n        score.push(segmentScores);\n    }\n    // only apply the strict bonus to the last score\n    if (options.strict && options.end) {\n        const i = score.length - 1;\n        score[i][score[i].length - 1] += 0.7000000000000001 /* PathScore.BonusStrict */;\n    }\n    // TODO: dev only warn double trailing slash\n    if (!options.strict)\n        pattern += '/?';\n    if (options.end)\n        pattern += '$';\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\n    else if (options.strict)\n        pattern += '(?:/|$)';\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\n    function parse(path) {\n        const match = path.match(re);\n        const params = {};\n        if (!match)\n            return null;\n        for (let i = 1; i < match.length; i++) {\n            const value = match[i] || '';\n            const key = keys[i - 1];\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\n        }\n        return params;\n    }\n    function stringify(params) {\n        let path = '';\n        // for optional parameters to allow to be empty\n        let avoidDuplicatedSlash = false;\n        for (const segment of segments) {\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\n                path += '/';\n            avoidDuplicatedSlash = false;\n            for (const token of segment) {\n                if (token.type === 0 /* TokenType.Static */) {\n                    path += token.value;\n                }\n                else if (token.type === 1 /* TokenType.Param */) {\n                    const { value, repeatable, optional } = token;\n                    const param = value in params ? params[value] : '';\n                    if (isArray(param) && !repeatable) {\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\n                    }\n                    const text = isArray(param)\n                        ? param.join('/')\n                        : param;\n                    if (!text) {\n                        if (optional) {\n                            // if we have more than one optional param like /:a?-static we don't need to care about the optional param\n                            if (segment.length < 2) {\n                                // remove the last slash as we could be at the end\n                                if (path.endsWith('/'))\n                                    path = path.slice(0, -1);\n                                // do not append a slash on the next iteration\n                                else\n                                    avoidDuplicatedSlash = true;\n                            }\n                        }\n                        else\n                            throw new Error(`Missing required param \"${value}\"`);\n                    }\n                    path += text;\n                }\n            }\n        }\n        // avoid empty path when we have multiple optional params\n        return path || '/';\n    }\n    return {\n        re,\n        score,\n        keys,\n        parse,\n        stringify,\n    };\n}\n/**\n * Compares an array of numbers as used in PathParser.score and returns a\n * number. This function can be used to `sort` an array\n *\n * @param a - first array of numbers\n * @param b - second array of numbers\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\n * should be sorted first\n */\nfunction compareScoreArray(a, b) {\n    let i = 0;\n    while (i < a.length && i < b.length) {\n        const diff = b[i] - a[i];\n        // only keep going if diff === 0\n        if (diff)\n            return diff;\n        i++;\n    }\n    // if the last subsegment was Static, the shorter segments should be sorted first\n    // otherwise sort the longest segment first\n    if (a.length < b.length) {\n        return a.length === 1 && a[0] === 40 /* PathScore.Static */ + 40 /* PathScore.Segment */\n            ? -1\n            : 1;\n    }\n    else if (a.length > b.length) {\n        return b.length === 1 && b[0] === 40 /* PathScore.Static */ + 40 /* PathScore.Segment */\n            ? 1\n            : -1;\n    }\n    return 0;\n}\n/**\n * Compare function that can be used with `sort` to sort an array of PathParser\n *\n * @param a - first PathParser\n * @param b - second PathParser\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\n */\nfunction comparePathParserScore(a, b) {\n    let i = 0;\n    const aScore = a.score;\n    const bScore = b.score;\n    while (i < aScore.length && i < bScore.length) {\n        const comp = compareScoreArray(aScore[i], bScore[i]);\n        // do not return if both are equal\n        if (comp)\n            return comp;\n        i++;\n    }\n    if (Math.abs(bScore.length - aScore.length) === 1) {\n        if (isLastScoreNegative(aScore))\n            return 1;\n        if (isLastScoreNegative(bScore))\n            return -1;\n    }\n    // if a and b share the same score entries but b has more, sort b first\n    return bScore.length - aScore.length;\n    // this is the ternary version\n    // return aScore.length < bScore.length\n    //   ? 1\n    //   : aScore.length > bScore.length\n    //   ? -1\n    //   : 0\n}\n/**\n * This allows detecting splats at the end of a path: /home/:id(.*)*\n *\n * @param score - score to check\n * @returns true if the last entry is negative\n */\nfunction isLastScoreNegative(score) {\n    const last = score[score.length - 1];\n    return score.length > 0 && last[last.length - 1] < 0;\n}\n\nconst ROOT_TOKEN = {\n    type: 0 /* TokenType.Static */,\n    value: '',\n};\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\n// After some profiling, the cache seems to be unnecessary because tokenizePath\n// (the slowest part of adding a route) is very fast\n// const tokenCache = new Map<string, Token[][]>()\nfunction tokenizePath(path) {\n    if (!path)\n        return [[]];\n    if (path === '/')\n        return [[ROOT_TOKEN]];\n    if (!path.startsWith('/')) {\n        throw new Error(`Invalid path \"${path}\"`);\n    }\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\n    function crash(message) {\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\n    }\n    let state = 0 /* TokenizerState.Static */;\n    let previousState = state;\n    const tokens = [];\n    // the segment will always be valid because we get into the initial state\n    // with the leading /\n    let segment;\n    function finalizeSegment() {\n        if (segment)\n            tokens.push(segment);\n        segment = [];\n    }\n    // index on the path\n    let i = 0;\n    // char at index\n    let char;\n    // buffer of the value read\n    let buffer = '';\n    // custom regexp for a param\n    let customRe = '';\n    function consumeBuffer() {\n        if (!buffer)\n            return;\n        if (state === 0 /* TokenizerState.Static */) {\n            segment.push({\n                type: 0 /* TokenType.Static */,\n                value: buffer,\n            });\n        }\n        else if (state === 1 /* TokenizerState.Param */ ||\n            state === 2 /* TokenizerState.ParamRegExp */ ||\n            state === 3 /* TokenizerState.ParamRegExpEnd */) {\n            if (segment.length > 1 && (char === '*' || char === '+'))\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\n            segment.push({\n                type: 1 /* TokenType.Param */,\n                value: buffer,\n                regexp: customRe,\n                repeatable: char === '*' || char === '+',\n                optional: char === '*' || char === '?',\n            });\n        }\n        else {\n            crash('Invalid state to consume buffer');\n        }\n        buffer = '';\n    }\n    function addCharToBuffer() {\n        buffer += char;\n    }\n    while (i < path.length) {\n        char = path[i++];\n        if (char === '\\\\' && state !== 2 /* TokenizerState.ParamRegExp */) {\n            previousState = state;\n            state = 4 /* TokenizerState.EscapeNext */;\n            continue;\n        }\n        switch (state) {\n            case 0 /* TokenizerState.Static */:\n                if (char === '/') {\n                    if (buffer) {\n                        consumeBuffer();\n                    }\n                    finalizeSegment();\n                }\n                else if (char === ':') {\n                    consumeBuffer();\n                    state = 1 /* TokenizerState.Param */;\n                }\n                else {\n                    addCharToBuffer();\n                }\n                break;\n            case 4 /* TokenizerState.EscapeNext */:\n                addCharToBuffer();\n                state = previousState;\n                break;\n            case 1 /* TokenizerState.Param */:\n                if (char === '(') {\n                    state = 2 /* TokenizerState.ParamRegExp */;\n                }\n                else if (VALID_PARAM_RE.test(char)) {\n                    addCharToBuffer();\n                }\n                else {\n                    consumeBuffer();\n                    state = 0 /* TokenizerState.Static */;\n                    // go back one character if we were not modifying\n                    if (char !== '*' && char !== '?' && char !== '+')\n                        i--;\n                }\n                break;\n            case 2 /* TokenizerState.ParamRegExp */:\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\n                // it already works by escaping the closing )\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\n                // is this really something people need since you can also write\n                // /prefix_:p()_suffix\n                if (char === ')') {\n                    // handle the escaped )\n                    if (customRe[customRe.length - 1] == '\\\\')\n                        customRe = customRe.slice(0, -1) + char;\n                    else\n                        state = 3 /* TokenizerState.ParamRegExpEnd */;\n                }\n                else {\n                    customRe += char;\n                }\n                break;\n            case 3 /* TokenizerState.ParamRegExpEnd */:\n                // same as finalizing a param\n                consumeBuffer();\n                state = 0 /* TokenizerState.Static */;\n                // go back one character if we were not modifying\n                if (char !== '*' && char !== '?' && char !== '+')\n                    i--;\n                customRe = '';\n                break;\n            default:\n                crash('Unknown state');\n                break;\n        }\n    }\n    if (state === 2 /* TokenizerState.ParamRegExp */)\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\n    consumeBuffer();\n    finalizeSegment();\n    // tokenCache.set(path, tokens)\n    return tokens;\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\n    const parser = tokensToParser(tokenizePath(record.path), options);\n    const matcher = assign(parser, {\n        record,\n        parent,\n        // these needs to be populated by the parent\n        children: [],\n        alias: [],\n    });\n    if (parent) {\n        // both are aliases or both are not aliases\n        // we don't want to mix them because the order is used when\n        // passing originalRecord in Matcher.addRoute\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\n            parent.children.push(matcher);\n    }\n    return matcher;\n}\n\n/**\n * Creates a Router Matcher.\n *\n * @internal\n * @param routes - array of initial routes\n * @param globalOptions - global route options\n */\nfunction createRouterMatcher(routes, globalOptions) {\n    // normalized ordered array of matchers\n    const matchers = [];\n    const matcherMap = new Map();\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\n    function getRecordMatcher(name) {\n        return matcherMap.get(name);\n    }\n    function addRoute(record, parent, originalRecord) {\n        // used later on to remove by name\n        const isRootAdd = !originalRecord;\n        const mainNormalizedRecord = normalizeRouteRecord(record);\n        // we might be the child of an alias\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\n        const options = mergeOptions(globalOptions, record);\n        // generate an array of records to correctly handle aliases\n        const normalizedRecords = [\n            mainNormalizedRecord,\n        ];\n        if ('alias' in record) {\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\n            for (const alias of aliases) {\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\n                    // this allows us to hold a copy of the `components` option\n                    // so that async components cache is hold on the original record\n                    components: originalRecord\n                        ? originalRecord.record.components\n                        : mainNormalizedRecord.components,\n                    path: alias,\n                    // we might be the child of an alias\n                    aliasOf: originalRecord\n                        ? originalRecord.record\n                        : mainNormalizedRecord,\n                    // the aliases are always of the same kind as the original since they\n                    // are defined on the same record\n                }));\n            }\n        }\n        let matcher;\n        let originalMatcher;\n        for (const normalizedRecord of normalizedRecords) {\n            const { path } = normalizedRecord;\n            // Build up the path for nested routes if the child isn't an absolute\n            // route. Only add the / delimiter if the child path isn't empty and if the\n            // parent path doesn't have a trailing slash\n            if (parent && path[0] !== '/') {\n                const parentPath = parent.record.path;\n                const connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\n                normalizedRecord.path =\n                    parent.record.path + (path && connectingSlash + path);\n            }\n            // create the object beforehand, so it can be passed to children\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\n            // if we are an alias we must tell the original record that we exist,\n            // so we can be removed\n            if (originalRecord) {\n                originalRecord.alias.push(matcher);\n            }\n            else {\n                // otherwise, the first record is the original and others are aliases\n                originalMatcher = originalMatcher || matcher;\n                if (originalMatcher !== matcher)\n                    originalMatcher.alias.push(matcher);\n                // remove the route if named and only for the top record (avoid in nested calls)\n                // this works because the original record is the first one\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\n                    removeRoute(record.name);\n            }\n            if (mainNormalizedRecord.children) {\n                const children = mainNormalizedRecord.children;\n                for (let i = 0; i < children.length; i++) {\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\n                }\n            }\n            // if there was no original record, then the first one was not an alias and all\n            // other aliases (if any) need to reference this record when adding children\n            originalRecord = originalRecord || matcher;\n            // TODO: add normalized records for more flexibility\n            // if (parent && isAliasRecord(originalRecord)) {\n            //   parent.children.push(originalRecord)\n            // }\n            // Avoid adding a record that doesn't display anything. This allows passing through records without a component to\n            // not be reached and pass through the catch all route\n            if ((matcher.record.components &&\n                Object.keys(matcher.record.components).length) ||\n                matcher.record.name ||\n                matcher.record.redirect) {\n                insertMatcher(matcher);\n            }\n        }\n        return originalMatcher\n            ? () => {\n                // since other matchers are aliases, they should be removed by the original matcher\n                removeRoute(originalMatcher);\n            }\n            : noop;\n    }\n    function removeRoute(matcherRef) {\n        if (isRouteName(matcherRef)) {\n            const matcher = matcherMap.get(matcherRef);\n            if (matcher) {\n                matcherMap.delete(matcherRef);\n                matchers.splice(matchers.indexOf(matcher), 1);\n                matcher.children.forEach(removeRoute);\n                matcher.alias.forEach(removeRoute);\n            }\n        }\n        else {\n            const index = matchers.indexOf(matcherRef);\n            if (index > -1) {\n                matchers.splice(index, 1);\n                if (matcherRef.record.name)\n                    matcherMap.delete(matcherRef.record.name);\n                matcherRef.children.forEach(removeRoute);\n                matcherRef.alias.forEach(removeRoute);\n            }\n        }\n    }\n    function getRoutes() {\n        return matchers;\n    }\n    function insertMatcher(matcher) {\n        let i = 0;\n        while (i < matchers.length &&\n            comparePathParserScore(matcher, matchers[i]) >= 0 &&\n            // Adding children with empty path should still appear before the parent\n            // https://github.com/vuejs/router/issues/1124\n            (matcher.record.path !== matchers[i].record.path ||\n                !isRecordChildOf(matcher, matchers[i])))\n            i++;\n        matchers.splice(i, 0, matcher);\n        // only add the original record to the name map\n        if (matcher.record.name && !isAliasRecord(matcher))\n            matcherMap.set(matcher.record.name, matcher);\n    }\n    function resolve(location, currentLocation) {\n        let matcher;\n        let params = {};\n        let path;\n        let name;\n        if ('name' in location && location.name) {\n            matcher = matcherMap.get(location.name);\n            if (!matcher)\n                throw createRouterError(1 /* ErrorTypes.MATCHER_NOT_FOUND */, {\n                    location,\n                });\n            name = matcher.record.name;\n            params = assign(\n            // paramsFromLocation is a new object\n            paramsFromLocation(currentLocation.params, \n            // only keep params that exist in the resolved location\n            // only keep optional params coming from a parent record\n            matcher.keys\n                .filter(k => !k.optional)\n                .concat(matcher.parent ? matcher.parent.keys.filter(k => k.optional) : [])\n                .map(k => k.name)), \n            // discard any existing params in the current location that do not exist here\n            // #1497 this ensures better active/exact matching\n            location.params &&\n                paramsFromLocation(location.params, matcher.keys.map(k => k.name)));\n            // throws if cannot be stringified\n            path = matcher.stringify(params);\n        }\n        else if (location.path != null) {\n            // no need to resolve the path with the matcher as it was provided\n            // this also allows the user to control the encoding\n            path = location.path;\n            matcher = matchers.find(m => m.re.test(path));\n            // matcher should have a value after the loop\n            if (matcher) {\n                // we know the matcher works because we tested the regexp\n                params = matcher.parse(path);\n                name = matcher.record.name;\n            }\n            // location is a relative path\n        }\n        else {\n            // match by name or path of current route\n            matcher = currentLocation.name\n                ? matcherMap.get(currentLocation.name)\n                : matchers.find(m => m.re.test(currentLocation.path));\n            if (!matcher)\n                throw createRouterError(1 /* ErrorTypes.MATCHER_NOT_FOUND */, {\n                    location,\n                    currentLocation,\n                });\n            name = matcher.record.name;\n            // since we are navigating to the same location, we don't need to pick the\n            // params like when `name` is provided\n            params = assign({}, currentLocation.params, location.params);\n            path = matcher.stringify(params);\n        }\n        const matched = [];\n        let parentMatcher = matcher;\n        while (parentMatcher) {\n            // reversed order so parents are at the beginning\n            matched.unshift(parentMatcher.record);\n            parentMatcher = parentMatcher.parent;\n        }\n        return {\n            name,\n            path,\n            params,\n            matched,\n            meta: mergeMetaFields(matched),\n        };\n    }\n    // add initial routes\n    routes.forEach(route => addRoute(route));\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\n}\nfunction paramsFromLocation(params, keys) {\n    const newParams = {};\n    for (const key of keys) {\n        if (key in params)\n            newParams[key] = params[key];\n    }\n    return newParams;\n}\n/**\n * Normalizes a RouteRecordRaw. Creates a copy\n *\n * @param record\n * @returns the normalized version\n */\nfunction normalizeRouteRecord(record) {\n    return {\n        path: record.path,\n        redirect: record.redirect,\n        name: record.name,\n        meta: record.meta || {},\n        aliasOf: undefined,\n        beforeEnter: record.beforeEnter,\n        props: normalizeRecordProps(record),\n        children: record.children || [],\n        instances: {},\n        leaveGuards: new Set(),\n        updateGuards: new Set(),\n        enterCallbacks: {},\n        components: 'components' in record\n            ? record.components || null\n            : record.component && { default: record.component },\n    };\n}\n/**\n * Normalize the optional `props` in a record to always be an object similar to\n * components. Also accept a boolean for components.\n * @param record\n */\nfunction normalizeRecordProps(record) {\n    const propsObject = {};\n    // props does not exist on redirect records, but we can set false directly\n    const props = record.props || false;\n    if ('component' in record) {\n        propsObject.default = props;\n    }\n    else {\n        // NOTE: we could also allow a function to be applied to every component.\n        // Would need user feedback for use cases\n        for (const name in record.components)\n            propsObject[name] = typeof props === 'object' ? props[name] : props;\n    }\n    return propsObject;\n}\n/**\n * Checks if a record or any of its parent is an alias\n * @param record\n */\nfunction isAliasRecord(record) {\n    while (record) {\n        if (record.record.aliasOf)\n            return true;\n        record = record.parent;\n    }\n    return false;\n}\n/**\n * Merge meta fields of an array of records\n *\n * @param matched - array of matched records\n */\nfunction mergeMetaFields(matched) {\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\n}\nfunction mergeOptions(defaults, partialOptions) {\n    const options = {};\n    for (const key in defaults) {\n        options[key] = key in partialOptions ? partialOptions[key] : defaults[key];\n    }\n    return options;\n}\nfunction isRecordChildOf(record, parent) {\n    return parent.children.some(child => child === record || isRecordChildOf(record, child));\n}\n\n/**\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\n * version with the leading `?` and without Should work as URLSearchParams\n\n * @internal\n *\n * @param search - search string to parse\n * @returns a query object\n */\nfunction parseQuery(search) {\n    const query = {};\n    // avoid creating an object with an empty key and empty value\n    // because of split('&')\n    if (search === '' || search === '?')\n        return query;\n    const hasLeadingIM = search[0] === '?';\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\n    for (let i = 0; i < searchParams.length; ++i) {\n        // pre decode the + into space\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\n        // allow the = character\n        const eqPos = searchParam.indexOf('=');\n        const key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\n        const value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\n        if (key in query) {\n            // an extra variable for ts types\n            let currentValue = query[key];\n            if (!isArray(currentValue)) {\n                currentValue = query[key] = [currentValue];\n            }\n            currentValue.push(value);\n        }\n        else {\n            query[key] = value;\n        }\n    }\n    return query;\n}\n/**\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\n * doesn't prepend a `?`\n *\n * @internal\n *\n * @param query - query object to stringify\n * @returns string version of the query without the leading `?`\n */\nfunction stringifyQuery(query) {\n    let search = '';\n    for (let key in query) {\n        const value = query[key];\n        key = encodeQueryKey(key);\n        if (value == null) {\n            // only null adds the value\n            if (value !== undefined) {\n                search += (search.length ? '&' : '') + key;\n            }\n            continue;\n        }\n        // keep null values\n        const values = isArray(value)\n            ? value.map(v => v && encodeQueryValue(v))\n            : [value && encodeQueryValue(value)];\n        values.forEach(value => {\n            // skip undefined values in arrays as if they were not present\n            // smaller code than using filter\n            if (value !== undefined) {\n                // only append & with non-empty search\n                search += (search.length ? '&' : '') + key;\n                if (value != null)\n                    search += '=' + value;\n            }\n        });\n    }\n    return search;\n}\n/**\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\n * numbers into strings, removing keys with an undefined value and replacing\n * undefined with null in arrays\n *\n * @param query - query object to normalize\n * @returns a normalized query object\n */\nfunction normalizeQuery(query) {\n    const normalizedQuery = {};\n    for (const key in query) {\n        const value = query[key];\n        if (value !== undefined) {\n            normalizedQuery[key] = isArray(value)\n                ? value.map(v => (v == null ? null : '' + v))\n                : value == null\n                    ? value\n                    : '' + value;\n        }\n    }\n    return normalizedQuery;\n}\n\n/**\n * RouteRecord being rendered by the closest ancestor Router View. Used for\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\n * Location Matched\n *\n * @internal\n */\nconst matchedRouteKey = Symbol('');\n/**\n * Allows overriding the router view depth to control which component in\n * `matched` is rendered. rvd stands for Router View Depth\n *\n * @internal\n */\nconst viewDepthKey = Symbol('');\n/**\n * Allows overriding the router instance returned by `useRouter` in tests. r\n * stands for router\n *\n * @internal\n */\nconst routerKey = Symbol('');\n/**\n * Allows overriding the current route returned by `useRoute` in tests. rl\n * stands for route location\n *\n * @internal\n */\nconst routeLocationKey = Symbol('');\n/**\n * Allows overriding the current route used by router-view. Internally this is\n * used when the `route` prop is passed.\n *\n * @internal\n */\nconst routerViewLocationKey = Symbol('');\n\n/**\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\n */\nfunction useCallbacks() {\n    let handlers = [];\n    function add(handler) {\n        handlers.push(handler);\n        return () => {\n            const i = handlers.indexOf(handler);\n            if (i > -1)\n                handlers.splice(i, 1);\n        };\n    }\n    function reset() {\n        handlers = [];\n    }\n    return {\n        add,\n        list: () => handlers.slice(),\n        reset,\n    };\n}\nfunction guardToPromiseFn(guard, to, from, record, name, runWithContext = fn => fn()) {\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\n    const enterCallbackArray = record &&\n        // name is defined if record is because of the function overload\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\n    return () => new Promise((resolve, reject) => {\n        const next = (valid) => {\n            if (valid === false) {\n                reject(createRouterError(4 /* ErrorTypes.NAVIGATION_ABORTED */, {\n                    from,\n                    to,\n                }));\n            }\n            else if (valid instanceof Error) {\n                reject(valid);\n            }\n            else if (isRouteLocation(valid)) {\n                reject(createRouterError(2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */, {\n                    from: to,\n                    to: valid,\n                }));\n            }\n            else {\n                if (enterCallbackArray &&\n                    // since enterCallbackArray is truthy, both record and name also are\n                    record.enterCallbacks[name] === enterCallbackArray &&\n                    typeof valid === 'function') {\n                    enterCallbackArray.push(valid);\n                }\n                resolve();\n            }\n        };\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\n        const guardReturn = runWithContext(() => guard.call(record && record.instances[name], to, from, next));\n        let guardCall = Promise.resolve(guardReturn);\n        if (guard.length < 3)\n            guardCall = guardCall.then(next);\n        guardCall.catch(err => reject(err));\n    });\n}\nfunction extractComponentsGuards(matched, guardType, to, from, runWithContext = fn => fn()) {\n    const guards = [];\n    for (const record of matched) {\n        for (const name in record.components) {\n            let rawComponent = record.components[name];\n            // skip update and leave guards if the route component is not mounted\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\n                continue;\n            if (isRouteComponent(rawComponent)) {\n                // __vccOpts is added by vue-class-component and contain the regular options\n                const options = rawComponent.__vccOpts || rawComponent;\n                const guard = options[guardType];\n                guard &&\n                    guards.push(guardToPromiseFn(guard, to, from, record, name, runWithContext));\n            }\n            else {\n                // start requesting the chunk already\n                let componentPromise = rawComponent();\n                guards.push(() => componentPromise.then(resolved => {\n                    if (!resolved)\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\n                    const resolvedComponent = isESModule(resolved)\n                        ? resolved.default\n                        : resolved;\n                    // replace the function with the resolved component\n                    // cannot be null or undefined because we went into the for loop\n                    record.components[name] = resolvedComponent;\n                    // __vccOpts is added by vue-class-component and contain the regular options\n                    const options = resolvedComponent.__vccOpts || resolvedComponent;\n                    const guard = options[guardType];\n                    return (guard &&\n                        guardToPromiseFn(guard, to, from, record, name, runWithContext)());\n                }));\n            }\n        }\n    }\n    return guards;\n}\n/**\n * Allows differentiating lazy components from functional components and vue-class-component\n * @internal\n *\n * @param component\n */\nfunction isRouteComponent(component) {\n    return (typeof component === 'object' ||\n        'displayName' in component ||\n        'props' in component ||\n        '__vccOpts' in component);\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\n// `isExactActive` behavior should go through an RFC\nfunction useLink(props) {\n    const router = inject(routerKey);\n    const currentRoute = inject(routeLocationKey);\n    const route = computed(() => router.resolve(unref(props.to)));\n    const activeRecordIndex = computed(() => {\n        const { matched } = route.value;\n        const { length } = matched;\n        const routeMatched = matched[length - 1];\n        const currentMatched = currentRoute.matched;\n        if (!routeMatched || !currentMatched.length)\n            return -1;\n        const index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\n        if (index > -1)\n            return index;\n        // possible parent record\n        const parentRecordPath = getOriginalPath(matched[length - 2]);\n        return (\n        // we are dealing with nested routes\n        length > 1 &&\n            // if the parent and matched route have the same path, this link is\n            // referring to the empty child. Or we currently are on a different\n            // child of the same parent\n            getOriginalPath(routeMatched) === parentRecordPath &&\n            // avoid comparing the child with its parent\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\n            : index);\n    });\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\n        includesParams(currentRoute.params, route.value.params));\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\n    function navigate(e = {}) {\n        if (guardEvent(e)) {\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to)\n            // avoid uncaught errors are they are logged anyway\n            ).catch(noop);\n        }\n        return Promise.resolve();\n    }\n    /**\n     * NOTE: update {@link _RouterLinkI}'s `$slots` type when updating this\n     */\n    return {\n        route,\n        href: computed(() => route.value.href),\n        isActive,\n        isExactActive,\n        navigate,\n    };\n}\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\n    name: 'RouterLink',\n    compatConfig: { MODE: 3 },\n    props: {\n        to: {\n            type: [String, Object],\n            required: true,\n        },\n        replace: Boolean,\n        activeClass: String,\n        // inactiveClass: String,\n        exactActiveClass: String,\n        custom: Boolean,\n        ariaCurrentValue: {\n            type: String,\n            default: 'page',\n        },\n    },\n    useLink,\n    setup(props, { slots }) {\n        const link = reactive(useLink(props));\n        const { options } = inject(routerKey);\n        const elClass = computed(() => ({\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\n            // [getLinkClass(\n            //   props.inactiveClass,\n            //   options.linkInactiveClass,\n            //   'router-link-inactive'\n            // )]: !link.isExactActive,\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\n        }));\n        return () => {\n            const children = slots.default && slots.default(link);\n            return props.custom\n                ? children\n                : h('a', {\n                    'aria-current': link.isExactActive\n                        ? props.ariaCurrentValue\n                        : null,\n                    href: link.href,\n                    // this would override user added attrs but Vue will still add\n                    // the listener, so we end up triggering both\n                    onClick: link.navigate,\n                    class: elClass.value,\n                }, children);\n        };\n    },\n});\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\n/**\n * Component to render a link that triggers a navigation on click.\n */\nconst RouterLink = RouterLinkImpl;\nfunction guardEvent(e) {\n    // don't redirect with control keys\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n        return;\n    // don't redirect when preventDefault called\n    if (e.defaultPrevented)\n        return;\n    // don't redirect on right click\n    if (e.button !== undefined && e.button !== 0)\n        return;\n    // don't redirect if `target=\"_blank\"`\n    // @ts-expect-error getAttribute does exist\n    if (e.currentTarget && e.currentTarget.getAttribute) {\n        // @ts-expect-error getAttribute exists\n        const target = e.currentTarget.getAttribute('target');\n        if (/\\b_blank\\b/i.test(target))\n            return;\n    }\n    // this may be a Weex event which doesn't have this method\n    if (e.preventDefault)\n        e.preventDefault();\n    return true;\n}\nfunction includesParams(outer, inner) {\n    for (const key in inner) {\n        const innerValue = inner[key];\n        const outerValue = outer[key];\n        if (typeof innerValue === 'string') {\n            if (innerValue !== outerValue)\n                return false;\n        }\n        else {\n            if (!isArray(outerValue) ||\n                outerValue.length !== innerValue.length ||\n                innerValue.some((value, i) => value !== outerValue[i]))\n                return false;\n        }\n    }\n    return true;\n}\n/**\n * Get the original path value of a record by following its aliasOf\n * @param record\n */\nfunction getOriginalPath(record) {\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\n}\n/**\n * Utility class to get the active class based on defaults.\n * @param propClass\n * @param globalClass\n * @param defaultClass\n */\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\n    ? propClass\n    : globalClass != null\n        ? globalClass\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\n    name: 'RouterView',\n    // #674 we manually inherit them\n    inheritAttrs: false,\n    props: {\n        name: {\n            type: String,\n            default: 'default',\n        },\n        route: Object,\n    },\n    // Better compat for @vue/compat users\n    // https://github.com/vuejs/router/issues/1315\n    compatConfig: { MODE: 3 },\n    setup(props, { attrs, slots }) {\n        const injectedRoute = inject(routerViewLocationKey);\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\n        const injectedDepth = inject(viewDepthKey, 0);\n        // The depth changes based on empty components option, which allows passthrough routes e.g. routes with children\n        // that are used to reuse the `path` property\n        const depth = computed(() => {\n            let initialDepth = unref(injectedDepth);\n            const { matched } = routeToDisplay.value;\n            let matchedRoute;\n            while ((matchedRoute = matched[initialDepth]) &&\n                !matchedRoute.components) {\n                initialDepth++;\n            }\n            return initialDepth;\n        });\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth.value]);\n        provide(viewDepthKey, computed(() => depth.value + 1));\n        provide(matchedRouteKey, matchedRouteRef);\n        provide(routerViewLocationKey, routeToDisplay);\n        const viewRef = ref();\n        // watch at the same time the component instance, the route record we are\n        // rendering, and the name\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\n            // copy reused instances\n            if (to) {\n                // this will update the instance for new instances as well as reused\n                // instances when navigating to a new route\n                to.instances[name] = instance;\n                // the component instance is reused for a different route or name, so\n                // we copy any saved update or leave guards. With async setup, the\n                // mounting component will mount before the matchedRoute changes,\n                // making instance === oldInstance, so we check if guards have been\n                // added before. This works because we remove guards when\n                // unmounting/deactivating components\n                if (from && from !== to && instance && instance === oldInstance) {\n                    if (!to.leaveGuards.size) {\n                        to.leaveGuards = from.leaveGuards;\n                    }\n                    if (!to.updateGuards.size) {\n                        to.updateGuards = from.updateGuards;\n                    }\n                }\n            }\n            // trigger beforeRouteEnter next callbacks\n            if (instance &&\n                to &&\n                // if there is no instance but to and from are the same this might be\n                // the first visit\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\n            }\n        }, { flush: 'post' });\n        return () => {\n            const route = routeToDisplay.value;\n            // we need the value at the time we render because when we unmount, we\n            // navigated to a different location so the value is different\n            const currentName = props.name;\n            const matchedRoute = matchedRouteRef.value;\n            const ViewComponent = matchedRoute && matchedRoute.components[currentName];\n            if (!ViewComponent) {\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\n            }\n            // props from route configuration\n            const routePropsOption = matchedRoute.props[currentName];\n            const routeProps = routePropsOption\n                ? routePropsOption === true\n                    ? route.params\n                    : typeof routePropsOption === 'function'\n                        ? routePropsOption(route)\n                        : routePropsOption\n                : null;\n            const onVnodeUnmounted = vnode => {\n                // remove the instance reference to prevent leak\n                if (vnode.component.isUnmounted) {\n                    matchedRoute.instances[currentName] = null;\n                }\n            };\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\n                onVnodeUnmounted,\n                ref: viewRef,\n            }));\n            return (\n            // pass the vnode to the slot as a prop.\n            // h and <component :is=\"...\"> both accept vnodes\n            normalizeSlot(slots.default, { Component: component, route }) ||\n                component);\n        };\n    },\n});\nfunction normalizeSlot(slot, data) {\n    if (!slot)\n        return null;\n    const slotContent = slot(data);\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\n}\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\n/**\n * Component to display the current route the user is at.\n */\nconst RouterView = RouterViewImpl;\n\n/**\n * Creates a Router instance that can be used by a Vue app.\n *\n * @param options - {@link RouterOptions}\n */\nfunction createRouter(options) {\n    const matcher = createRouterMatcher(options.routes, options);\n    const parseQuery$1 = options.parseQuery || parseQuery;\n    const stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\n    const routerHistory = options.history;\n    const beforeGuards = useCallbacks();\n    const beforeResolveGuards = useCallbacks();\n    const afterGuards = useCallbacks();\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\n    let pendingLocation = START_LOCATION_NORMALIZED;\n    // leave the scrollRestoration if no scrollBehavior is provided\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\n        history.scrollRestoration = 'manual';\n    }\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\n    const encodeParams = applyToParams.bind(null, encodeParam);\n    const decodeParams = \n    // @ts-expect-error: intentionally avoid the type check\n    applyToParams.bind(null, decode);\n    function addRoute(parentOrRoute, route) {\n        let parent;\n        let record;\n        if (isRouteName(parentOrRoute)) {\n            parent = matcher.getRecordMatcher(parentOrRoute);\n            record = route;\n        }\n        else {\n            record = parentOrRoute;\n        }\n        return matcher.addRoute(record, parent);\n    }\n    function removeRoute(name) {\n        const recordMatcher = matcher.getRecordMatcher(name);\n        if (recordMatcher) {\n            matcher.removeRoute(recordMatcher);\n        }\n    }\n    function getRoutes() {\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\n    }\n    function hasRoute(name) {\n        return !!matcher.getRecordMatcher(name);\n    }\n    function resolve(rawLocation, currentLocation) {\n        // const objectLocation = routerLocationAsObject(rawLocation)\n        // we create a copy to modify it later\n        currentLocation = assign({}, currentLocation || currentRoute.value);\n        if (typeof rawLocation === 'string') {\n            const locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\n            const matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\n            const href = routerHistory.createHref(locationNormalized.fullPath);\n            // locationNormalized is always a new object\n            return assign(locationNormalized, matchedRoute, {\n                params: decodeParams(matchedRoute.params),\n                hash: decode(locationNormalized.hash),\n                redirectedFrom: undefined,\n                href,\n            });\n        }\n        let matcherLocation;\n        // path could be relative in object as well\n        if (rawLocation.path != null) {\n            matcherLocation = assign({}, rawLocation, {\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\n            });\n        }\n        else {\n            // remove any nullish param\n            const targetParams = assign({}, rawLocation.params);\n            for (const key in targetParams) {\n                if (targetParams[key] == null) {\n                    delete targetParams[key];\n                }\n            }\n            // pass encoded values to the matcher, so it can produce encoded path and fullPath\n            matcherLocation = assign({}, rawLocation, {\n                params: encodeParams(targetParams),\n            });\n            // current location params are decoded, we need to encode them in case the\n            // matcher merges the params\n            currentLocation.params = encodeParams(currentLocation.params);\n        }\n        const matchedRoute = matcher.resolve(matcherLocation, currentLocation);\n        const hash = rawLocation.hash || '';\n        // the matcher might have merged current location params, so\n        // we need to run the decoding again\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\n            hash: encodeHash(hash),\n            path: matchedRoute.path,\n        }));\n        const href = routerHistory.createHref(fullPath);\n        return assign({\n            fullPath,\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\n            // hash\n            hash,\n            query: \n            // if the user is using a custom query lib like qs, we might have\n            // nested objects, so we keep the query as is, meaning it can contain\n            // numbers at `$route.query`, but at the point, the user will have to\n            // use their own type anyway.\n            // https://github.com/vuejs/router/issues/328#issuecomment-649481567\n            stringifyQuery$1 === stringifyQuery\n                ? normalizeQuery(rawLocation.query)\n                : (rawLocation.query || {}),\n        }, matchedRoute, {\n            redirectedFrom: undefined,\n            href,\n        });\n    }\n    function locationAsObject(to) {\n        return typeof to === 'string'\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\n            : assign({}, to);\n    }\n    function checkCanceledNavigation(to, from) {\n        if (pendingLocation !== to) {\n            return createRouterError(8 /* ErrorTypes.NAVIGATION_CANCELLED */, {\n                from,\n                to,\n            });\n        }\n    }\n    function push(to) {\n        return pushWithRedirect(to);\n    }\n    function replace(to) {\n        return push(assign(locationAsObject(to), { replace: true }));\n    }\n    function handleRedirectRecord(to) {\n        const lastMatched = to.matched[to.matched.length - 1];\n        if (lastMatched && lastMatched.redirect) {\n            const { redirect } = lastMatched;\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\n            if (typeof newTargetLocation === 'string') {\n                newTargetLocation =\n                    newTargetLocation.includes('?') || newTargetLocation.includes('#')\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\n                        : // force empty params\n                            { path: newTargetLocation };\n                // @ts-expect-error: force empty params when a string is passed to let\n                // the router parse them again\n                newTargetLocation.params = {};\n            }\n            return assign({\n                query: to.query,\n                hash: to.hash,\n                // avoid transferring params if the redirect has a path\n                params: newTargetLocation.path != null ? {} : to.params,\n            }, newTargetLocation);\n        }\n    }\n    function pushWithRedirect(to, redirectedFrom) {\n        const targetLocation = (pendingLocation = resolve(to));\n        const from = currentRoute.value;\n        const data = to.state;\n        const force = to.force;\n        // to could be a string where `replace` is a function\n        const replace = to.replace === true;\n        const shouldRedirect = handleRedirectRecord(targetLocation);\n        if (shouldRedirect)\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\n                state: typeof shouldRedirect === 'object'\n                    ? assign({}, data, shouldRedirect.state)\n                    : data,\n                force,\n                replace,\n            }), \n            // keep original redirectedFrom if it exists\n            redirectedFrom || targetLocation);\n        // if it was a redirect we already called `pushWithRedirect` above\n        const toLocation = targetLocation;\n        toLocation.redirectedFrom = redirectedFrom;\n        let failure;\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\n            failure = createRouterError(16 /* ErrorTypes.NAVIGATION_DUPLICATED */, { to: toLocation, from });\n            // trigger scroll to allow scrolling to the same anchor\n            handleScroll(from, from, \n            // this is a push, the only way for it to be triggered from a\n            // history.listen is with a redirect, which makes it become a push\n            true, \n            // This cannot be the first navigation because the initial location\n            // cannot be manually navigated to\n            false);\n        }\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\n            .catch((error) => isNavigationFailure(error)\n            ? // navigation redirects still mark the router as ready\n                isNavigationFailure(error, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)\n                    ? error\n                    : markAsReady(error) // also returns the error\n            : // reject any unknown error\n                triggerError(error, toLocation, from))\n            .then((failure) => {\n            if (failure) {\n                if (isNavigationFailure(failure, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)) {\n                    return pushWithRedirect(\n                    // keep options\n                    assign({\n                        // preserve an existing replacement but allow the redirect to override it\n                        replace,\n                    }, locationAsObject(failure.to), {\n                        state: typeof failure.to === 'object'\n                            ? assign({}, data, failure.to.state)\n                            : data,\n                        force,\n                    }), \n                    // preserve the original redirectedFrom if any\n                    redirectedFrom || toLocation);\n                }\n            }\n            else {\n                // if we fail we don't finalize the navigation\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\n            }\n            triggerAfterEach(toLocation, from, failure);\n            return failure;\n        });\n    }\n    /**\n     * Helper to reject and skip all navigation guards if a new navigation happened\n     * @param to\n     * @param from\n     */\n    function checkCanceledNavigationAndReject(to, from) {\n        const error = checkCanceledNavigation(to, from);\n        return error ? Promise.reject(error) : Promise.resolve();\n    }\n    function runWithContext(fn) {\n        const app = installedApps.values().next().value;\n        // support Vue < 3.3\n        return app && typeof app.runWithContext === 'function'\n            ? app.runWithContext(fn)\n            : fn();\n    }\n    // TODO: refactor the whole before guards by internally using router.beforeEach\n    function navigate(to, from) {\n        let guards;\n        const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from);\n        // all components here have been resolved once because we are leaving\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\n        // leavingRecords is already reversed\n        for (const record of leavingRecords) {\n            record.leaveGuards.forEach(guard => {\n                guards.push(guardToPromiseFn(guard, to, from));\n            });\n        }\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\n        guards.push(canceledNavigationCheck);\n        // run the queue of per route beforeRouteLeave guards\n        return (runGuardQueue(guards)\n            .then(() => {\n            // check global guards beforeEach\n            guards = [];\n            for (const guard of beforeGuards.list()) {\n                guards.push(guardToPromiseFn(guard, to, from));\n            }\n            guards.push(canceledNavigationCheck);\n            return runGuardQueue(guards);\n        })\n            .then(() => {\n            // check in components beforeRouteUpdate\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\n            for (const record of updatingRecords) {\n                record.updateGuards.forEach(guard => {\n                    guards.push(guardToPromiseFn(guard, to, from));\n                });\n            }\n            guards.push(canceledNavigationCheck);\n            // run the queue of per route beforeEnter guards\n            return runGuardQueue(guards);\n        })\n            .then(() => {\n            // check the route beforeEnter\n            guards = [];\n            for (const record of enteringRecords) {\n                // do not trigger beforeEnter on reused views\n                if (record.beforeEnter) {\n                    if (isArray(record.beforeEnter)) {\n                        for (const beforeEnter of record.beforeEnter)\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\n                    }\n                    else {\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\n                    }\n                }\n            }\n            guards.push(canceledNavigationCheck);\n            // run the queue of per route beforeEnter guards\n            return runGuardQueue(guards);\n        })\n            .then(() => {\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\n            to.matched.forEach(record => (record.enterCallbacks = {}));\n            // check in-component beforeRouteEnter\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from, runWithContext);\n            guards.push(canceledNavigationCheck);\n            // run the queue of per route beforeEnter guards\n            return runGuardQueue(guards);\n        })\n            .then(() => {\n            // check global guards beforeResolve\n            guards = [];\n            for (const guard of beforeResolveGuards.list()) {\n                guards.push(guardToPromiseFn(guard, to, from));\n            }\n            guards.push(canceledNavigationCheck);\n            return runGuardQueue(guards);\n        })\n            // catch any navigation canceled\n            .catch(err => isNavigationFailure(err, 8 /* ErrorTypes.NAVIGATION_CANCELLED */)\n            ? err\n            : Promise.reject(err)));\n    }\n    function triggerAfterEach(to, from, failure) {\n        // navigation is confirmed, call afterGuards\n        // TODO: wrap with error handlers\n        afterGuards\n            .list()\n            .forEach(guard => runWithContext(() => guard(to, from, failure)));\n    }\n    /**\n     * - Cleans up any navigation guards\n     * - Changes the url if necessary\n     * - Calls the scrollBehavior\n     */\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\n        // a more recent navigation took place\n        const error = checkCanceledNavigation(toLocation, from);\n        if (error)\n            return error;\n        // only consider as push if it's not the first navigation\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\n        const state = !isBrowser ? {} : history.state;\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\n        // it's just reflecting the url\n        if (isPush) {\n            // on the initial navigation, we want to reuse the scroll position from\n            // history state if it exists\n            if (replace || isFirstNavigation)\n                routerHistory.replace(toLocation.fullPath, assign({\n                    scroll: isFirstNavigation && state && state.scroll,\n                }, data));\n            else\n                routerHistory.push(toLocation.fullPath, data);\n        }\n        // accept current navigation\n        currentRoute.value = toLocation;\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\n        markAsReady();\n    }\n    let removeHistoryListener;\n    // attach listener to history to trigger navigations\n    function setupListeners() {\n        // avoid setting up listeners twice due to an invalid first navigation\n        if (removeHistoryListener)\n            return;\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\n            if (!router.listening)\n                return;\n            // cannot be a redirect route because it was in history\n            const toLocation = resolve(to);\n            // due to dynamic routing, and to hash history with manual navigation\n            // (manually changing the url or calling history.hash = '#/somewhere'),\n            // there could be a redirect record in history\n            const shouldRedirect = handleRedirectRecord(toLocation);\n            if (shouldRedirect) {\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\n                return;\n            }\n            pendingLocation = toLocation;\n            const from = currentRoute.value;\n            // TODO: should be moved to web history?\n            if (isBrowser) {\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\n            }\n            navigate(toLocation, from)\n                .catch((error) => {\n                if (isNavigationFailure(error, 4 /* ErrorTypes.NAVIGATION_ABORTED */ | 8 /* ErrorTypes.NAVIGATION_CANCELLED */)) {\n                    return error;\n                }\n                if (isNavigationFailure(error, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)) {\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\n                    // false) but this is bug prone as we have no way to wait the\n                    // navigation to be finished before calling pushWithRedirect. Using\n                    // a setTimeout of 16ms seems to work but there is no guarantee for\n                    // it to work on every browser. So instead we do not restore the\n                    // history entry and trigger a new navigation as requested by the\n                    // navigation guard.\n                    // the error is already handled by router.push we just want to avoid\n                    // logging the error\n                    pushWithRedirect(error.to, toLocation\n                    // avoid an uncaught rejection, let push call triggerError\n                    )\n                        .then(failure => {\n                        // manual change in hash history #916 ending up in the URL not\n                        // changing, but it was changed by the manual url change, so we\n                        // need to manually change it ourselves\n                        if (isNavigationFailure(failure, 4 /* ErrorTypes.NAVIGATION_ABORTED */ |\n                            16 /* ErrorTypes.NAVIGATION_DUPLICATED */) &&\n                            !info.delta &&\n                            info.type === NavigationType.pop) {\n                            routerHistory.go(-1, false);\n                        }\n                    })\n                        .catch(noop);\n                    // avoid the then branch\n                    return Promise.reject();\n                }\n                // do not restore history on unknown direction\n                if (info.delta) {\n                    routerHistory.go(-info.delta, false);\n                }\n                // unrecognized error, transfer to the global handler\n                return triggerError(error, toLocation, from);\n            })\n                .then((failure) => {\n                failure =\n                    failure ||\n                        finalizeNavigation(\n                        // after navigation, all matched components are resolved\n                        toLocation, from, false);\n                // revert the navigation\n                if (failure) {\n                    if (info.delta &&\n                        // a new navigation has been triggered, so we do not want to revert, that will change the current history\n                        // entry while a different route is displayed\n                        !isNavigationFailure(failure, 8 /* ErrorTypes.NAVIGATION_CANCELLED */)) {\n                        routerHistory.go(-info.delta, false);\n                    }\n                    else if (info.type === NavigationType.pop &&\n                        isNavigationFailure(failure, 4 /* ErrorTypes.NAVIGATION_ABORTED */ | 16 /* ErrorTypes.NAVIGATION_DUPLICATED */)) {\n                        // manual change in hash history #916\n                        // it's like a push but lacks the information of the direction\n                        routerHistory.go(-1, false);\n                    }\n                }\n                triggerAfterEach(toLocation, from, failure);\n            })\n                // avoid warnings in the console about uncaught rejections, they are logged by triggerErrors\n                .catch(noop);\n        });\n    }\n    // Initialization and Errors\n    let readyHandlers = useCallbacks();\n    let errorListeners = useCallbacks();\n    let ready;\n    /**\n     * Trigger errorListeners added via onError and throws the error as well\n     *\n     * @param error - error to throw\n     * @param to - location we were navigating to when the error happened\n     * @param from - location we were navigating from when the error happened\n     * @returns the error as a rejected promise\n     */\n    function triggerError(error, to, from) {\n        markAsReady(error);\n        const list = errorListeners.list();\n        if (list.length) {\n            list.forEach(handler => handler(error, to, from));\n        }\n        else {\n            console.error(error);\n        }\n        // reject the error no matter there were error listeners or not\n        return Promise.reject(error);\n    }\n    function isReady() {\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\n            return Promise.resolve();\n        return new Promise((resolve, reject) => {\n            readyHandlers.add([resolve, reject]);\n        });\n    }\n    function markAsReady(err) {\n        if (!ready) {\n            // still not ready if an error happened\n            ready = !err;\n            setupListeners();\n            readyHandlers\n                .list()\n                .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\n            readyHandlers.reset();\n        }\n        return err;\n    }\n    // Scroll behavior\n    function handleScroll(to, from, isPush, isFirstNavigation) {\n        const { scrollBehavior } = options;\n        if (!isBrowser || !scrollBehavior)\n            return Promise.resolve();\n        const scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\n            ((isFirstNavigation || !isPush) &&\n                history.state &&\n                history.state.scroll) ||\n            null;\n        return nextTick()\n            .then(() => scrollBehavior(to, from, scrollPosition))\n            .then(position => position && scrollToPosition(position))\n            .catch(err => triggerError(err, to, from));\n    }\n    const go = (delta) => routerHistory.go(delta);\n    let started;\n    const installedApps = new Set();\n    const router = {\n        currentRoute,\n        listening: true,\n        addRoute,\n        removeRoute,\n        hasRoute,\n        getRoutes,\n        resolve,\n        options,\n        push,\n        replace,\n        go,\n        back: () => go(-1),\n        forward: () => go(1),\n        beforeEach: beforeGuards.add,\n        beforeResolve: beforeResolveGuards.add,\n        afterEach: afterGuards.add,\n        onError: errorListeners.add,\n        isReady,\n        install(app) {\n            const router = this;\n            app.component('RouterLink', RouterLink);\n            app.component('RouterView', RouterView);\n            app.config.globalProperties.$router = router;\n            Object.defineProperty(app.config.globalProperties, '$route', {\n                enumerable: true,\n                get: () => unref(currentRoute),\n            });\n            // this initial navigation is only necessary on client, on server it doesn't\n            // make sense because it will create an extra unnecessary navigation and could\n            // lead to problems\n            if (isBrowser &&\n                // used for the initial navigation client side to avoid pushing\n                // multiple times when the router is used in multiple apps\n                !started &&\n                currentRoute.value === START_LOCATION_NORMALIZED) {\n                // see above\n                started = true;\n                push(routerHistory.location).catch(err => {\n                });\n            }\n            const reactiveRoute = {};\n            for (const key in START_LOCATION_NORMALIZED) {\n                Object.defineProperty(reactiveRoute, key, {\n                    get: () => currentRoute.value[key],\n                    enumerable: true,\n                });\n            }\n            app.provide(routerKey, router);\n            app.provide(routeLocationKey, shallowReactive(reactiveRoute));\n            app.provide(routerViewLocationKey, currentRoute);\n            const unmountApp = app.unmount;\n            installedApps.add(app);\n            app.unmount = function () {\n                installedApps.delete(app);\n                // the router is not attached to an app anymore\n                if (installedApps.size < 1) {\n                    // invalidate the current navigation\n                    pendingLocation = START_LOCATION_NORMALIZED;\n                    removeHistoryListener && removeHistoryListener();\n                    removeHistoryListener = null;\n                    currentRoute.value = START_LOCATION_NORMALIZED;\n                    started = false;\n                    ready = false;\n                }\n                unmountApp();\n            };\n        },\n    };\n    // TODO: type this as NavigationGuardReturn or similar instead of any\n    function runGuardQueue(guards) {\n        return guards.reduce((promise, guard) => promise.then(() => runWithContext(guard)), Promise.resolve());\n    }\n    return router;\n}\nfunction extractChangingRecords(to, from) {\n    const leavingRecords = [];\n    const updatingRecords = [];\n    const enteringRecords = [];\n    const len = Math.max(from.matched.length, to.matched.length);\n    for (let i = 0; i < len; i++) {\n        const recordFrom = from.matched[i];\n        if (recordFrom) {\n            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))\n                updatingRecords.push(recordFrom);\n            else\n                leavingRecords.push(recordFrom);\n        }\n        const recordTo = to.matched[i];\n        if (recordTo) {\n            // the type doesn't matter because we are comparing per reference\n            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\n                enteringRecords.push(recordTo);\n            }\n        }\n    }\n    return [leavingRecords, updatingRecords, enteringRecords];\n}\n\n/**\n * Returns the router instance. Equivalent to using `$router` inside\n * templates.\n */\nfunction useRouter() {\n    return inject(routerKey);\n}\n/**\n * Returns the current route location. Equivalent to using `$route` inside\n * templates.\n */\nfunction useRoute() {\n    return inject(routeLocationKey);\n}","originalLength":147675,"removedExports":["createMemoryHistory","createWebHashHistory","loadRouteLocation","onBeforeRouteLeave","onBeforeRouteUpdate"],"renderedExports":["NavigationFailureType","RouterLink","RouterView","START_LOCATION","createRouter","createRouterMatcher","createWebHistory","isNavigationFailure","matchedRouteKey","parseQuery","routeLocationKey","routerKey","routerViewLocationKey","stringifyQuery","useLink","useRoute","useRouter","viewDepthKey"],"renderedLength":101717},"C:/main/projects/k.g.i/src/App.vue?vue&type=script&setup=true&lang.ts":{"code":"const _sfc_main$9 = /* @__PURE__ */ defineComponent({\n  __name: \"App\",\n  setup(__props) {\n    const route = useRoute();\n    useRouter();\n    let currentBackground = ref(route.meta.background);\n    let currentForeground = ref(route.meta.background);\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(unref(RouterView), null, {\n        default: withCtx(({ Component, route: _route }) => [\n          createBaseVNode(\"div\", {\n            class: \"main-container\",\n            style: normalizeStyle({\n              \"--background\": `url(${unref(currentBackground)})`,\n              \"--fg-background\": `url(${unref(currentForeground)})`\n            })\n          }, [\n            createVNode(Transition, {\n              name: \"kk\",\n              mode: \"out-in\",\n              onBeforeEnter: _cache[0] || (_cache[0] = ($event) => {\n                isRef(currentBackground) ? currentBackground.value = unref(route).meta.previousBackground : currentBackground = unref(route).meta.previousBackground;\n                isRef(currentForeground) ? currentForeground.value = unref(route).meta.background : currentForeground = unref(route).meta.background;\n              }),\n              onBeforeLeave: _cache[1] || (_cache[1] = ($event) => {\n                isRef(currentBackground) ? currentBackground.value = unref(route).meta.previousBackground : currentBackground = unref(route).meta.previousBackground;\n                isRef(currentForeground) ? currentForeground.value = unref(route).meta.background : currentForeground = unref(route).meta.background;\n              }),\n              onAfterEnter: _cache[2] || (_cache[2] = ($event) => isRef(currentBackground) ? currentBackground.value = unref(route).meta.background : currentBackground = unref(route).meta.background)\n            }, {\n              default: withCtx(() => [\n                (openBlock(), createBlock(resolveDynamicComponent(Component)))\n              ]),\n              _: 2\n            }, 1024)\n          ], 4)\n        ]),\n        _: 1\n      });\n    };\n  }\n});","originalLength":2462,"removedExports":[],"renderedExports":["default"],"renderedLength":2036},"C:/main/projects/k.g.i/src/components/MenuButton.vue?vue&type=script&setup=true&lang.ts":{"code":"const _hoisted_1$5 = [\"src\", \"alt\", \"width\", \"height\"];\nconst _sfc_main$8 = /* @__PURE__ */ defineComponent({\n  __name: \"MenuButton\",\n  props: {\n    name: {},\n    alt: {},\n    active: { type: Boolean },\n    link: {},\n    dimensions: {}\n  },\n  setup(__props) {\n    const clicked = ref(false);\n    return (_ctx, _cache) => {\n      const _component_RouterLink = resolveComponent(\"RouterLink\");\n      return openBlock(), createBlock(_component_RouterLink, {\n        to: `/${_ctx.link ?? _ctx.name}`,\n        class: \"menu-button\",\n        onMousedown: _cache[0] || (_cache[0] = ($event) => clicked.value = true),\n        onMouseup: _cache[1] || (_cache[1] = ($event) => clicked.value = false),\n        onMouseleave: _cache[2] || (_cache[2] = ($event) => clicked.value = false)\n      }, {\n        default: withCtx(() => [\n          createBaseVNode(\"img\", {\n            src: `/img/button/${clicked.value !== _ctx.active ? \"on\" : \"off\"}/${_ctx.name}.png`,\n            alt: _ctx.alt,\n            width: _ctx.dimensions ? _ctx.dimensions[0] : 76,\n            height: _ctx.dimensions ? _ctx.dimensions[1] : 20,\n            role: \"button\"\n          }, null, 8, _hoisted_1$5)\n        ]),\n        _: 1\n      }, 8, [\"to\"]);\n    };\n  }\n});","originalLength":1462,"removedExports":[],"renderedExports":["default"],"renderedLength":1223},"C:/main/projects/k.g.i/src/components/MenuButton.vue?vue&type=style&index=0&lang.scss":{"code":"const MenuButton_vue_vue_type_style_index_0_lang = '';","originalLength":450,"removedExports":[],"renderedExports":["default"],"renderedLength":54},"C:/main/projects/k.g.i/src/components/MainView.vue?vue&type=script&setup=true&lang.ts":{"code":"const _hoisted_1$4 = { class: \"title-box\" };\nconst _hoisted_2$1 = [\"src\", \"alt\"];\nconst _hoisted_3 = /* @__PURE__ */ createBaseVNode(\"p\", { class: \"tagline glow\" }, \"A SILLY CAT RPG :3\", -1);\nconst _hoisted_4 = /* @__PURE__ */ createBaseVNode(\"div\", { class: \"divider\" }, null, -1);\nconst _hoisted_5 = { class: \"main-content\" };\nconst _hoisted_6 = { class: \"article-container\" };\nconst _hoisted_7 = { class: \"main-article glow\" };\nconst _hoisted_8 = { class: \"cat-container\" };\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = { class: \"button-container\" };\nconst _hoisted_11 = { class: \"back-container\" };\nconst _sfc_main$7 = /* @__PURE__ */ defineComponent({\n  __name: \"MainView\",\n  props: {\n    logo: {},\n    logoAlt: {},\n    current: {},\n    text: {},\n    cat: {},\n    invertMenu: { type: Boolean }\n  },\n  setup(__props) {\n    useCssVars((_ctx) => ({\n      \"34784a36\": menuOrder.value\n    }));\n    const props = __props;\n    useRoute();\n    const menuOrder = computed(() => props.invertMenu ? \"row-reverse\" : \"row\");\n    return (_ctx, _cache) => {\n      const _component_TextBox = resolveComponent(\"TextBox\");\n      return openBlock(), createElementBlock(\"main\", null, [\n        createBaseVNode(\"div\", _hoisted_1$4, [\n          createBaseVNode(\"img\", {\n            src: _ctx.$props.logo,\n            width: \"176\",\n            height: \"86\",\n            alt: _ctx.logoAlt\n          }, null, 8, _hoisted_2$1),\n          _hoisted_3\n        ]),\n        _hoisted_4,\n        createBaseVNode(\"section\", _hoisted_5, [\n          createBaseVNode(\"section\", _hoisted_6, [\n            createBaseVNode(\"article\", _hoisted_7, [\n              createBaseVNode(\"section\", _hoisted_8, [\n                createBaseVNode(\"img\", {\n                  src: _ctx.cat,\n                  alt: \"Cat\",\n                  width: \"79\",\n                  height: \"92\"\n                }, null, 8, _hoisted_9)\n              ]),\n              createBaseVNode(\"section\", _hoisted_10, [\n                createVNode(_sfc_main$8, {\n                  name: \"timeline\",\n                  alt: \"Timeline\",\n                  active: _ctx.current === \"timeline\"\n                }, null, 8, [\"active\"]),\n                createVNode(_sfc_main$8, {\n                  name: \"cats\",\n                  alt: \"The Cats\",\n                  active: _ctx.current === \"cats\"\n                }, null, 8, [\"active\"]),\n                createVNode(_sfc_main$8, {\n                  name: \"team\",\n                  alt: \"Our Team\",\n                  active: _ctx.current === \"team\"\n                }, null, 8, [\"active\"]),\n                createVNode(_sfc_main$8, {\n                  name: \"contact\",\n                  alt: \"Contact Us\",\n                  active: _ctx.current === \"contact\"\n                }, null, 8, [\"active\"])\n              ])\n            ])\n          ]),\n          createVNode(_component_TextBox, {\n            class: \"text-box\",\n            text: _ctx.text\n          }, null, 8, [\"text\"]),\n          createBaseVNode(\"div\", _hoisted_11, [\n            _ctx.current !== \"home\" ? (openBlock(), createBlock(_sfc_main$8, {\n              key: 0,\n              name: \"back\",\n              alt: \"Home\",\n              active: _ctx.current === \"home\",\n              link: \"\",\n              dimensions: [50, 20]\n            }, null, 8, [\"active\"])) : createCommentVNode(\"\", true)\n          ])\n        ]),\n        renderSlot(_ctx.$slots, \"default\")\n      ]);\n    };\n  }\n});","originalLength":3767,"removedExports":[],"renderedExports":["default"],"renderedLength":3422},"C:/main/projects/k.g.i/src/components/MainView.vue?vue&type=style&index=0&lang.scss":{"code":"const MainView_vue_vue_type_style_index_0_lang = '';","originalLength":3577,"removedExports":[],"renderedExports":["default"],"renderedLength":52},"C:/main/projects/k.g.i/src/views/HomeView.vue?vue&type=script&setup=true&lang.ts":{"code":"const _hoisted_1$3 = { class: \"content-wrapper\" };\nconst _sfc_main$6 = /* @__PURE__ */ defineComponent({\n  __name: \"HomeView\",\n  setup(__props) {\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", _hoisted_1$3, [\n        createVNode(_sfc_main$7, {\n          logo: \"/img/logo/kitgate.png\",\n          logoAlt: \"Kitgate\",\n          text: \"MIAUUUUUUUU\",\n          current: \"home\",\n          cat: \"/img/cat/m.png\"\n        })\n      ]);\n    };\n  }\n});","originalLength":688,"removedExports":[],"renderedExports":["default"],"renderedLength":476},"\u0000plugin-vue:export-helper":{"code":"const _export_sfc = (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n};","originalLength":155,"removedExports":[],"renderedExports":["default"],"renderedLength":159},"C:/main/projects/k.g.i/src/views/CatsView.vue":{"code":"const _sfc_main$5 = {};\n\nfunction _sfc_render$1(_ctx, _cache) {\n  return (openBlock(), createElementBlock(\"h1\", null, \"todo\"))\n}\nconst CatsView = /*#__PURE__*/_export_sfc(_sfc_main$5, [['render',_sfc_render$1]]);","originalLength":60,"removedExports":[],"renderedExports":["default"],"renderedLength":212},"C:/main/projects/k.g.i/src/views/TeamView.vue?vue&type=script&setup=true&lang.ts":{"code":"const _hoisted_1$2 = { class: \"content-wrapper\" };\nconst _sfc_main$4 = /* @__PURE__ */ defineComponent({\n  __name: \"TeamView\",\n  setup(__props) {\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", _hoisted_1$2, [\n        createVNode(_sfc_main$7, {\n          logo: \"/img/temp/important.png\",\n          logoAlt: \"Team\",\n          text: \"team\",\n          current: \"team\",\n          cat: \"/img/temp/Untitled500_20240308193811.png\"\n        })\n      ]);\n    };\n  }\n});","originalLength":678,"removedExports":[],"renderedExports":["default"],"renderedLength":494},"/img/timeline/computercat.png":{"code":"const _imports_0 = \"__VITE_PUBLIC_ASSET__da905386__\";","originalLength":48,"removedExports":[],"renderedExports":["default"],"renderedLength":53},"/img/timeline/masscomputercat.png":{"code":"const _imports_1 = \"__VITE_PUBLIC_ASSET__d776a328__\";","originalLength":48,"removedExports":[],"renderedExports":["default"],"renderedLength":53},"/img/timeline/cats.png":{"code":"const _imports_2 = \"__VITE_PUBLIC_ASSET__e1671493__\";","originalLength":48,"removedExports":[],"renderedExports":["default"],"renderedLength":53},"C:/main/projects/k.g.i/src/views/TimelineView.vue?vue&type=script&setup=true&lang.ts":{"code":"const _hoisted_1$1 = { class: \"content-wrapper\" };\nconst _hoisted_2 = /* @__PURE__ */ createStaticVNode('<section class=\"timeline-container\" data-v-0bb57dd5><article class=\"timeline-box\" data-v-0bb57dd5><div class=\"inner-box\" data-v-0bb57dd5><section class=\"timeline-section\" data-v-0bb57dd5><div data-v-0bb57dd5><h1 data-v-0bb57dd5>DEVELOPMENT</h1><h2 class=\"special\" data-v-0bb57dd5>current phase</h2><h2 data-v-0bb57dd5>2022 - ????</h2><p data-v-0bb57dd5>meowmeo mwoemoe wmoewme owmeo mwe text here</p></div><img src=\"' + _imports_0 + '\" alt=\"singular cat using computer\" data-v-0bb57dd5></section><section class=\"timeline-section\" data-v-0bb57dd5><img src=\"' + _imports_1 + '\" alt=\"multiple cats using computer\" data-v-0bb57dd5><div data-v-0bb57dd5><h1 data-v-0bb57dd5>DEMO + KICKSTARTER</h1><h2 data-v-0bb57dd5>???? - ????</h2><p data-v-0bb57dd5>me owmeom woemoew moewme owme omwe text here</p></div></section><section class=\"timeline-section\" data-v-0bb57dd5><div data-v-0bb57dd5><h1 data-v-0bb57dd5>PUBLIC LAUNCH</h1><h2 data-v-0bb57dd5>???? - ????</h2><p data-v-0bb57dd5>meow meomw oemo ewmo ewmeowm eomwe text here</p></div><img class=\"large\" src=\"' + _imports_2 + '\" alt=\"cats along with one wielding a pickaxe\" data-v-0bb57dd5><div class=\"image-spacer\" data-v-0bb57dd5></div></section></div></article></section>', 1);\nconst _sfc_main$3 = /* @__PURE__ */ defineComponent({\n  __name: \"TimelineView\",\n  setup(__props) {\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", _hoisted_1$1, [\n        createVNode(_sfc_main$7, {\n          logo: \"/img/logo/timeline.png\",\n          logoAlt: \"Timeline\",\n          text: \"timeline\",\n          current: \"timeline\",\n          cat: \"/img/cat/b.png\",\n          invertMenu: \"\"\n        }),\n        _hoisted_2\n      ]);\n    };\n  }\n});","originalLength":2395,"removedExports":[],"renderedExports":["default"],"renderedLength":1807},"C:/main/projects/k.g.i/src/views/TimelineView.vue?vue&type=style&index=0&scoped=0bb57dd5&lang.scss":{"code":"const TimelineView_vue_vue_type_style_index_0_scoped_0bb57dd5_lang = '';","originalLength":1975,"removedExports":[],"renderedExports":["default"],"renderedLength":72},"C:/main/projects/k.g.i/src/views/TimelineView.vue":{"code":"const TimelineView = /* @__PURE__ */ _export_sfc(_sfc_main$3, [[\"__scopeId\", \"data-v-0bb57dd5\"]]);","originalLength":3532,"removedExports":[],"renderedExports":["default"],"renderedLength":98},"C:/main/projects/k.g.i/src/views/ContactView.vue":{"code":"const _sfc_main$2 = {};\n\nfunction _sfc_render(_ctx, _cache) {\n  return (openBlock(), createElementBlock(\"h1\", null, \"todo\"))\n}\nconst ContactView = /*#__PURE__*/_export_sfc(_sfc_main$2, [['render',_sfc_render]]);","originalLength":62,"removedExports":[],"renderedExports":["default"],"renderedLength":211},"C:/main/projects/k.g.i/src/router/index.ts":{"code":"const router = createRouter({\n  history: createWebHistory(\"/\"),\n  routes: [\n    {\n      path: \"/\",\n      name: \"Kitgate\",\n      component: _sfc_main$6,\n      meta: {\n        background: \"/img/background/home.png\"\n      }\n    },\n    {\n      path: \"/cats\",\n      name: \"Kitgate - The Cats\",\n      component: CatsView\n    },\n    {\n      path: \"/team\",\n      name: \"Kitgate - Our Team\",\n      component: _sfc_main$4,\n      meta: {\n        background: \"/img/temp/image.jpg\"\n      }\n    },\n    {\n      path: \"/timeline\",\n      name: \"Kitgate - Timeline\",\n      component: TimelineView,\n      meta: {\n        background: \"/img/background/timeline.png\"\n      }\n    },\n    {\n      path: \"/contact\",\n      name: \"Kitgate - Contact\",\n      component: ContactView\n    }\n  ]\n});\nrouter.beforeEach((to, from, next) => {\n  document.title = to.name ?? \"Kitgate\";\n  to.meta.previousBackground = from.meta.background;\n  next();\n});","originalLength":1235,"removedExports":[],"renderedExports":["default"],"renderedLength":913},"C:/main/projects/k.g.i/node_modules/vue-flip-transition/dist/vue-flip-transition.es.js":{"code":"function getElementArray(query) {\n  return Array.from(document.querySelectorAll(query));\n}\nconst _sfc_main$1 = /* @__PURE__ */ defineComponent({\n  props: {\n    flipKey: null\n  },\n  setup(__props) {\n    const props = __props;\n    const { flipKey } = toRefs(props);\n    const getElementStates = () => {\n      let elements = getElementArray(\"[data-key]\");\n      let state = {};\n      elements.forEach((element) => {\n        var key = element.getAttribute(\"data-key\");\n        state[key] = element.getBoundingClientRect();\n      });\n      return state;\n    };\n    watch(flipKey, () => {\n      let state = getElementStates();\n      nextTick(() => {\n        let newState = getElementStates();\n        let elements = getElementArray(\"[data-key]\");\n        elements.forEach((element) => {\n          let key = element.getAttribute(\"data-key\");\n          var elOldState = state[key];\n          var elNewState = newState[key];\n          if (!elOldState || !elNewState)\n            return;\n          var y = elOldState.y - elNewState.y;\n          var x = elOldState.x - elNewState.x;\n          element.animate([\n            {\n              transform: `translate(${x}px, ${y}px)`,\n              width: `${elOldState.width}px`,\n              height: `${elOldState.height}px`\n            },\n            {}\n          ], { duration: 500, easing: \"ease-in-out\" });\n        });\n      });\n    });\n    return (_ctx, _cache) => {\n      return renderSlot(_ctx.$slots, \"default\");\n    };\n  }\n});\nvar index = {\n  install: (app) => {\n    app.component(\"Flipper\", _sfc_main$1);\n  }\n};","originalLength":1659,"removedExports":[],"renderedExports":["default"],"renderedLength":1557},"C:/main/projects/k.g.i/src/assets/main.scss":{"code":"const main = '';","originalLength":2102,"removedExports":[],"renderedExports":["default"],"renderedLength":16},"C:/main/projects/k.g.i/node_modules/@altgen/typer-composable/dist/index.esm.js":{"code":"/**\n* Typewriter Compostable 1.3.0\n* (c) 2022-2022 undefined\n* @license MIT\n*/\nfunction i(e){const t=[...e];for(let a=e.length-1;a>0;a--){const e=Math.floor(Math.random()*(a+1)),l=t[a];t[a]=t[e],t[e]=l;}return t}const r={typeInterval:100,deleteInterval:50,holdFor:1e3,holdEmptyFor:200,loop:!0,iterations:0,startEmpty:!1,startPaused:!1,finishEmpty:!1,shuffle:!1};var o;function s(s,v={}){const f=ref(s);let g;if(!Array.isArray(f.value))throw new TypeError(\"Words must be an array of strings.\");if(0===f.value.length)throw new Error(\"Words array must contain at least one string.\");const{typeInterval:c,deleteInterval:h,holdFor:p,holdEmptyFor:d,loop:y,iterations:m,finishEmpty:T}=toRefs(reactive({...r,...v})),E=v.startPaused??r.startPaused,w=ref(o.Typing),W=ref(E),I=ref(0),A=ref(0),b=ref(1),D=ref(!1),F=ref(v.shuffle??r.shuffle),P=computed((()=>I.value===f.value.length-1)),L=computed((()=>A.value>=x.value.length)),S=computed((()=>!y.value||0!==m.value&&b.value>=m.value));let k;const x=computed((()=>f.value[I.value])),C=computed((()=>{const e=x.value;return e?(e.length<A.value&&console.warn(\"The current string is shorter than the typed length. Resetting to first string.\"),e.slice(0,A.value)):(console.warn(\"Wasn't able to find a string to type out. Resetting to first string.\"),j(),\"\")})),M=computed((()=>x.value.slice(A.value)));function R(){if(L.value){if(w.value=o.Waiting,P.value&&S.value&&!T.value)return void B();D.value?(D.value=!1,W.value=!0,w.value=o.Deleting):0===p.value?U():k=setTimeout(U,p.value);}else A.value++,k=setTimeout(R,c.value);}function O(){w.value=o.Deleting,0===A.value?function(){if(g)return void(g&&g.length>0&&(f.value=g,g=null,j(!0)));if(w.value=o.Typing,P.value)if(y.value){if(F.value&&(f.value=i(f.value)),S.value)return void B();b.value++;}else B();I.value=(I.value+1)%f.value.length,0===d.value?R():k=setTimeout(R,d.value);}():(A.value--,k=setTimeout(O,h.value));}function U(){w.value=o.Deleting,k=setTimeout(O,h.value);}function j(e){I.value=0,A.value=0,b.value=1,e?R():E?W.value=!0:T.value?R():O();}function q(){W.value=!0,clearTimeout(k);}function z(){switch(W.value=!1,w.value){case o.Typing:R();break;case o.Deleting:O();break;case o.Waiting:U();break;case o.Complete:0!==A.value?U():j();break;default:j();}}function B(){w.value=o.Complete,q(),D.value=!1,b.value=1,T.value&&(I.value=0);}function G(e){if(!e||0===e.length)throw new Error(\"The strings array is empty.\");0!==A.value?g=e:f.value=e;}return onMounted((()=>{v.startEmpty?w.value=o.Typing:(I.value=f.value.length-1,w.value=o.Waiting),v.startPaused||z();})),onUnmounted((()=>{clearTimeout(k);})),{text:C,remainingText:M,strings:f,currentString:x,currentAction:w,stringIndex:I,typedLength:A,iteration:b,typeInterval:c,deleteInterval:h,holdFor:p,holdEmptyFor:d,loop:y,iterations:m,isPaused:W,isAtLastLetter:L,isAtLastString:P,isLastIteration:S,isPausingAtEnd:D,willShuffle:F,finishEmpty:T,pause:q,pauseAtEndOfWord:function(){D.value=!0;},play:z,shuffle:function(){G(i(f.value));},updateStrings:G,safeUpdateStrings:function(e){G(e);}}}!function(e){e[e.Typing=0]=\"Typing\",e[e.Deleting=1]=\"Deleting\",e[e.Waiting=2]=\"Waiting\",e[e.Complete=3]=\"Complete\";}(o||(o={}));","originalLength":3242,"removedExports":[],"renderedExports":["TypewriterStates","useTypewriter"],"renderedLength":3162},"C:/main/projects/k.g.i/src/components/TextBox.vue?vue&type=script&setup=true&lang.ts":{"code":"const _hoisted_1 = { class: \"textbox\" };\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  __name: \"TextBox\",\n  props: {\n    text: {}\n  },\n  setup(__props) {\n    const props = __props;\n    const strings = ref([props.text]);\n    const { text, currentString, isAtLastLetter } = s(strings, { loop: false, typeInterval: 10 });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", _hoisted_1, [\n        createBaseVNode(\"span\", {\n          class: normalizeClass({ \"blinking-cursor\": unref(isAtLastLetter) })\n        }, toDisplayString(unref(text)), 3),\n        renderSlot(_ctx.$slots, \"default\", {}, void 0, true)\n      ]);\n    };\n  }\n});","originalLength":1196,"removedExports":[],"renderedExports":["default"],"renderedLength":666},"C:/main/projects/k.g.i/src/components/TextBox.vue?vue&type=style&index=0&scoped=c12e94d6&lang.scss":{"code":"const TextBox_vue_vue_type_style_index_0_scoped_c12e94d6_lang = '';","originalLength":699,"removedExports":[],"renderedExports":["default"],"renderedLength":67},"C:/main/projects/k.g.i/src/components/TextBox.vue":{"code":"const TextBoxVue = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__scopeId\", \"data-v-c12e94d6\"]]);","originalLength":1210,"removedExports":[],"renderedExports":["default"],"renderedLength":94},"C:/main/projects/k.g.i/src/main.ts":{"code":"const app = createApp(_sfc_main$9);\napp.component(\"TextBox\", TextBoxVue);\napp.use(router);\napp.use(index);\napp.mount(\"#app\");","originalLength":357,"removedExports":[],"renderedExports":[],"renderedLength":125},"C:/main/projects/k.g.i/index.html":{"code":"","originalLength":700,"removedExports":[],"renderedExports":[],"renderedLength":0}},"referencedFiles":[],"viteMetadata":{"importedAssets":{},"importedCss":{}},"code":"(function(){const t=document.createElement(\"link\").relList;if(t&&t.supports&&t.supports(\"modulepreload\"))return;for(const r of document.querySelectorAll('link[rel=\"modulepreload\"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type===\"childList\")for(const i of o.addedNodes)i.tagName===\"LINK\"&&i.rel===\"modulepreload\"&&s(i)}).observe(document,{childList:!0,subtree:!0});function n(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin===\"use-credentials\"?o.credentials=\"include\":r.crossOrigin===\"anonymous\"?o.credentials=\"omit\":o.credentials=\"same-origin\",o}function s(r){if(r.ep)return;r.ep=!0;const o=n(r);fetch(r.href,o)}})();/**\n* @vue/shared v3.4.21\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/function Ss(e,t){const n=new Set(e.split(\",\"));return t?s=>n.has(s.toLowerCase()):s=>n.has(s)}const le={},Tt=[],Oe=()=>{},Ei=()=>!1,Tn=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&(e.charCodeAt(2)>122||e.charCodeAt(2)<97),Rs=e=>e.startsWith(\"onUpdate:\"),he=Object.assign,As=(e,t)=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)},wi=Object.prototype.hasOwnProperty,Q=(e,t)=>wi.call(e,t),H=Array.isArray,Pt=e=>Pn(e)===\"[object Map]\",no=e=>Pn(e)===\"[object Set]\",K=e=>typeof e==\"function\",de=e=>typeof e==\"string\",Ft=e=>typeof e==\"symbol\",ue=e=>e!==null&&typeof e==\"object\",so=e=>(ue(e)||K(e))&&K(e.then)&&K(e.catch),ro=Object.prototype.toString,Pn=e=>ro.call(e),xi=e=>Pn(e).slice(8,-1),oo=e=>Pn(e)===\"[object Object]\",Ts=e=>de(e)&&e!==\"NaN\"&&e[0]!==\"-\"&&\"\"+parseInt(e,10)===e,Dt=Ss(\",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted\"),On=e=>{const t=Object.create(null);return n=>t[n]||(t[n]=e(n))},Ci=/-(\\w)/g,qe=On(e=>e.replace(Ci,(t,n)=>n?n.toUpperCase():\"\")),Si=/\\B([A-Z])/g,kt=On(e=>e.replace(Si,\"-$1\").toLowerCase()),In=On(e=>e.charAt(0).toUpperCase()+e.slice(1)),Gn=On(e=>e?`on${In(e)}`:\"\"),at=(e,t)=>!Object.is(e,t),Qn=(e,t)=>{for(let n=0;n<e.length;n++)e[n](t)},bn=(e,t,n)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:n})},Ri=e=>{const t=parseFloat(e);return isNaN(t)?e:t},Ai=e=>{const t=de(e)?Number(e):NaN;return isNaN(t)?e:t};let er;const io=()=>er||(er=typeof globalThis<\"u\"?globalThis:typeof self<\"u\"?self:typeof window<\"u\"?window:typeof global<\"u\"?global:{});function Mn(e){if(H(e)){const t={};for(let n=0;n<e.length;n++){const s=e[n],r=de(s)?Ii(s):Mn(s);if(r)for(const o in r)t[o]=r[o]}return t}else if(de(e)||ue(e))return e}const Ti=/;(?![^(]*\\))/g,Pi=/:([^]+)/,Oi=/\\/\\*[^]*?\\*\\//g;function Ii(e){const t={};return e.replace(Oi,\"\").split(Ti).forEach(n=>{if(n){const s=n.split(Pi);s.length>1&&(t[s[0].trim()]=s[1].trim())}}),t}function Ln(e){let t=\"\";if(de(e))t=e;else if(H(e))for(let n=0;n<e.length;n++){const s=Ln(e[n]);s&&(t+=s+\" \")}else if(ue(e))for(const n in e)e[n]&&(t+=n+\" \");return t.trim()}const Mi=\"itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly\",Li=Ss(Mi);function lo(e){return!!e||e===\"\"}const $i=e=>de(e)?e:e==null?\"\":H(e)||ue(e)&&(e.toString===ro||!K(e.toString))?JSON.stringify(e,co,2):String(e),co=(e,t)=>t&&t.__v_isRef?co(e,t.value):Pt(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((n,[s,r],o)=>(n[Yn(s,o)+\" =>\"]=r,n),{})}:no(t)?{[`Set(${t.size})`]:[...t.values()].map(n=>Yn(n))}:Ft(t)?Yn(t):ue(t)&&!H(t)&&!oo(t)?String(t):t,Yn=(e,t=\"\")=>{var n;return Ft(e)?`Symbol(${(n=e.description)!=null?n:t})`:e};/**\n* @vue/reactivity v3.4.21\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/let ke;class Ni{constructor(t=!1){this.detached=t,this._active=!0,this.effects=[],this.cleanups=[],this.parent=ke,!t&&ke&&(this.index=(ke.scopes||(ke.scopes=[])).push(this)-1)}get active(){return this._active}run(t){if(this._active){const n=ke;try{return ke=this,t()}finally{ke=n}}}on(){ke=this}off(){ke=this.parent}stop(t){if(this._active){let n,s;for(n=0,s=this.effects.length;n<s;n++)this.effects[n].stop();for(n=0,s=this.cleanups.length;n<s;n++)this.cleanups[n]();if(this.scopes)for(n=0,s=this.scopes.length;n<s;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!t){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this._active=!1}}}function Fi(e,t=ke){t&&t.active&&t.effects.push(e)}function ki(){return ke}let vt;class Ps{constructor(t,n,s,r){this.fn=t,this.trigger=n,this.scheduler=s,this.active=!0,this.deps=[],this._dirtyLevel=4,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,Fi(this,r)}get dirty(){if(this._dirtyLevel===2||this._dirtyLevel===3){this._dirtyLevel=1,bt();for(let t=0;t<this._depsLength;t++){const n=this.deps[t];if(n.computed&&(Bi(n.computed),this._dirtyLevel>=4))break}this._dirtyLevel===1&&(this._dirtyLevel=0),Et()}return this._dirtyLevel>=4}set dirty(t){this._dirtyLevel=t?4:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let t=ct,n=vt;try{return ct=!0,vt=this,this._runnings++,tr(this),this.fn()}finally{nr(this),this._runnings--,vt=n,ct=t}}stop(){var t;this.active&&(tr(this),nr(this),(t=this.onStop)==null||t.call(this),this.active=!1)}}function Bi(e){return e.value}function tr(e){e._trackId++,e._depsLength=0}function nr(e){if(e.deps.length>e._depsLength){for(let t=e._depsLength;t<e.deps.length;t++)uo(e.deps[t],e);e.deps.length=e._depsLength}}function uo(e,t){const n=e.get(t);n!==void 0&&t._trackId!==n&&(e.delete(t),e.size===0&&e.cleanup())}let ct=!0,cs=0;const ao=[];function bt(){ao.push(ct),ct=!1}function Et(){const e=ao.pop();ct=e===void 0?!0:e}function Os(){cs++}function Is(){for(cs--;!cs&&us.length;)us.shift()()}function fo(e,t,n){if(t.get(e)!==e._trackId){t.set(e,e._trackId);const s=e.deps[e._depsLength];s!==t?(s&&uo(s,e),e.deps[e._depsLength++]=t):e._depsLength++}}const us=[];function ho(e,t,n){Os();for(const s of e.keys()){let r;s._dirtyLevel<t&&(r??(r=e.get(s)===s._trackId))&&(s._shouldSchedule||(s._shouldSchedule=s._dirtyLevel===0),s._dirtyLevel=t),s._shouldSchedule&&(r??(r=e.get(s)===s._trackId))&&(s.trigger(),(!s._runnings||s.allowRecurse)&&s._dirtyLevel!==2&&(s._shouldSchedule=!1,s.scheduler&&us.push(s.scheduler)))}Is()}const po=(e,t)=>{const n=new Map;return n.cleanup=e,n.computed=t,n},En=new WeakMap,yt=Symbol(\"\"),as=Symbol(\"\");function Re(e,t,n){if(ct&&vt){let s=En.get(e);s||En.set(e,s=new Map);let r=s.get(n);r||s.set(n,r=po(()=>s.delete(n))),fo(vt,r)}}function Ye(e,t,n,s,r,o){const i=En.get(e);if(!i)return;let c=[];if(t===\"clear\")c=[...i.values()];else if(n===\"length\"&&H(e)){const l=Number(s);i.forEach((d,a)=>{(a===\"length\"||!Ft(a)&&a>=l)&&c.push(d)})}else switch(n!==void 0&&c.push(i.get(n)),t){case\"add\":H(e)?Ts(n)&&c.push(i.get(\"length\")):(c.push(i.get(yt)),Pt(e)&&c.push(i.get(as)));break;case\"delete\":H(e)||(c.push(i.get(yt)),Pt(e)&&c.push(i.get(as)));break;case\"set\":Pt(e)&&c.push(i.get(yt));break}Os();for(const l of c)l&&ho(l,4);Is()}function Hi(e,t){var n;return(n=En.get(e))==null?void 0:n.get(t)}const ji=Ss(\"__proto__,__v_isRef,__isVue\"),go=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!==\"arguments\"&&e!==\"caller\").map(e=>Symbol[e]).filter(Ft)),sr=Vi();function Vi(){const e={};return[\"includes\",\"indexOf\",\"lastIndexOf\"].forEach(t=>{e[t]=function(...n){const s=Y(this);for(let o=0,i=this.length;o<i;o++)Re(s,\"get\",o+\"\");const r=s[t](...n);return r===-1||r===!1?s[t](...n.map(Y)):r}}),[\"push\",\"pop\",\"shift\",\"unshift\",\"splice\"].forEach(t=>{e[t]=function(...n){bt(),Os();const s=Y(this)[t].apply(this,n);return Is(),Et(),s}}),e}function Ui(e){const t=Y(this);return Re(t,\"has\",e),t.hasOwnProperty(e)}class mo{constructor(t=!1,n=!1){this._isReadonly=t,this._isShallow=n}get(t,n,s){const r=this._isReadonly,o=this._isShallow;if(n===\"__v_isReactive\")return!r;if(n===\"__v_isReadonly\")return r;if(n===\"__v_isShallow\")return o;if(n===\"__v_raw\")return s===(r?o?tl:bo:o?yo:vo).get(t)||Object.getPrototypeOf(t)===Object.getPrototypeOf(s)?t:void 0;const i=H(t);if(!r){if(i&&Q(sr,n))return Reflect.get(sr,n,s);if(n===\"hasOwnProperty\")return Ui}const c=Reflect.get(t,n,s);return(Ft(n)?go.has(n):ji(n))||(r||Re(t,\"get\",n),o)?c:fe(c)?i&&Ts(n)?c:c.value:ue(c)?r?wo(c):on(c):c}}class _o extends mo{constructor(t=!1){super(!1,t)}set(t,n,s,r){let o=t[n];if(!this._isShallow){const l=Mt(o);if(!wn(s)&&!Mt(s)&&(o=Y(o),s=Y(s)),!H(t)&&fe(o)&&!fe(s))return l?!1:(o.value=s,!0)}const i=H(t)&&Ts(n)?Number(n)<t.length:Q(t,n),c=Reflect.set(t,n,s,r);return t===Y(r)&&(i?at(s,o)&&Ye(t,\"set\",n,s):Ye(t,\"add\",n,s)),c}deleteProperty(t,n){const s=Q(t,n);t[n];const r=Reflect.deleteProperty(t,n);return r&&s&&Ye(t,\"delete\",n,void 0),r}has(t,n){const s=Reflect.has(t,n);return(!Ft(n)||!go.has(n))&&Re(t,\"has\",n),s}ownKeys(t){return Re(t,\"iterate\",H(t)?\"length\":yt),Reflect.ownKeys(t)}}class Di extends mo{constructor(t=!1){super(!0,t)}set(t,n){return!0}deleteProperty(t,n){return!0}}const Ki=new _o,Wi=new Di,qi=new _o(!0),Ms=e=>e,$n=e=>Reflect.getPrototypeOf(e);function un(e,t,n=!1,s=!1){e=e.__v_raw;const r=Y(e),o=Y(t);n||(at(t,o)&&Re(r,\"get\",t),Re(r,\"get\",o));const{has:i}=$n(r),c=s?Ms:n?Ns:Xt;if(i.call(r,t))return c(e.get(t));if(i.call(r,o))return c(e.get(o));e!==r&&e.get(t)}function an(e,t=!1){const n=this.__v_raw,s=Y(n),r=Y(e);return t||(at(e,r)&&Re(s,\"has\",e),Re(s,\"has\",r)),e===r?n.has(e):n.has(e)||n.has(r)}function fn(e,t=!1){return e=e.__v_raw,!t&&Re(Y(e),\"iterate\",yt),Reflect.get(e,\"size\",e)}function rr(e){e=Y(e);const t=Y(this);return $n(t).has.call(t,e)||(t.add(e),Ye(t,\"add\",e,e)),this}function or(e,t){t=Y(t);const n=Y(this),{has:s,get:r}=$n(n);let o=s.call(n,e);o||(e=Y(e),o=s.call(n,e));const i=r.call(n,e);return n.set(e,t),o?at(t,i)&&Ye(n,\"set\",e,t):Ye(n,\"add\",e,t),this}function ir(e){const t=Y(this),{has:n,get:s}=$n(t);let r=n.call(t,e);r||(e=Y(e),r=n.call(t,e)),s&&s.call(t,e);const o=t.delete(e);return r&&Ye(t,\"delete\",e,void 0),o}function lr(){const e=Y(this),t=e.size!==0,n=e.clear();return t&&Ye(e,\"clear\",void 0,void 0),n}function dn(e,t){return function(s,r){const o=this,i=o.__v_raw,c=Y(i),l=t?Ms:e?Ns:Xt;return!e&&Re(c,\"iterate\",yt),i.forEach((d,a)=>s.call(r,l(d),l(a),o))}}function hn(e,t,n){return function(...s){const r=this.__v_raw,o=Y(r),i=Pt(o),c=e===\"entries\"||e===Symbol.iterator&&i,l=e===\"keys\"&&i,d=r[e](...s),a=n?Ms:t?Ns:Xt;return!t&&Re(o,\"iterate\",l?as:yt),{next(){const{value:h,done:p}=d.next();return p?{value:h,done:p}:{value:c?[a(h[0]),a(h[1])]:a(h),done:p}},[Symbol.iterator](){return this}}}}function Ze(e){return function(...t){return e===\"delete\"?!1:e===\"clear\"?void 0:this}}function zi(){const e={get(o){return un(this,o)},get size(){return fn(this)},has:an,add:rr,set:or,delete:ir,clear:lr,forEach:dn(!1,!1)},t={get(o){return un(this,o,!1,!0)},get size(){return fn(this)},has:an,add:rr,set:or,delete:ir,clear:lr,forEach:dn(!1,!0)},n={get(o){return un(this,o,!0)},get size(){return fn(this,!0)},has(o){return an.call(this,o,!0)},add:Ze(\"add\"),set:Ze(\"set\"),delete:Ze(\"delete\"),clear:Ze(\"clear\"),forEach:dn(!0,!1)},s={get(o){return un(this,o,!0,!0)},get size(){return fn(this,!0)},has(o){return an.call(this,o,!0)},add:Ze(\"add\"),set:Ze(\"set\"),delete:Ze(\"delete\"),clear:Ze(\"clear\"),forEach:dn(!0,!0)};return[\"keys\",\"values\",\"entries\",Symbol.iterator].forEach(o=>{e[o]=hn(o,!1,!1),n[o]=hn(o,!0,!1),t[o]=hn(o,!1,!0),s[o]=hn(o,!0,!0)}),[e,n,t,s]}const[Gi,Qi,Yi,Ji]=zi();function Ls(e,t){const n=t?e?Ji:Yi:e?Qi:Gi;return(s,r,o)=>r===\"__v_isReactive\"?!e:r===\"__v_isReadonly\"?e:r===\"__v_raw\"?s:Reflect.get(Q(n,r)&&r in s?n:s,r,o)}const Xi={get:Ls(!1,!1)},Zi={get:Ls(!1,!0)},el={get:Ls(!0,!1)},vo=new WeakMap,yo=new WeakMap,bo=new WeakMap,tl=new WeakMap;function nl(e){switch(e){case\"Object\":case\"Array\":return 1;case\"Map\":case\"Set\":case\"WeakMap\":case\"WeakSet\":return 2;default:return 0}}function sl(e){return e.__v_skip||!Object.isExtensible(e)?0:nl(xi(e))}function on(e){return Mt(e)?e:$s(e,!1,Ki,Xi,vo)}function Eo(e){return $s(e,!1,qi,Zi,yo)}function wo(e){return $s(e,!0,Wi,el,bo)}function $s(e,t,n,s,r){if(!ue(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const o=r.get(e);if(o)return o;const i=sl(e);if(i===0)return e;const c=new Proxy(e,i===2?s:n);return r.set(e,c),c}function Ot(e){return Mt(e)?Ot(e.__v_raw):!!(e&&e.__v_isReactive)}function Mt(e){return!!(e&&e.__v_isReadonly)}function wn(e){return!!(e&&e.__v_isShallow)}function xo(e){return Ot(e)||Mt(e)}function Y(e){const t=e&&e.__v_raw;return t?Y(t):e}function Co(e){return Object.isExtensible(e)&&bn(e,\"__v_skip\",!0),e}const Xt=e=>ue(e)?on(e):e,Ns=e=>ue(e)?wo(e):e;class So{constructor(t,n,s,r){this.getter=t,this._setter=n,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new Ps(()=>t(this._value),()=>mn(this,this.effect._dirtyLevel===2?2:3)),this.effect.computed=this,this.effect.active=this._cacheable=!r,this.__v_isReadonly=s}get value(){const t=Y(this);return(!t._cacheable||t.effect.dirty)&&at(t._value,t._value=t.effect.run())&&mn(t,4),Ro(t),t.effect._dirtyLevel>=2&&mn(t,2),t._value}set value(t){this._setter(t)}get _dirty(){return this.effect.dirty}set _dirty(t){this.effect.dirty=t}}function rl(e,t,n=!1){let s,r;const o=K(e);return o?(s=e,r=Oe):(s=e.get,r=e.set),new So(s,r,o||!r,n)}function Ro(e){var t;ct&&vt&&(e=Y(e),fo(vt,(t=e.dep)!=null?t:e.dep=po(()=>e.dep=void 0,e instanceof So?e:void 0)))}function mn(e,t=4,n){e=Y(e);const s=e.dep;s&&ho(s,t)}function fe(e){return!!(e&&e.__v_isRef===!0)}function Te(e){return Ao(e,!1)}function ol(e){return Ao(e,!0)}function Ao(e,t){return fe(e)?e:new il(e,t)}class il{constructor(t,n){this.__v_isShallow=n,this.dep=void 0,this.__v_isRef=!0,this._rawValue=n?t:Y(t),this._value=n?t:Xt(t)}get value(){return Ro(this),this._value}set value(t){const n=this.__v_isShallow||wn(t)||Mt(t);t=n?t:Y(t),at(t,this._rawValue)&&(this._rawValue=t,this._value=n?t:Xt(t),mn(this,4))}}function ae(e){return fe(e)?e.value:e}const ll={get:(e,t,n)=>ae(Reflect.get(e,t,n)),set:(e,t,n,s)=>{const r=e[t];return fe(r)&&!fe(n)?(r.value=n,!0):Reflect.set(e,t,n,s)}};function To(e){return Ot(e)?e:new Proxy(e,ll)}function Po(e){const t=H(e)?new Array(e.length):{};for(const n in e)t[n]=ul(e,n);return t}class cl{constructor(t,n,s){this._object=t,this._key=n,this._defaultValue=s,this.__v_isRef=!0}get value(){const t=this._object[this._key];return t===void 0?this._defaultValue:t}set value(t){this._object[this._key]=t}get dep(){return Hi(Y(this._object),this._key)}}function ul(e,t,n){const s=e[t];return fe(s)?s:new cl(e,t,n)}/**\n* @vue/runtime-core v3.4.21\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/function ut(e,t,n,s){try{return s?e(...s):e()}catch(r){Nn(r,t,n)}}function $e(e,t,n,s){if(K(e)){const o=ut(e,t,n,s);return o&&so(o)&&o.catch(i=>{Nn(i,t,n)}),o}const r=[];for(let o=0;o<e.length;o++)r.push($e(e[o],t,n,s));return r}function Nn(e,t,n,s=!0){const r=t?t.vnode:null;if(t){let o=t.parent;const i=t.proxy,c=`https://vuejs.org/error-reference/#runtime-${n}`;for(;o;){const d=o.ec;if(d){for(let a=0;a<d.length;a++)if(d[a](e,i,c)===!1)return}o=o.parent}const l=t.appContext.config.errorHandler;if(l){ut(l,null,10,[e,i,c]);return}}al(e,n,r,s)}function al(e,t,n,s=!0){console.error(e)}let Zt=!1,fs=!1;const be=[];let We=0;const It=[];let st=null,mt=0;const Oo=Promise.resolve();let Fs=null;function ks(e){const t=Fs||Oo;return e?t.then(this?e.bind(this):e):t}function fl(e){let t=We+1,n=be.length;for(;t<n;){const s=t+n>>>1,r=be[s],o=en(r);o<e||o===e&&r.pre?t=s+1:n=s}return t}function Bs(e){(!be.length||!be.includes(e,Zt&&e.allowRecurse?We+1:We))&&(e.id==null?be.push(e):be.splice(fl(e.id),0,e),Io())}function Io(){!Zt&&!fs&&(fs=!0,Fs=Oo.then(Lo))}function dl(e){const t=be.indexOf(e);t>We&&be.splice(t,1)}function hl(e){H(e)?It.push(...e):(!st||!st.includes(e,e.allowRecurse?mt+1:mt))&&It.push(e),Io()}function cr(e,t,n=Zt?We+1:0){for(;n<be.length;n++){const s=be[n];if(s&&s.pre){if(e&&s.id!==e.uid)continue;be.splice(n,1),n--,s()}}}function Mo(e){if(It.length){const t=[...new Set(It)].sort((n,s)=>en(n)-en(s));if(It.length=0,st){st.push(...t);return}for(st=t,mt=0;mt<st.length;mt++)st[mt]();st=null,mt=0}}const en=e=>e.id==null?1/0:e.id,pl=(e,t)=>{const n=en(e)-en(t);if(n===0){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return n};function Lo(e){fs=!1,Zt=!0,be.sort(pl);const t=Oe;try{for(We=0;We<be.length;We++){const n=be[We];n&&n.active!==!1&&ut(n,null,14)}}finally{We=0,be.length=0,Mo(),Zt=!1,Fs=null,(be.length||It.length)&&Lo()}}function gl(e,t,...n){if(e.isUnmounted)return;const s=e.vnode.props||le;let r=n;const o=t.startsWith(\"update:\"),i=o&&t.slice(7);if(i&&i in s){const a=`${i===\"modelValue\"?\"model\":i}Modifiers`,{number:h,trim:p}=s[a]||le;p&&(r=n.map(m=>de(m)?m.trim():m)),h&&(r=n.map(Ri))}let c,l=s[c=Gn(t)]||s[c=Gn(qe(t))];!l&&o&&(l=s[c=Gn(kt(t))]),l&&$e(l,e,6,r);const d=s[c+\"Once\"];if(d){if(!e.emitted)e.emitted={};else if(e.emitted[c])return;e.emitted[c]=!0,$e(d,e,6,r)}}function $o(e,t,n=!1){const s=t.emitsCache,r=s.get(e);if(r!==void 0)return r;const o=e.emits;let i={},c=!1;if(!K(e)){const l=d=>{const a=$o(d,t,!0);a&&(c=!0,he(i,a))};!n&&t.mixins.length&&t.mixins.forEach(l),e.extends&&l(e.extends),e.mixins&&e.mixins.forEach(l)}return!o&&!c?(ue(e)&&s.set(e,null),null):(H(o)?o.forEach(l=>i[l]=null):he(i,o),ue(e)&&s.set(e,i),i)}function Fn(e,t){return!e||!Tn(t)?!1:(t=t.slice(2).replace(/Once$/,\"\"),Q(e,t[0].toLowerCase()+t.slice(1))||Q(e,kt(t))||Q(e,t))}let Ee=null,No=null;function xn(e){const t=Ee;return Ee=e,No=e&&e.type.__scopeId||null,t}function Cn(e,t=Ee,n){if(!t||e._n)return e;const s=(...r)=>{s._d&&br(-1);const o=xn(t);let i;try{i=e(...r)}finally{xn(o),s._d&&br(1)}return i};return s._n=!0,s._c=!0,s._d=!0,s}function Jn(e){const{type:t,vnode:n,proxy:s,withProxy:r,props:o,propsOptions:[i],slots:c,attrs:l,emit:d,render:a,renderCache:h,data:p,setupState:m,ctx:x,inheritAttrs:A}=e;let L,O;const F=xn(e);try{if(n.shapeFlag&4){const D=r||s,z=D;L=Ke(a.call(z,D,h,o,m,p,x)),O=l}else{const D=t;L=Ke(D.length>1?D(o,{attrs:l,slots:c,emit:d}):D(o,null)),O=t.props?l:ml(l)}}catch(D){Qt.length=0,Nn(D,e,1),L=ce(Ne)}let B=L;if(O&&A!==!1){const D=Object.keys(O),{shapeFlag:z}=B;D.length&&z&7&&(i&&D.some(Rs)&&(O=_l(O,i)),B=ft(B,O))}return n.dirs&&(B=ft(B),B.dirs=B.dirs?B.dirs.concat(n.dirs):n.dirs),n.transition&&(B.transition=n.transition),L=B,xn(F),L}const ml=e=>{let t;for(const n in e)(n===\"class\"||n===\"style\"||Tn(n))&&((t||(t={}))[n]=e[n]);return t},_l=(e,t)=>{const n={};for(const s in e)(!Rs(s)||!(s.slice(9)in t))&&(n[s]=e[s]);return n};function vl(e,t,n){const{props:s,children:r,component:o}=e,{props:i,children:c,patchFlag:l}=t,d=o.emitsOptions;if(t.dirs||t.transition)return!0;if(n&&l>=0){if(l&1024)return!0;if(l&16)return s?ur(s,i,d):!!i;if(l&8){const a=t.dynamicProps;for(let h=0;h<a.length;h++){const p=a[h];if(i[p]!==s[p]&&!Fn(d,p))return!0}}}else return(r||c)&&(!c||!c.$stable)?!0:s===i?!1:s?i?ur(s,i,d):!0:!!i;return!1}function ur(e,t,n){const s=Object.keys(t);if(s.length!==Object.keys(e).length)return!0;for(let r=0;r<s.length;r++){const o=s[r];if(t[o]!==e[o]&&!Fn(n,o))return!0}return!1}function yl({vnode:e,parent:t},n){for(;t;){const s=t.subTree;if(s.suspense&&s.suspense.activeBranch===e&&(s.el=e.el),s===e)(e=t.vnode).el=n,t=t.parent;else break}}const Hs=\"components\";function Fo(e,t){return Bo(Hs,e,!0,t)||e}const ko=Symbol.for(\"v-ndc\");function bl(e){return de(e)?Bo(Hs,e,!1)||e:e||ko}function Bo(e,t,n=!0,s=!1){const r=Ee||_e;if(r){const o=r.type;if(e===Hs){const c=vc(o,!1);if(c&&(c===t||c===qe(t)||c===In(qe(t))))return o}const i=ar(r[e]||o[e],t)||ar(r.appContext[e],t);return!i&&s?o:i}}function ar(e,t){return e&&(e[t]||e[qe(t)]||e[In(qe(t))])}const El=e=>e.__isSuspense;function wl(e,t){t&&t.pendingBranch?H(e)?t.effects.push(...e):t.effects.push(e):hl(e)}const xl=Symbol.for(\"v-scx\"),Cl=()=>He(xl);function Sl(e,t){return js(e,null,{flush:\"post\"})}const pn={};function Kt(e,t,n){return js(e,t,n)}function js(e,t,{immediate:n,deep:s,flush:r,once:o,onTrack:i,onTrigger:c}=le){if(t&&o){const $=t;t=(...ne)=>{$(...ne),z()}}const l=_e,d=$=>s===!0?$:At($,s===!1?1:void 0);let a,h=!1,p=!1;if(fe(e)?(a=()=>e.value,h=wn(e)):Ot(e)?(a=()=>d(e),h=!0):H(e)?(p=!0,h=e.some($=>Ot($)||wn($)),a=()=>e.map($=>{if(fe($))return $.value;if(Ot($))return d($);if(K($))return ut($,l,2)})):K(e)?t?a=()=>ut(e,l,2):a=()=>(m&&m(),$e(e,l,3,[x])):a=Oe,t&&s){const $=a;a=()=>At($())}let m,x=$=>{m=B.onStop=()=>{ut($,l,4),m=B.onStop=void 0}},A;if(Dn)if(x=Oe,t?n&&$e(t,l,3,[a(),p?[]:void 0,x]):a(),r===\"sync\"){const $=Cl();A=$.__watcherHandles||($.__watcherHandles=[])}else return Oe;let L=p?new Array(e.length).fill(pn):pn;const O=()=>{if(!(!B.active||!B.dirty))if(t){const $=B.run();(s||h||(p?$.some((ne,j)=>at(ne,L[j])):at($,L)))&&(m&&m(),$e(t,l,3,[$,L===pn?void 0:p&&L[0]===pn?[]:L,x]),L=$)}else B.run()};O.allowRecurse=!!t;let F;r===\"sync\"?F=O:r===\"post\"?F=()=>Se(O,l&&l.suspense):(O.pre=!0,l&&(O.id=l.uid),F=()=>Bs(O));const B=new Ps(a,Oe,F),D=ki(),z=()=>{B.stop(),D&&As(D.effects,B)};return t?n?O():L=B.run():r===\"post\"?Se(B.run.bind(B),l&&l.suspense):B.run(),A&&A.push(z),z}function Rl(e,t,n){const s=this.proxy,r=de(e)?e.includes(\".\")?Ho(s,e):()=>s[e]:e.bind(s,s);let o;K(t)?o=t:(o=t.handler,n=t);const i=ln(this),c=js(r,o.bind(s),n);return i(),c}function Ho(e,t){const n=t.split(\".\");return()=>{let s=e;for(let r=0;r<n.length&&s;r++)s=s[n[r]];return s}}function At(e,t,n=0,s){if(!ue(e)||e.__v_skip)return e;if(t&&t>0){if(n>=t)return e;n++}if(s=s||new Set,s.has(e))return e;if(s.add(e),fe(e))At(e.value,t,n,s);else if(H(e))for(let r=0;r<e.length;r++)At(e[r],t,n,s);else if(no(e)||Pt(e))e.forEach(r=>{At(r,t,n,s)});else if(oo(e))for(const r in e)At(e[r],t,n,s);return e}function dt(e,t,n,s){const r=e.dirs,o=t&&t.dirs;for(let i=0;i<r.length;i++){const c=r[i];o&&(c.oldValue=o[i].value);let l=c.dir[s];l&&(bt(),$e(l,n,8,[e.el,c,e,t]),Et())}}const rt=Symbol(\"_leaveCb\"),gn=Symbol(\"_enterCb\");function Al(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Hn(()=>{e.isMounted=!0}),Ko(()=>{e.isUnmounting=!0}),e}const Le=[Function,Array],jo={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Le,onEnter:Le,onAfterEnter:Le,onEnterCancelled:Le,onBeforeLeave:Le,onLeave:Le,onAfterLeave:Le,onLeaveCancelled:Le,onBeforeAppear:Le,onAppear:Le,onAfterAppear:Le,onAppearCancelled:Le},Tl={name:\"BaseTransition\",props:jo,setup(e,{slots:t}){const n=si(),s=Al();return()=>{const r=t.default&&Uo(t.default(),!0);if(!r||!r.length)return;let o=r[0];if(r.length>1){for(const p of r)if(p.type!==Ne){o=p;break}}const i=Y(e),{mode:c}=i;if(s.isLeaving)return Xn(o);const l=fr(o);if(!l)return Xn(o);const d=ds(l,i,s,n);hs(l,d);const a=n.subTree,h=a&&fr(a);if(h&&h.type!==Ne&&!_t(l,h)){const p=ds(h,i,s,n);if(hs(h,p),c===\"out-in\")return s.isLeaving=!0,p.afterLeave=()=>{s.isLeaving=!1,n.update.active!==!1&&(n.effect.dirty=!0,n.update())},Xn(o);c===\"in-out\"&&l.type!==Ne&&(p.delayLeave=(m,x,A)=>{const L=Vo(s,h);L[String(h.key)]=h,m[rt]=()=>{x(),m[rt]=void 0,delete d.delayedLeave},d.delayedLeave=A})}return o}}},Pl=Tl;function Vo(e,t){const{leavingVNodes:n}=e;let s=n.get(t.type);return s||(s=Object.create(null),n.set(t.type,s)),s}function ds(e,t,n,s){const{appear:r,mode:o,persisted:i=!1,onBeforeEnter:c,onEnter:l,onAfterEnter:d,onEnterCancelled:a,onBeforeLeave:h,onLeave:p,onAfterLeave:m,onLeaveCancelled:x,onBeforeAppear:A,onAppear:L,onAfterAppear:O,onAppearCancelled:F}=t,B=String(e.key),D=Vo(n,e),z=(j,ee)=>{j&&$e(j,s,9,ee)},$=(j,ee)=>{const q=ee[1];z(j,ee),H(j)?j.every(re=>re.length<=1)&&q():j.length<=1&&q()},ne={mode:o,persisted:i,beforeEnter(j){let ee=c;if(!n.isMounted)if(r)ee=A||c;else return;j[rt]&&j[rt](!0);const q=D[B];q&&_t(e,q)&&q.el[rt]&&q.el[rt](),z(ee,[j])},enter(j){let ee=l,q=d,re=a;if(!n.isMounted)if(r)ee=L||l,q=O||d,re=F||a;else return;let I=!1;const G=j[gn]=pe=>{I||(I=!0,pe?z(re,[j]):z(q,[j]),ne.delayedLeave&&ne.delayedLeave(),j[gn]=void 0)};ee?$(ee,[j,G]):G()},leave(j,ee){const q=String(e.key);if(j[gn]&&j[gn](!0),n.isUnmounting)return ee();z(h,[j]);let re=!1;const I=j[rt]=G=>{re||(re=!0,ee(),G?z(x,[j]):z(m,[j]),j[rt]=void 0,D[q]===e&&delete D[q])};D[q]=e,p?$(p,[j,I]):I()},clone(j){return ds(j,t,n,s)}};return ne}function Xn(e){if(kn(e))return e=ft(e),e.children=null,e}function fr(e){return kn(e)?e.children?e.children[0]:void 0:e}function hs(e,t){e.shapeFlag&6&&e.component?hs(e.component.subTree,t):e.shapeFlag&128?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.transition=t}function Uo(e,t=!1,n){let s=[],r=0;for(let o=0;o<e.length;o++){let i=e[o];const c=n==null?i.key:String(n)+String(i.key!=null?i.key:o);i.type===Pe?(i.patchFlag&128&&r++,s=s.concat(Uo(i.children,t,c))):(t||i.type!==Ne)&&s.push(c!=null?ft(i,{key:c}):i)}if(r>1)for(let o=0;o<s.length;o++)s[o].patchFlag=-2;return s}/*! #__NO_SIDE_EFFECTS__ */function ze(e,t){return K(e)?(()=>he({name:e.name},t,{setup:e}))():e}const Wt=e=>!!e.type.__asyncLoader,kn=e=>e.type.__isKeepAlive;function Ol(e,t){Do(e,\"a\",t)}function Il(e,t){Do(e,\"da\",t)}function Do(e,t,n=_e){const s=e.__wdc||(e.__wdc=()=>{let r=n;for(;r;){if(r.isDeactivated)return;r=r.parent}return e()});if(Bn(t,s,n),n){let r=n.parent;for(;r&&r.parent;)kn(r.parent.vnode)&&Ml(s,t,n,r),r=r.parent}}function Ml(e,t,n,s){const r=Bn(t,e,s,!0);jn(()=>{As(s[t],r)},n)}function Bn(e,t,n=_e,s=!1){if(n){const r=n[e]||(n[e]=[]),o=t.__weh||(t.__weh=(...i)=>{if(n.isUnmounted)return;bt();const c=ln(n),l=$e(t,n,e,i);return c(),Et(),l});return s?r.unshift(o):r.push(o),o}}const Je=e=>(t,n=_e)=>(!Dn||e===\"sp\")&&Bn(e,(...s)=>t(...s),n),Ll=Je(\"bm\"),Hn=Je(\"m\"),$l=Je(\"bu\"),Nl=Je(\"u\"),Ko=Je(\"bum\"),jn=Je(\"um\"),Fl=Je(\"sp\"),kl=Je(\"rtg\"),Bl=Je(\"rtc\");function Hl(e,t=_e){Bn(\"ec\",e,t)}function Vs(e,t,n={},s,r){if(Ee.isCE||Ee.parent&&Wt(Ee.parent)&&Ee.parent.isCE)return t!==\"default\"&&(n.name=t),ce(\"slot\",n,s&&s());let o=e[t];o&&o._c&&(o._d=!1),Ie();const i=o&&Wo(o(n)),c=Lt(Pe,{key:n.key||i&&i.key||`_${t}`},i||(s?s():[]),i&&e._===1?64:-2);return!r&&c.scopeId&&(c.slotScopeIds=[c.scopeId+\"-s\"]),o&&o._c&&(o._d=!0),c}function Wo(e){return e.some(t=>Rn(t)?!(t.type===Ne||t.type===Pe&&!Wo(t.children)):!0)?e:null}const ps=e=>e?ri(e)?Ws(e)||e.proxy:ps(e.parent):null,qt=he(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>ps(e.parent),$root:e=>ps(e.root),$emit:e=>e.emit,$options:e=>Us(e),$forceUpdate:e=>e.f||(e.f=()=>{e.effect.dirty=!0,Bs(e.update)}),$nextTick:e=>e.n||(e.n=ks.bind(e.proxy)),$watch:e=>Rl.bind(e)}),Zn=(e,t)=>e!==le&&!e.__isScriptSetup&&Q(e,t),jl={get({_:e},t){const{ctx:n,setupState:s,data:r,props:o,accessCache:i,type:c,appContext:l}=e;let d;if(t[0]!==\"$\"){const m=i[t];if(m!==void 0)switch(m){case 1:return s[t];case 2:return r[t];case 4:return n[t];case 3:return o[t]}else{if(Zn(s,t))return i[t]=1,s[t];if(r!==le&&Q(r,t))return i[t]=2,r[t];if((d=e.propsOptions[0])&&Q(d,t))return i[t]=3,o[t];if(n!==le&&Q(n,t))return i[t]=4,n[t];gs&&(i[t]=0)}}const a=qt[t];let h,p;if(a)return t===\"$attrs\"&&Re(e,\"get\",t),a(e);if((h=c.__cssModules)&&(h=h[t]))return h;if(n!==le&&Q(n,t))return i[t]=4,n[t];if(p=l.config.globalProperties,Q(p,t))return p[t]},set({_:e},t,n){const{data:s,setupState:r,ctx:o}=e;return Zn(r,t)?(r[t]=n,!0):s!==le&&Q(s,t)?(s[t]=n,!0):Q(e.props,t)||t[0]===\"$\"&&t.slice(1)in e?!1:(o[t]=n,!0)},has({_:{data:e,setupState:t,accessCache:n,ctx:s,appContext:r,propsOptions:o}},i){let c;return!!n[i]||e!==le&&Q(e,i)||Zn(t,i)||(c=o[0])&&Q(c,i)||Q(s,i)||Q(qt,i)||Q(r.config.globalProperties,i)},defineProperty(e,t,n){return n.get!=null?e._.accessCache[t]=0:Q(n,\"value\")&&this.set(e,t,n.value,null),Reflect.defineProperty(e,t,n)}};function dr(e){return H(e)?e.reduce((t,n)=>(t[n]=null,t),{}):e}let gs=!0;function Vl(e){const t=Us(e),n=e.proxy,s=e.ctx;gs=!1,t.beforeCreate&&hr(t.beforeCreate,e,\"bc\");const{data:r,computed:o,methods:i,watch:c,provide:l,inject:d,created:a,beforeMount:h,mounted:p,beforeUpdate:m,updated:x,activated:A,deactivated:L,beforeDestroy:O,beforeUnmount:F,destroyed:B,unmounted:D,render:z,renderTracked:$,renderTriggered:ne,errorCaptured:j,serverPrefetch:ee,expose:q,inheritAttrs:re,components:I,directives:G,filters:pe}=t;if(d&&Ul(d,s,null),i)for(const J in i){const U=i[J];K(U)&&(s[J]=U.bind(n))}if(r){const J=r.call(n,n);ue(J)&&(e.data=on(J))}if(gs=!0,o)for(const J in o){const U=o[J],Ge=K(U)?U.bind(n,n):K(U.get)?U.get.bind(n,n):Oe,Xe=!K(U)&&K(U.set)?U.set.bind(n):Oe,Ve=me({get:Ge,set:Xe});Object.defineProperty(s,J,{enumerable:!0,configurable:!0,get:()=>Ve.value,set:Ce=>Ve.value=Ce})}if(c)for(const J in c)qo(c[J],s,n,J);if(l){const J=K(l)?l.call(n):l;Reflect.ownKeys(J).forEach(U=>{_n(U,J[U])})}a&&hr(a,e,\"c\");function se(J,U){H(U)?U.forEach(Ge=>J(Ge.bind(n))):U&&J(U.bind(n))}if(se(Ll,h),se(Hn,p),se($l,m),se(Nl,x),se(Ol,A),se(Il,L),se(Hl,j),se(Bl,$),se(kl,ne),se(Ko,F),se(jn,D),se(Fl,ee),H(q))if(q.length){const J=e.exposed||(e.exposed={});q.forEach(U=>{Object.defineProperty(J,U,{get:()=>n[U],set:Ge=>n[U]=Ge})})}else e.exposed||(e.exposed={});z&&e.render===Oe&&(e.render=z),re!=null&&(e.inheritAttrs=re),I&&(e.components=I),G&&(e.directives=G)}function Ul(e,t,n=Oe){H(e)&&(e=ms(e));for(const s in e){const r=e[s];let o;ue(r)?\"default\"in r?o=He(r.from||s,r.default,!0):o=He(r.from||s):o=He(r),fe(o)?Object.defineProperty(t,s,{enumerable:!0,configurable:!0,get:()=>o.value,set:i=>o.value=i}):t[s]=o}}function hr(e,t,n){$e(H(e)?e.map(s=>s.bind(t.proxy)):e.bind(t.proxy),t,n)}function qo(e,t,n,s){const r=s.includes(\".\")?Ho(n,s):()=>n[s];if(de(e)){const o=t[e];K(o)&&Kt(r,o)}else if(K(e))Kt(r,e.bind(n));else if(ue(e))if(H(e))e.forEach(o=>qo(o,t,n,s));else{const o=K(e.handler)?e.handler.bind(n):t[e.handler];K(o)&&Kt(r,o,e)}}function Us(e){const t=e.type,{mixins:n,extends:s}=t,{mixins:r,optionsCache:o,config:{optionMergeStrategies:i}}=e.appContext,c=o.get(t);let l;return c?l=c:!r.length&&!n&&!s?l=t:(l={},r.length&&r.forEach(d=>Sn(l,d,i,!0)),Sn(l,t,i)),ue(t)&&o.set(t,l),l}function Sn(e,t,n,s=!1){const{mixins:r,extends:o}=t;o&&Sn(e,o,n,!0),r&&r.forEach(i=>Sn(e,i,n,!0));for(const i in t)if(!(s&&i===\"expose\")){const c=Dl[i]||n&&n[i];e[i]=c?c(e[i],t[i]):t[i]}return e}const Dl={data:pr,props:gr,emits:gr,methods:Ut,computed:Ut,beforeCreate:we,created:we,beforeMount:we,mounted:we,beforeUpdate:we,updated:we,beforeDestroy:we,beforeUnmount:we,destroyed:we,unmounted:we,activated:we,deactivated:we,errorCaptured:we,serverPrefetch:we,components:Ut,directives:Ut,watch:Wl,provide:pr,inject:Kl};function pr(e,t){return t?e?function(){return he(K(e)?e.call(this,this):e,K(t)?t.call(this,this):t)}:t:e}function Kl(e,t){return Ut(ms(e),ms(t))}function ms(e){if(H(e)){const t={};for(let n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function we(e,t){return e?[...new Set([].concat(e,t))]:t}function Ut(e,t){return e?he(Object.create(null),e,t):t}function gr(e,t){return e?H(e)&&H(t)?[...new Set([...e,...t])]:he(Object.create(null),dr(e),dr(t??{})):t}function Wl(e,t){if(!e)return t;if(!t)return e;const n=he(Object.create(null),e);for(const s in t)n[s]=we(e[s],t[s]);return n}function zo(){return{app:null,config:{isNativeTag:Ei,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let ql=0;function zl(e,t){return function(s,r=null){K(s)||(s=he({},s)),r!=null&&!ue(r)&&(r=null);const o=zo(),i=new WeakSet;let c=!1;const l=o.app={_uid:ql++,_component:s,_props:r,_container:null,_context:o,_instance:null,version:bc,get config(){return o.config},set config(d){},use(d,...a){return i.has(d)||(d&&K(d.install)?(i.add(d),d.install(l,...a)):K(d)&&(i.add(d),d(l,...a))),l},mixin(d){return o.mixins.includes(d)||o.mixins.push(d),l},component(d,a){return a?(o.components[d]=a,l):o.components[d]},directive(d,a){return a?(o.directives[d]=a,l):o.directives[d]},mount(d,a,h){if(!c){const p=ce(s,r);return p.appContext=o,h===!0?h=\"svg\":h===!1&&(h=void 0),a&&t?t(p,d):e(p,d,h),c=!0,l._container=d,d.__vue_app__=l,Ws(p.component)||p.component.proxy}},unmount(){c&&(e(null,l._container),delete l._container.__vue_app__)},provide(d,a){return o.provides[d]=a,l},runWithContext(d){const a=zt;zt=l;try{return d()}finally{zt=a}}};return l}}let zt=null;function _n(e,t){if(_e){let n=_e.provides;const s=_e.parent&&_e.parent.provides;s===n&&(n=_e.provides=Object.create(s)),n[e]=t}}function He(e,t,n=!1){const s=_e||Ee;if(s||zt){const r=s?s.parent==null?s.vnode.appContext&&s.vnode.appContext.provides:s.parent.provides:zt._context.provides;if(r&&e in r)return r[e];if(arguments.length>1)return n&&K(t)?t.call(s&&s.proxy):t}}function Gl(e,t,n,s=!1){const r={},o={};bn(o,Un,1),e.propsDefaults=Object.create(null),Go(e,t,r,o);for(const i in e.propsOptions[0])i in r||(r[i]=void 0);n?e.props=s?r:Eo(r):e.type.props?e.props=r:e.props=o,e.attrs=o}function Ql(e,t,n,s){const{props:r,attrs:o,vnode:{patchFlag:i}}=e,c=Y(r),[l]=e.propsOptions;let d=!1;if((s||i>0)&&!(i&16)){if(i&8){const a=e.vnode.dynamicProps;for(let h=0;h<a.length;h++){let p=a[h];if(Fn(e.emitsOptions,p))continue;const m=t[p];if(l)if(Q(o,p))m!==o[p]&&(o[p]=m,d=!0);else{const x=qe(p);r[x]=_s(l,c,x,m,e,!1)}else m!==o[p]&&(o[p]=m,d=!0)}}}else{Go(e,t,r,o)&&(d=!0);let a;for(const h in c)(!t||!Q(t,h)&&((a=kt(h))===h||!Q(t,a)))&&(l?n&&(n[h]!==void 0||n[a]!==void 0)&&(r[h]=_s(l,c,h,void 0,e,!0)):delete r[h]);if(o!==c)for(const h in o)(!t||!Q(t,h))&&(delete o[h],d=!0)}d&&Ye(e,\"set\",\"$attrs\")}function Go(e,t,n,s){const[r,o]=e.propsOptions;let i=!1,c;if(t)for(let l in t){if(Dt(l))continue;const d=t[l];let a;r&&Q(r,a=qe(l))?!o||!o.includes(a)?n[a]=d:(c||(c={}))[a]=d:Fn(e.emitsOptions,l)||(!(l in s)||d!==s[l])&&(s[l]=d,i=!0)}if(o){const l=Y(n),d=c||le;for(let a=0;a<o.length;a++){const h=o[a];n[h]=_s(r,l,h,d[h],e,!Q(d,h))}}return i}function _s(e,t,n,s,r,o){const i=e[n];if(i!=null){const c=Q(i,\"default\");if(c&&s===void 0){const l=i.default;if(i.type!==Function&&!i.skipFactory&&K(l)){const{propsDefaults:d}=r;if(n in d)s=d[n];else{const a=ln(r);s=d[n]=l.call(null,t),a()}}else s=l}i[0]&&(o&&!c?s=!1:i[1]&&(s===\"\"||s===kt(n))&&(s=!0))}return s}function Qo(e,t,n=!1){const s=t.propsCache,r=s.get(e);if(r)return r;const o=e.props,i={},c=[];let l=!1;if(!K(e)){const a=h=>{l=!0;const[p,m]=Qo(h,t,!0);he(i,p),m&&c.push(...m)};!n&&t.mixins.length&&t.mixins.forEach(a),e.extends&&a(e.extends),e.mixins&&e.mixins.forEach(a)}if(!o&&!l)return ue(e)&&s.set(e,Tt),Tt;if(H(o))for(let a=0;a<o.length;a++){const h=qe(o[a]);mr(h)&&(i[h]=le)}else if(o)for(const a in o){const h=qe(a);if(mr(h)){const p=o[a],m=i[h]=H(p)||K(p)?{type:p}:he({},p);if(m){const x=yr(Boolean,m.type),A=yr(String,m.type);m[0]=x>-1,m[1]=A<0||x<A,(x>-1||Q(m,\"default\"))&&c.push(h)}}}const d=[i,c];return ue(e)&&s.set(e,d),d}function mr(e){return e[0]!==\"$\"&&!Dt(e)}function _r(e){return e===null?\"null\":typeof e==\"function\"?e.name||\"\":typeof e==\"object\"&&e.constructor&&e.constructor.name||\"\"}function vr(e,t){return _r(e)===_r(t)}function yr(e,t){return H(t)?t.findIndex(n=>vr(n,e)):K(t)&&vr(t,e)?0:-1}const Yo=e=>e[0]===\"_\"||e===\"$stable\",Ds=e=>H(e)?e.map(Ke):[Ke(e)],Yl=(e,t,n)=>{if(t._n)return t;const s=Cn((...r)=>Ds(t(...r)),n);return s._c=!1,s},Jo=(e,t,n)=>{const s=e._ctx;for(const r in e){if(Yo(r))continue;const o=e[r];if(K(o))t[r]=Yl(r,o,s);else if(o!=null){const i=Ds(o);t[r]=()=>i}}},Xo=(e,t)=>{const n=Ds(t);e.slots.default=()=>n},Jl=(e,t)=>{if(e.vnode.shapeFlag&32){const n=t._;n?(e.slots=Y(t),bn(t,\"_\",n)):Jo(t,e.slots={})}else e.slots={},t&&Xo(e,t);bn(e.slots,Un,1)},Xl=(e,t,n)=>{const{vnode:s,slots:r}=e;let o=!0,i=le;if(s.shapeFlag&32){const c=t._;c?n&&c===1?o=!1:(he(r,t),!n&&c===1&&delete r._):(o=!t.$stable,Jo(t,r)),i=t}else t&&(Xo(e,t),i={default:1});if(o)for(const c in r)!Yo(c)&&i[c]==null&&delete r[c]};function vs(e,t,n,s,r=!1){if(H(e)){e.forEach((p,m)=>vs(p,t&&(H(t)?t[m]:t),n,s,r));return}if(Wt(s)&&!r)return;const o=s.shapeFlag&4?Ws(s.component)||s.component.proxy:s.el,i=r?null:o,{i:c,r:l}=e,d=t&&t.r,a=c.refs===le?c.refs={}:c.refs,h=c.setupState;if(d!=null&&d!==l&&(de(d)?(a[d]=null,Q(h,d)&&(h[d]=null)):fe(d)&&(d.value=null)),K(l))ut(l,c,12,[i,a]);else{const p=de(l),m=fe(l);if(p||m){const x=()=>{if(e.f){const A=p?Q(h,l)?h[l]:a[l]:l.value;r?H(A)&&As(A,o):H(A)?A.includes(o)||A.push(o):p?(a[l]=[o],Q(h,l)&&(h[l]=a[l])):(l.value=[o],e.k&&(a[e.k]=l.value))}else p?(a[l]=i,Q(h,l)&&(h[l]=i)):m&&(l.value=i,e.k&&(a[e.k]=i))};i?(x.id=-1,Se(x,n)):x()}}}const Se=wl;function Zl(e){return ec(e)}function ec(e,t){const n=io();n.__VUE__=!0;const{insert:s,remove:r,patchProp:o,createElement:i,createText:c,createComment:l,setText:d,setElementText:a,parentNode:h,nextSibling:p,setScopeId:m=Oe,insertStaticContent:x}=e,A=(u,f,g,y=null,_=null,w=null,R=void 0,E=null,C=!!f.dynamicChildren)=>{if(u===f)return;u&&!_t(u,f)&&(y=v(u),Ce(u,_,w,!0),u=null),f.patchFlag===-2&&(C=!1,f.dynamicChildren=null);const{type:b,ref:P,shapeFlag:k}=f;switch(b){case Vn:L(u,f,g,y);break;case Ne:O(u,f,g,y);break;case Gt:u==null&&F(f,g,y,R);break;case Pe:I(u,f,g,y,_,w,R,E,C);break;default:k&1?z(u,f,g,y,_,w,R,E,C):k&6?G(u,f,g,y,_,w,R,E,C):(k&64||k&128)&&b.process(u,f,g,y,_,w,R,E,C,M)}P!=null&&_&&vs(P,u&&u.ref,w,f||u,!f)},L=(u,f,g,y)=>{if(u==null)s(f.el=c(f.children),g,y);else{const _=f.el=u.el;f.children!==u.children&&d(_,f.children)}},O=(u,f,g,y)=>{u==null?s(f.el=l(f.children||\"\"),g,y):f.el=u.el},F=(u,f,g,y)=>{[u.el,u.anchor]=x(u.children,f,g,y,u.el,u.anchor)},B=({el:u,anchor:f},g,y)=>{let _;for(;u&&u!==f;)_=p(u),s(u,g,y),u=_;s(f,g,y)},D=({el:u,anchor:f})=>{let g;for(;u&&u!==f;)g=p(u),r(u),u=g;r(f)},z=(u,f,g,y,_,w,R,E,C)=>{f.type===\"svg\"?R=\"svg\":f.type===\"math\"&&(R=\"mathml\"),u==null?$(f,g,y,_,w,R,E,C):ee(u,f,_,w,R,E,C)},$=(u,f,g,y,_,w,R,E)=>{let C,b;const{props:P,shapeFlag:k,transition:N,dirs:V}=u;if(C=u.el=i(u.type,w,P&&P.is,P),k&8?a(C,u.children):k&16&&j(u.children,C,null,y,_,es(u,w),R,E),V&&dt(u,null,y,\"created\"),ne(C,u,u.scopeId,R,y),P){for(const te in P)te!==\"value\"&&!Dt(te)&&o(C,te,null,P[te],w,u.children,y,_,ve);\"value\"in P&&o(C,\"value\",null,P.value,w),(b=P.onVnodeBeforeMount)&&De(b,y,u)}V&&dt(u,null,y,\"beforeMount\");const W=tc(_,N);W&&N.beforeEnter(C),s(C,f,g),((b=P&&P.onVnodeMounted)||W||V)&&Se(()=>{b&&De(b,y,u),W&&N.enter(C),V&&dt(u,null,y,\"mounted\")},_)},ne=(u,f,g,y,_)=>{if(g&&m(u,g),y)for(let w=0;w<y.length;w++)m(u,y[w]);if(_){let w=_.subTree;if(f===w){const R=_.vnode;ne(u,R,R.scopeId,R.slotScopeIds,_.parent)}}},j=(u,f,g,y,_,w,R,E,C=0)=>{for(let b=C;b<u.length;b++){const P=u[b]=E?ot(u[b]):Ke(u[b]);A(null,P,f,g,y,_,w,R,E)}},ee=(u,f,g,y,_,w,R)=>{const E=f.el=u.el;let{patchFlag:C,dynamicChildren:b,dirs:P}=f;C|=u.patchFlag&16;const k=u.props||le,N=f.props||le;let V;if(g&&ht(g,!1),(V=N.onVnodeBeforeUpdate)&&De(V,g,f,u),P&&dt(f,u,g,\"beforeUpdate\"),g&&ht(g,!0),b?q(u.dynamicChildren,b,E,g,y,es(f,_),w):R||U(u,f,E,null,g,y,es(f,_),w,!1),C>0){if(C&16)re(E,f,k,N,g,y,_);else if(C&2&&k.class!==N.class&&o(E,\"class\",null,N.class,_),C&4&&o(E,\"style\",k.style,N.style,_),C&8){const W=f.dynamicProps;for(let te=0;te<W.length;te++){const ie=W[te],ge=k[ie],Fe=N[ie];(Fe!==ge||ie===\"value\")&&o(E,ie,ge,Fe,_,u.children,g,y,ve)}}C&1&&u.children!==f.children&&a(E,f.children)}else!R&&b==null&&re(E,f,k,N,g,y,_);((V=N.onVnodeUpdated)||P)&&Se(()=>{V&&De(V,g,f,u),P&&dt(f,u,g,\"updated\")},y)},q=(u,f,g,y,_,w,R)=>{for(let E=0;E<f.length;E++){const C=u[E],b=f[E],P=C.el&&(C.type===Pe||!_t(C,b)||C.shapeFlag&70)?h(C.el):g;A(C,b,P,null,y,_,w,R,!0)}},re=(u,f,g,y,_,w,R)=>{if(g!==y){if(g!==le)for(const E in g)!Dt(E)&&!(E in y)&&o(u,E,g[E],null,R,f.children,_,w,ve);for(const E in y){if(Dt(E))continue;const C=y[E],b=g[E];C!==b&&E!==\"value\"&&o(u,E,b,C,R,f.children,_,w,ve)}\"value\"in y&&o(u,\"value\",g.value,y.value,R)}},I=(u,f,g,y,_,w,R,E,C)=>{const b=f.el=u?u.el:c(\"\"),P=f.anchor=u?u.anchor:c(\"\");let{patchFlag:k,dynamicChildren:N,slotScopeIds:V}=f;V&&(E=E?E.concat(V):V),u==null?(s(b,g,y),s(P,g,y),j(f.children||[],g,P,_,w,R,E,C)):k>0&&k&64&&N&&u.dynamicChildren?(q(u.dynamicChildren,N,g,_,w,R,E),(f.key!=null||_&&f===_.subTree)&&Zo(u,f,!0)):U(u,f,g,P,_,w,R,E,C)},G=(u,f,g,y,_,w,R,E,C)=>{f.slotScopeIds=E,u==null?f.shapeFlag&512?_.ctx.activate(f,g,y,R,C):pe(f,g,y,_,w,R,C):Me(u,f,C)},pe=(u,f,g,y,_,w,R)=>{const E=u.component=hc(u,y,_);if(kn(u)&&(E.ctx.renderer=M),pc(E),E.asyncDep){if(_&&_.registerDep(E,se),!u.el){const C=E.subTree=ce(Ne);O(null,C,f,g)}}else se(E,u,f,g,_,w,R)},Me=(u,f,g)=>{const y=f.component=u.component;if(vl(u,f,g))if(y.asyncDep&&!y.asyncResolved){J(y,f,g);return}else y.next=f,dl(y.update),y.effect.dirty=!0,y.update();else f.el=u.el,y.vnode=f},se=(u,f,g,y,_,w,R)=>{const E=()=>{if(u.isMounted){let{next:P,bu:k,u:N,parent:V,vnode:W}=u;{const St=ei(u);if(St){P&&(P.el=W.el,J(u,P,R)),St.asyncDep.then(()=>{u.isUnmounted||E()});return}}let te=P,ie;ht(u,!1),P?(P.el=W.el,J(u,P,R)):P=W,k&&Qn(k),(ie=P.props&&P.props.onVnodeBeforeUpdate)&&De(ie,V,P,W),ht(u,!0);const ge=Jn(u),Fe=u.subTree;u.subTree=ge,A(Fe,ge,h(Fe.el),v(Fe),u,_,w),P.el=ge.el,te===null&&yl(u,ge.el),N&&Se(N,_),(ie=P.props&&P.props.onVnodeUpdated)&&Se(()=>De(ie,V,P,W),_)}else{let P;const{el:k,props:N}=f,{bm:V,m:W,parent:te}=u,ie=Wt(f);if(ht(u,!1),V&&Qn(V),!ie&&(P=N&&N.onVnodeBeforeMount)&&De(P,te,f),ht(u,!0),k&&oe){const ge=()=>{u.subTree=Jn(u),oe(k,u.subTree,u,_,null)};ie?f.type.__asyncLoader().then(()=>!u.isUnmounted&&ge()):ge()}else{const ge=u.subTree=Jn(u);A(null,ge,g,y,u,_,w),f.el=ge.el}if(W&&Se(W,_),!ie&&(P=N&&N.onVnodeMounted)){const ge=f;Se(()=>De(P,te,ge),_)}(f.shapeFlag&256||te&&Wt(te.vnode)&&te.vnode.shapeFlag&256)&&u.a&&Se(u.a,_),u.isMounted=!0,f=g=y=null}},C=u.effect=new Ps(E,Oe,()=>Bs(b),u.scope),b=u.update=()=>{C.dirty&&C.run()};b.id=u.uid,ht(u,!0),b()},J=(u,f,g)=>{f.component=u;const y=u.vnode.props;u.vnode=f,u.next=null,Ql(u,f.props,y,g),Xl(u,f.children,g),bt(),cr(u),Et()},U=(u,f,g,y,_,w,R,E,C=!1)=>{const b=u&&u.children,P=u?u.shapeFlag:0,k=f.children,{patchFlag:N,shapeFlag:V}=f;if(N>0){if(N&128){Xe(b,k,g,y,_,w,R,E,C);return}else if(N&256){Ge(b,k,g,y,_,w,R,E,C);return}}V&8?(P&16&&ve(b,_,w),k!==b&&a(g,k)):P&16?V&16?Xe(b,k,g,y,_,w,R,E,C):ve(b,_,w,!0):(P&8&&a(g,\"\"),V&16&&j(k,g,y,_,w,R,E,C))},Ge=(u,f,g,y,_,w,R,E,C)=>{u=u||Tt,f=f||Tt;const b=u.length,P=f.length,k=Math.min(b,P);let N;for(N=0;N<k;N++){const V=f[N]=C?ot(f[N]):Ke(f[N]);A(u[N],V,g,null,_,w,R,E,C)}b>P?ve(u,_,w,!0,!1,k):j(f,g,y,_,w,R,E,C,k)},Xe=(u,f,g,y,_,w,R,E,C)=>{let b=0;const P=f.length;let k=u.length-1,N=P-1;for(;b<=k&&b<=N;){const V=u[b],W=f[b]=C?ot(f[b]):Ke(f[b]);if(_t(V,W))A(V,W,g,null,_,w,R,E,C);else break;b++}for(;b<=k&&b<=N;){const V=u[k],W=f[N]=C?ot(f[N]):Ke(f[N]);if(_t(V,W))A(V,W,g,null,_,w,R,E,C);else break;k--,N--}if(b>k){if(b<=N){const V=N+1,W=V<P?f[V].el:y;for(;b<=N;)A(null,f[b]=C?ot(f[b]):Ke(f[b]),g,W,_,w,R,E,C),b++}}else if(b>N)for(;b<=k;)Ce(u[b],_,w,!0),b++;else{const V=b,W=b,te=new Map;for(b=W;b<=N;b++){const Ae=f[b]=C?ot(f[b]):Ke(f[b]);Ae.key!=null&&te.set(Ae.key,b)}let ie,ge=0;const Fe=N-W+1;let St=!1,Js=0;const Bt=new Array(Fe);for(b=0;b<Fe;b++)Bt[b]=0;for(b=V;b<=k;b++){const Ae=u[b];if(ge>=Fe){Ce(Ae,_,w,!0);continue}let Ue;if(Ae.key!=null)Ue=te.get(Ae.key);else for(ie=W;ie<=N;ie++)if(Bt[ie-W]===0&&_t(Ae,f[ie])){Ue=ie;break}Ue===void 0?Ce(Ae,_,w,!0):(Bt[Ue-W]=b+1,Ue>=Js?Js=Ue:St=!0,A(Ae,f[Ue],g,null,_,w,R,E,C),ge++)}const Xs=St?nc(Bt):Tt;for(ie=Xs.length-1,b=Fe-1;b>=0;b--){const Ae=W+b,Ue=f[Ae],Zs=Ae+1<P?f[Ae+1].el:y;Bt[b]===0?A(null,Ue,g,Zs,_,w,R,E,C):St&&(ie<0||b!==Xs[ie]?Ve(Ue,g,Zs,2):ie--)}}},Ve=(u,f,g,y,_=null)=>{const{el:w,type:R,transition:E,children:C,shapeFlag:b}=u;if(b&6){Ve(u.component.subTree,f,g,y);return}if(b&128){u.suspense.move(f,g,y);return}if(b&64){R.move(u,f,g,M);return}if(R===Pe){s(w,f,g);for(let k=0;k<C.length;k++)Ve(C[k],f,g,y);s(u.anchor,f,g);return}if(R===Gt){B(u,f,g);return}if(y!==2&&b&1&&E)if(y===0)E.beforeEnter(w),s(w,f,g),Se(()=>E.enter(w),_);else{const{leave:k,delayLeave:N,afterLeave:V}=E,W=()=>s(w,f,g),te=()=>{k(w,()=>{W(),V&&V()})};N?N(w,W,te):te()}else s(w,f,g)},Ce=(u,f,g,y=!1,_=!1)=>{const{type:w,props:R,ref:E,children:C,dynamicChildren:b,shapeFlag:P,patchFlag:k,dirs:N}=u;if(E!=null&&vs(E,null,g,u,!0),P&256){f.ctx.deactivate(u);return}const V=P&1&&N,W=!Wt(u);let te;if(W&&(te=R&&R.onVnodeBeforeUnmount)&&De(te,f,u),P&6)cn(u.component,g,y);else{if(P&128){u.suspense.unmount(g,y);return}V&&dt(u,null,f,\"beforeUnmount\"),P&64?u.type.remove(u,f,g,_,M,y):b&&(w!==Pe||k>0&&k&64)?ve(b,f,g,!1,!0):(w===Pe&&k&384||!_&&P&16)&&ve(C,f,g),y&&xt(u)}(W&&(te=R&&R.onVnodeUnmounted)||V)&&Se(()=>{te&&De(te,f,u),V&&dt(u,null,f,\"unmounted\")},g)},xt=u=>{const{type:f,el:g,anchor:y,transition:_}=u;if(f===Pe){Ct(g,y);return}if(f===Gt){D(u);return}const w=()=>{r(g),_&&!_.persisted&&_.afterLeave&&_.afterLeave()};if(u.shapeFlag&1&&_&&!_.persisted){const{leave:R,delayLeave:E}=_,C=()=>R(g,w);E?E(u.el,w,C):C()}else w()},Ct=(u,f)=>{let g;for(;u!==f;)g=p(u),r(u),u=g;r(f)},cn=(u,f,g)=>{const{bum:y,scope:_,update:w,subTree:R,um:E}=u;y&&Qn(y),_.stop(),w&&(w.active=!1,Ce(R,u,f,g)),E&&Se(E,f),Se(()=>{u.isUnmounted=!0},f),f&&f.pendingBranch&&!f.isUnmounted&&u.asyncDep&&!u.asyncResolved&&u.suspenseId===f.pendingId&&(f.deps--,f.deps===0&&f.resolve())},ve=(u,f,g,y=!1,_=!1,w=0)=>{for(let R=w;R<u.length;R++)Ce(u[R],f,g,y,_)},v=u=>u.shapeFlag&6?v(u.component.subTree):u.shapeFlag&128?u.suspense.next():p(u.anchor||u.el);let T=!1;const S=(u,f,g)=>{u==null?f._vnode&&Ce(f._vnode,null,null,!0):A(f._vnode||null,u,f,null,null,null,g),T||(T=!0,cr(),Mo(),T=!1),f._vnode=u},M={p:A,um:Ce,m:Ve,r:xt,mt:pe,mc:j,pc:U,pbc:q,n:v,o:e};let X,oe;return t&&([X,oe]=t(M)),{render:S,hydrate:X,createApp:zl(S,X)}}function es({type:e,props:t},n){return n===\"svg\"&&e===\"foreignObject\"||n===\"mathml\"&&e===\"annotation-xml\"&&t&&t.encoding&&t.encoding.includes(\"html\")?void 0:n}function ht({effect:e,update:t},n){e.allowRecurse=t.allowRecurse=n}function tc(e,t){return(!e||e&&!e.pendingBranch)&&t&&!t.persisted}function Zo(e,t,n=!1){const s=e.children,r=t.children;if(H(s)&&H(r))for(let o=0;o<s.length;o++){const i=s[o];let c=r[o];c.shapeFlag&1&&!c.dynamicChildren&&((c.patchFlag<=0||c.patchFlag===32)&&(c=r[o]=ot(r[o]),c.el=i.el),n||Zo(i,c)),c.type===Vn&&(c.el=i.el)}}function nc(e){const t=e.slice(),n=[0];let s,r,o,i,c;const l=e.length;for(s=0;s<l;s++){const d=e[s];if(d!==0){if(r=n[n.length-1],e[r]<d){t[s]=r,n.push(s);continue}for(o=0,i=n.length-1;o<i;)c=o+i>>1,e[n[c]]<d?o=c+1:i=c;d<e[n[o]]&&(o>0&&(t[s]=n[o-1]),n[o]=s)}}for(o=n.length,i=n[o-1];o-- >0;)n[o]=i,i=t[i];return n}function ei(e){const t=e.subTree.component;if(t)return t.asyncDep&&!t.asyncResolved?t:ei(t)}const sc=e=>e.__isTeleport,Pe=Symbol.for(\"v-fgt\"),Vn=Symbol.for(\"v-txt\"),Ne=Symbol.for(\"v-cmt\"),Gt=Symbol.for(\"v-stc\"),Qt=[];let Be=null;function Ie(e=!1){Qt.push(Be=e?null:[])}function rc(){Qt.pop(),Be=Qt[Qt.length-1]||null}let tn=1;function br(e){tn+=e}function ti(e){return e.dynamicChildren=tn>0?Be||Tt:null,rc(),tn>0&&Be&&Be.push(e),e}function wt(e,t,n,s,r,o){return ti(ye(e,t,n,s,r,o,!0))}function Lt(e,t,n,s,r){return ti(ce(e,t,n,s,r,!0))}function Rn(e){return e?e.__v_isVNode===!0:!1}function _t(e,t){return e.type===t.type&&e.key===t.key}const Un=\"__vInternal\",ni=({key:e})=>e??null,vn=({ref:e,ref_key:t,ref_for:n})=>(typeof e==\"number\"&&(e=\"\"+e),e!=null?de(e)||fe(e)||K(e)?{i:Ee,r:e,k:t,f:!!n}:e:null);function ye(e,t=null,n=null,s=0,r=null,o=e===Pe?0:1,i=!1,c=!1){const l={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&ni(t),ref:t&&vn(t),scopeId:No,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:o,patchFlag:s,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:Ee};return c?(Ks(l,n),o&128&&e.normalize(l)):n&&(l.shapeFlag|=de(n)?8:16),tn>0&&!i&&Be&&(l.patchFlag>0||o&6)&&l.patchFlag!==32&&Be.push(l),l}const ce=oc;function oc(e,t=null,n=null,s=0,r=null,o=!1){if((!e||e===ko)&&(e=Ne),Rn(e)){const c=ft(e,t,!0);return n&&Ks(c,n),tn>0&&!o&&Be&&(c.shapeFlag&6?Be[Be.indexOf(e)]=c:Be.push(c)),c.patchFlag|=-2,c}if(yc(e)&&(e=e.__vccOpts),t){t=ic(t);let{class:c,style:l}=t;c&&!de(c)&&(t.class=Ln(c)),ue(l)&&(xo(l)&&!H(l)&&(l=he({},l)),t.style=Mn(l))}const i=de(e)?1:El(e)?128:sc(e)?64:ue(e)?4:K(e)?2:0;return ye(e,t,n,s,r,i,o,!0)}function ic(e){return e?xo(e)||Un in e?he({},e):e:null}function ft(e,t,n=!1){const{props:s,ref:r,patchFlag:o,children:i}=e,c=t?ac(s||{},t):s;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:c,key:c&&ni(c),ref:t&&t.ref?n&&r?H(r)?r.concat(vn(t)):[r,vn(t)]:vn(t):r,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:i,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==Pe?o===-1?16:o|16:o,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&ft(e.ssContent),ssFallback:e.ssFallback&&ft(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce}}function lc(e=\" \",t=0){return ce(Vn,null,e,t)}function cc(e,t){const n=ce(Gt,null,e);return n.staticCount=t,n}function uc(e=\"\",t=!1){return t?(Ie(),Lt(Ne,null,e)):ce(Ne,null,e)}function Ke(e){return e==null||typeof e==\"boolean\"?ce(Ne):H(e)?ce(Pe,null,e.slice()):typeof e==\"object\"?ot(e):ce(Vn,null,String(e))}function ot(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:ft(e)}function Ks(e,t){let n=0;const{shapeFlag:s}=e;if(t==null)t=null;else if(H(t))n=16;else if(typeof t==\"object\")if(s&65){const r=t.default;r&&(r._c&&(r._d=!1),Ks(e,r()),r._c&&(r._d=!0));return}else{n=32;const r=t._;!r&&!(Un in t)?t._ctx=Ee:r===3&&Ee&&(Ee.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else K(t)?(t={default:t,_ctx:Ee},n=32):(t=String(t),s&64?(n=16,t=[lc(t)]):n=8);e.children=t,e.shapeFlag|=n}function ac(...e){const t={};for(let n=0;n<e.length;n++){const s=e[n];for(const r in s)if(r===\"class\")t.class!==s.class&&(t.class=Ln([t.class,s.class]));else if(r===\"style\")t.style=Mn([t.style,s.style]);else if(Tn(r)){const o=t[r],i=s[r];i&&o!==i&&!(H(o)&&o.includes(i))&&(t[r]=o?[].concat(o,i):i)}else r!==\"\"&&(t[r]=s[r])}return t}function De(e,t,n,s=null){$e(e,t,7,[n,s])}const fc=zo();let dc=0;function hc(e,t,n){const s=e.type,r=(t?t.appContext:e.appContext)||fc,o={uid:dc++,vnode:e,type:s,parent:t,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,scope:new Ni(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(r.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Qo(s,r),emitsOptions:$o(s,r),emit:null,emitted:null,propsDefaults:le,inheritAttrs:s.inheritAttrs,ctx:le,data:le,props:le,attrs:le,slots:le,refs:le,setupState:le,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return o.ctx={_:o},o.root=t?t.root:o,o.emit=gl.bind(null,o),e.ce&&e.ce(o),o}let _e=null;const si=()=>_e||Ee;let An,ys;{const e=io(),t=(n,s)=>{let r;return(r=e[n])||(r=e[n]=[]),r.push(s),o=>{r.length>1?r.forEach(i=>i(o)):r[0](o)}};An=t(\"__VUE_INSTANCE_SETTERS__\",n=>_e=n),ys=t(\"__VUE_SSR_SETTERS__\",n=>Dn=n)}const ln=e=>{const t=_e;return An(e),e.scope.on(),()=>{e.scope.off(),An(t)}},Er=()=>{_e&&_e.scope.off(),An(null)};function ri(e){return e.vnode.shapeFlag&4}let Dn=!1;function pc(e,t=!1){t&&ys(t);const{props:n,children:s}=e.vnode,r=ri(e);Gl(e,n,r,t),Jl(e,s);const o=r?gc(e,t):void 0;return t&&ys(!1),o}function gc(e,t){const n=e.type;e.accessCache=Object.create(null),e.proxy=Co(new Proxy(e.ctx,jl));const{setup:s}=n;if(s){const r=e.setupContext=s.length>1?_c(e):null,o=ln(e);bt();const i=ut(s,e,0,[e.props,r]);if(Et(),o(),so(i)){if(i.then(Er,Er),t)return i.then(c=>{wr(e,c,t)}).catch(c=>{Nn(c,e,0)});e.asyncDep=i}else wr(e,i,t)}else oi(e,t)}function wr(e,t,n){K(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:ue(t)&&(e.setupState=To(t)),oi(e,n)}let xr;function oi(e,t,n){const s=e.type;if(!e.render){if(!t&&xr&&!s.render){const r=s.template||Us(e).template;if(r){const{isCustomElement:o,compilerOptions:i}=e.appContext.config,{delimiters:c,compilerOptions:l}=s,d=he(he({isCustomElement:o,delimiters:c},i),l);s.render=xr(r,d)}}e.render=s.render||Oe}{const r=ln(e);bt();try{Vl(e)}finally{Et(),r()}}}function mc(e){return e.attrsProxy||(e.attrsProxy=new Proxy(e.attrs,{get(t,n){return Re(e,\"get\",\"$attrs\"),t[n]}}))}function _c(e){const t=n=>{e.exposed=n||{}};return{get attrs(){return mc(e)},slots:e.slots,emit:e.emit,expose:t}}function Ws(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(To(Co(e.exposed)),{get(t,n){if(n in t)return t[n];if(n in qt)return qt[n](e)},has(t,n){return n in t||n in qt}}))}function vc(e,t=!0){return K(e)?e.displayName||e.name:e.name||t&&e.__name}function yc(e){return K(e)&&\"__vccOpts\"in e}const me=(e,t)=>rl(e,t,Dn);function qs(e,t,n){const s=arguments.length;return s===2?ue(t)&&!H(t)?Rn(t)?ce(e,null,[t]):ce(e,t):ce(e,null,t):(s>3?n=Array.prototype.slice.call(arguments,2):s===3&&Rn(n)&&(n=[n]),ce(e,t,n))}const bc=\"3.4.21\";/**\n* @vue/runtime-dom v3.4.21\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/const Ec=\"http://www.w3.org/2000/svg\",wc=\"http://www.w3.org/1998/Math/MathML\",it=typeof document<\"u\"?document:null,Cr=it&&it.createElement(\"template\"),xc={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,n,s)=>{const r=t===\"svg\"?it.createElementNS(Ec,e):t===\"mathml\"?it.createElementNS(wc,e):it.createElement(e,n?{is:n}:void 0);return e===\"select\"&&s&&s.multiple!=null&&r.setAttribute(\"multiple\",s.multiple),r},createText:e=>it.createTextNode(e),createComment:e=>it.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>it.querySelector(e),setScopeId(e,t){e.setAttribute(t,\"\")},insertStaticContent(e,t,n,s,r,o){const i=n?n.previousSibling:t.lastChild;if(r&&(r===o||r.nextSibling))for(;t.insertBefore(r.cloneNode(!0),n),!(r===o||!(r=r.nextSibling)););else{Cr.innerHTML=s===\"svg\"?`<svg>${e}</svg>`:s===\"mathml\"?`<math>${e}</math>`:e;const c=Cr.content;if(s===\"svg\"||s===\"mathml\"){const l=c.firstChild;for(;l.firstChild;)c.appendChild(l.firstChild);c.removeChild(l)}t.insertBefore(c,n)}return[i?i.nextSibling:t.firstChild,n?n.previousSibling:t.lastChild]}},et=\"transition\",Ht=\"animation\",nn=Symbol(\"_vtc\"),zs=(e,{slots:t})=>qs(Pl,Cc(e),t);zs.displayName=\"Transition\";const ii={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};zs.props=he({},jo,ii);const pt=(e,t=[])=>{H(e)?e.forEach(n=>n(...t)):e&&e(...t)},Sr=e=>e?H(e)?e.some(t=>t.length>1):e.length>1:!1;function Cc(e){const t={};for(const I in e)I in ii||(t[I]=e[I]);if(e.css===!1)return t;const{name:n=\"v\",type:s,duration:r,enterFromClass:o=`${n}-enter-from`,enterActiveClass:i=`${n}-enter-active`,enterToClass:c=`${n}-enter-to`,appearFromClass:l=o,appearActiveClass:d=i,appearToClass:a=c,leaveFromClass:h=`${n}-leave-from`,leaveActiveClass:p=`${n}-leave-active`,leaveToClass:m=`${n}-leave-to`}=e,x=Sc(r),A=x&&x[0],L=x&&x[1],{onBeforeEnter:O,onEnter:F,onEnterCancelled:B,onLeave:D,onLeaveCancelled:z,onBeforeAppear:$=O,onAppear:ne=F,onAppearCancelled:j=B}=t,ee=(I,G,pe)=>{gt(I,G?a:c),gt(I,G?d:i),pe&&pe()},q=(I,G)=>{I._isLeaving=!1,gt(I,h),gt(I,m),gt(I,p),G&&G()},re=I=>(G,pe)=>{const Me=I?ne:F,se=()=>ee(G,I,pe);pt(Me,[G,se]),Rr(()=>{gt(G,I?l:o),tt(G,I?a:c),Sr(Me)||Ar(G,s,A,se)})};return he(t,{onBeforeEnter(I){pt(O,[I]),tt(I,o),tt(I,i)},onBeforeAppear(I){pt($,[I]),tt(I,l),tt(I,d)},onEnter:re(!1),onAppear:re(!0),onLeave(I,G){I._isLeaving=!0;const pe=()=>q(I,G);tt(I,h),Tc(),tt(I,p),Rr(()=>{I._isLeaving&&(gt(I,h),tt(I,m),Sr(D)||Ar(I,s,L,pe))}),pt(D,[I,pe])},onEnterCancelled(I){ee(I,!1),pt(B,[I])},onAppearCancelled(I){ee(I,!0),pt(j,[I])},onLeaveCancelled(I){q(I),pt(z,[I])}})}function Sc(e){if(e==null)return null;if(ue(e))return[ts(e.enter),ts(e.leave)];{const t=ts(e);return[t,t]}}function ts(e){return Ai(e)}function tt(e,t){t.split(/\\s+/).forEach(n=>n&&e.classList.add(n)),(e[nn]||(e[nn]=new Set)).add(t)}function gt(e,t){t.split(/\\s+/).forEach(s=>s&&e.classList.remove(s));const n=e[nn];n&&(n.delete(t),n.size||(e[nn]=void 0))}function Rr(e){requestAnimationFrame(()=>{requestAnimationFrame(e)})}let Rc=0;function Ar(e,t,n,s){const r=e._endId=++Rc,o=()=>{r===e._endId&&s()};if(n)return setTimeout(o,n);const{type:i,timeout:c,propCount:l}=Ac(e,t);if(!i)return s();const d=i+\"end\";let a=0;const h=()=>{e.removeEventListener(d,p),o()},p=m=>{m.target===e&&++a>=l&&h()};setTimeout(()=>{a<l&&h()},c+1),e.addEventListener(d,p)}function Ac(e,t){const n=window.getComputedStyle(e),s=x=>(n[x]||\"\").split(\", \"),r=s(`${et}Delay`),o=s(`${et}Duration`),i=Tr(r,o),c=s(`${Ht}Delay`),l=s(`${Ht}Duration`),d=Tr(c,l);let a=null,h=0,p=0;t===et?i>0&&(a=et,h=i,p=o.length):t===Ht?d>0&&(a=Ht,h=d,p=l.length):(h=Math.max(i,d),a=h>0?i>d?et:Ht:null,p=a?a===et?o.length:l.length:0);const m=a===et&&/\\b(transform|all)(,|$)/.test(s(`${et}Property`).toString());return{type:a,timeout:h,propCount:p,hasTransform:m}}function Tr(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max(...t.map((n,s)=>Pr(n)+Pr(e[s])))}function Pr(e){return e===\"auto\"?0:Number(e.slice(0,-1).replace(\",\",\".\"))*1e3}function Tc(){return document.body.offsetHeight}function Pc(e,t,n){const s=e[nn];s&&(t=(t?[t,...s]:[...s]).join(\" \")),t==null?e.removeAttribute(\"class\"):n?e.setAttribute(\"class\",t):e.className=t}const Or=Symbol(\"_vod\"),Oc=Symbol(\"_vsh\"),li=Symbol(\"\");function Ic(e){const t=si();if(!t)return;const n=t.ut=(r=e(t.proxy))=>{Array.from(document.querySelectorAll(`[data-v-owner=\"${t.uid}\"]`)).forEach(o=>Es(o,r))},s=()=>{const r=e(t.proxy);bs(t.subTree,r),n(r)};Sl(s),Hn(()=>{const r=new MutationObserver(s);r.observe(t.subTree.el.parentNode,{childList:!0}),jn(()=>r.disconnect())})}function bs(e,t){if(e.shapeFlag&128){const n=e.suspense;e=n.activeBranch,n.pendingBranch&&!n.isHydrating&&n.effects.push(()=>{bs(n.activeBranch,t)})}for(;e.component;)e=e.component.subTree;if(e.shapeFlag&1&&e.el)Es(e.el,t);else if(e.type===Pe)e.children.forEach(n=>bs(n,t));else if(e.type===Gt){let{el:n,anchor:s}=e;for(;n&&(Es(n,t),n!==s);)n=n.nextSibling}}function Es(e,t){if(e.nodeType===1){const n=e.style;let s=\"\";for(const r in t)n.setProperty(`--${r}`,t[r]),s+=`--${r}: ${t[r]};`;n[li]=s}}const Mc=/(^|;)\\s*display\\s*:/;function Lc(e,t,n){const s=e.style,r=de(n);let o=!1;if(n&&!r){if(t)if(de(t))for(const i of t.split(\";\")){const c=i.slice(0,i.indexOf(\":\")).trim();n[c]==null&&yn(s,c,\"\")}else for(const i in t)n[i]==null&&yn(s,i,\"\");for(const i in n)i===\"display\"&&(o=!0),yn(s,i,n[i])}else if(r){if(t!==n){const i=s[li];i&&(n+=\";\"+i),s.cssText=n,o=Mc.test(n)}}else t&&e.removeAttribute(\"style\");Or in e&&(e[Or]=o?s.display:\"\",e[Oc]&&(s.display=\"none\"))}const Ir=/\\s*!important$/;function yn(e,t,n){if(H(n))n.forEach(s=>yn(e,t,s));else if(n==null&&(n=\"\"),t.startsWith(\"--\"))e.setProperty(t,n);else{const s=$c(e,t);Ir.test(n)?e.setProperty(kt(s),n.replace(Ir,\"\"),\"important\"):e[s]=n}}const Mr=[\"Webkit\",\"Moz\",\"ms\"],ns={};function $c(e,t){const n=ns[t];if(n)return n;let s=qe(t);if(s!==\"filter\"&&s in e)return ns[t]=s;s=In(s);for(let r=0;r<Mr.length;r++){const o=Mr[r]+s;if(o in e)return ns[t]=o}return t}const Lr=\"http://www.w3.org/1999/xlink\";function Nc(e,t,n,s,r){if(s&&t.startsWith(\"xlink:\"))n==null?e.removeAttributeNS(Lr,t.slice(6,t.length)):e.setAttributeNS(Lr,t,n);else{const o=Li(t);n==null||o&&!lo(n)?e.removeAttribute(t):e.setAttribute(t,o?\"\":n)}}function Fc(e,t,n,s,r,o,i){if(t===\"innerHTML\"||t===\"textContent\"){s&&i(s,r,o),e[t]=n??\"\";return}const c=e.tagName;if(t===\"value\"&&c!==\"PROGRESS\"&&!c.includes(\"-\")){const d=c===\"OPTION\"?e.getAttribute(\"value\")||\"\":e.value,a=n??\"\";(d!==a||!(\"_value\"in e))&&(e.value=a),n==null&&e.removeAttribute(t),e._value=n;return}let l=!1;if(n===\"\"||n==null){const d=typeof e[t];d===\"boolean\"?n=lo(n):n==null&&d===\"string\"?(n=\"\",l=!0):d===\"number\"&&(n=0,l=!0)}try{e[t]=n}catch{}l&&e.removeAttribute(t)}function kc(e,t,n,s){e.addEventListener(t,n,s)}function Bc(e,t,n,s){e.removeEventListener(t,n,s)}const $r=Symbol(\"_vei\");function Hc(e,t,n,s,r=null){const o=e[$r]||(e[$r]={}),i=o[t];if(s&&i)i.value=s;else{const[c,l]=jc(t);if(s){const d=o[t]=Dc(s,r);kc(e,c,d,l)}else i&&(Bc(e,c,i,l),o[t]=void 0)}}const Nr=/(?:Once|Passive|Capture)$/;function jc(e){let t;if(Nr.test(e)){t={};let s;for(;s=e.match(Nr);)e=e.slice(0,e.length-s[0].length),t[s[0].toLowerCase()]=!0}return[e[2]===\":\"?e.slice(3):kt(e.slice(2)),t]}let ss=0;const Vc=Promise.resolve(),Uc=()=>ss||(Vc.then(()=>ss=0),ss=Date.now());function Dc(e,t){const n=s=>{if(!s._vts)s._vts=Date.now();else if(s._vts<=n.attached)return;$e(Kc(s,n.value),t,5,[s])};return n.value=e,n.attached=Uc(),n}function Kc(e,t){if(H(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},t.map(s=>r=>!r._stopped&&s&&s(r))}else return t}const Fr=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&e.charCodeAt(2)>96&&e.charCodeAt(2)<123,Wc=(e,t,n,s,r,o,i,c,l)=>{const d=r===\"svg\";t===\"class\"?Pc(e,s,d):t===\"style\"?Lc(e,n,s):Tn(t)?Rs(t)||Hc(e,t,n,s,i):(t[0]===\".\"?(t=t.slice(1),!0):t[0]===\"^\"?(t=t.slice(1),!1):qc(e,t,s,d))?Fc(e,t,s,o,i,c,l):(t===\"true-value\"?e._trueValue=s:t===\"false-value\"&&(e._falseValue=s),Nc(e,t,s,d))};function qc(e,t,n,s){if(s)return!!(t===\"innerHTML\"||t===\"textContent\"||t in e&&Fr(t)&&K(n));if(t===\"spellcheck\"||t===\"draggable\"||t===\"translate\"||t===\"form\"||t===\"list\"&&e.tagName===\"INPUT\"||t===\"type\"&&e.tagName===\"TEXTAREA\")return!1;if(t===\"width\"||t===\"height\"){const r=e.tagName;if(r===\"IMG\"||r===\"VIDEO\"||r===\"CANVAS\"||r===\"SOURCE\")return!1}return Fr(t)&&de(n)?!1:t in e}const zc=he({patchProp:Wc},xc);let kr;function Gc(){return kr||(kr=Zl(zc))}const Qc=(...e)=>{const t=Gc().createApp(...e),{mount:n}=t;return t.mount=s=>{const r=Jc(s);if(!r)return;const o=t._component;!K(o)&&!o.render&&!o.template&&(o.template=r.innerHTML),r.innerHTML=\"\";const i=n(r,!1,Yc(r));return r instanceof Element&&(r.removeAttribute(\"v-cloak\"),r.setAttribute(\"data-v-app\",\"\")),i},t};function Yc(e){if(e instanceof SVGElement)return\"svg\";if(typeof MathMLElement==\"function\"&&e instanceof MathMLElement)return\"mathml\"}function Jc(e){return de(e)?document.querySelector(e):e}/*!\n  * vue-router v4.3.0\n  * (c) 2024 Eduardo San Martin Morote\n  * @license MIT\n  */const Rt=typeof document<\"u\";function Xc(e){return e.__esModule||e[Symbol.toStringTag]===\"Module\"}const Z=Object.assign;function rs(e,t){const n={};for(const s in t){const r=t[s];n[s]=je(r)?r.map(e):e(r)}return n}const Yt=()=>{},je=Array.isArray,ci=/#/g,Zc=/&/g,eu=/\\//g,tu=/=/g,nu=/\\?/g,ui=/\\+/g,su=/%5B/g,ru=/%5D/g,ai=/%5E/g,ou=/%60/g,fi=/%7B/g,iu=/%7C/g,di=/%7D/g,lu=/%20/g;function Gs(e){return encodeURI(\"\"+e).replace(iu,\"|\").replace(su,\"[\").replace(ru,\"]\")}function cu(e){return Gs(e).replace(fi,\"{\").replace(di,\"}\").replace(ai,\"^\")}function ws(e){return Gs(e).replace(ui,\"%2B\").replace(lu,\"+\").replace(ci,\"%23\").replace(Zc,\"%26\").replace(ou,\"`\").replace(fi,\"{\").replace(di,\"}\").replace(ai,\"^\")}function uu(e){return ws(e).replace(tu,\"%3D\")}function au(e){return Gs(e).replace(ci,\"%23\").replace(nu,\"%3F\")}function fu(e){return e==null?\"\":au(e).replace(eu,\"%2F\")}function sn(e){try{return decodeURIComponent(\"\"+e)}catch{}return\"\"+e}const du=/\\/$/,hu=e=>e.replace(du,\"\");function os(e,t,n=\"/\"){let s,r={},o=\"\",i=\"\";const c=t.indexOf(\"#\");let l=t.indexOf(\"?\");return c<l&&c>=0&&(l=-1),l>-1&&(s=t.slice(0,l),o=t.slice(l+1,c>-1?c:t.length),r=e(o)),c>-1&&(s=s||t.slice(0,c),i=t.slice(c,t.length)),s=_u(s??t,n),{fullPath:s+(o&&\"?\")+o+i,path:s,query:r,hash:sn(i)}}function pu(e,t){const n=t.query?e(t.query):\"\";return t.path+(n&&\"?\")+n+(t.hash||\"\")}function Br(e,t){return!t||!e.toLowerCase().startsWith(t.toLowerCase())?e:e.slice(t.length)||\"/\"}function gu(e,t,n){const s=t.matched.length-1,r=n.matched.length-1;return s>-1&&s===r&&$t(t.matched[s],n.matched[r])&&hi(t.params,n.params)&&e(t.query)===e(n.query)&&t.hash===n.hash}function $t(e,t){return(e.aliasOf||e)===(t.aliasOf||t)}function hi(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(const n in e)if(!mu(e[n],t[n]))return!1;return!0}function mu(e,t){return je(e)?Hr(e,t):je(t)?Hr(t,e):e===t}function Hr(e,t){return je(t)?e.length===t.length&&e.every((n,s)=>n===t[s]):e.length===1&&e[0]===t}function _u(e,t){if(e.startsWith(\"/\"))return e;if(!e)return t;const n=t.split(\"/\"),s=e.split(\"/\"),r=s[s.length-1];(r===\"..\"||r===\".\")&&s.push(\"\");let o=n.length-1,i,c;for(i=0;i<s.length;i++)if(c=s[i],c!==\".\")if(c===\"..\")o>1&&o--;else break;return n.slice(0,o).join(\"/\")+\"/\"+s.slice(i).join(\"/\")}var rn;(function(e){e.pop=\"pop\",e.push=\"push\"})(rn||(rn={}));var Jt;(function(e){e.back=\"back\",e.forward=\"forward\",e.unknown=\"\"})(Jt||(Jt={}));function vu(e){if(!e)if(Rt){const t=document.querySelector(\"base\");e=t&&t.getAttribute(\"href\")||\"/\",e=e.replace(/^\\w+:\\/\\/[^\\/]+/,\"\")}else e=\"/\";return e[0]!==\"/\"&&e[0]!==\"#\"&&(e=\"/\"+e),hu(e)}const yu=/^[^#]+#/;function bu(e,t){return e.replace(yu,\"#\")+t}function Eu(e,t){const n=document.documentElement.getBoundingClientRect(),s=e.getBoundingClientRect();return{behavior:t.behavior,left:s.left-n.left-(t.left||0),top:s.top-n.top-(t.top||0)}}const Kn=()=>({left:window.scrollX,top:window.scrollY});function wu(e){let t;if(\"el\"in e){const n=e.el,s=typeof n==\"string\"&&n.startsWith(\"#\"),r=typeof n==\"string\"?s?document.getElementById(n.slice(1)):document.querySelector(n):n;if(!r)return;t=Eu(r,e)}else t=e;\"scrollBehavior\"in document.documentElement.style?window.scrollTo(t):window.scrollTo(t.left!=null?t.left:window.scrollX,t.top!=null?t.top:window.scrollY)}function jr(e,t){return(history.state?history.state.position-t:-1)+e}const xs=new Map;function xu(e,t){xs.set(e,t)}function Cu(e){const t=xs.get(e);return xs.delete(e),t}let Su=()=>location.protocol+\"//\"+location.host;function pi(e,t){const{pathname:n,search:s,hash:r}=t,o=e.indexOf(\"#\");if(o>-1){let c=r.includes(e.slice(o))?e.slice(o).length:1,l=r.slice(c);return l[0]!==\"/\"&&(l=\"/\"+l),Br(l,\"\")}return Br(n,e)+s+r}function Ru(e,t,n,s){let r=[],o=[],i=null;const c=({state:p})=>{const m=pi(e,location),x=n.value,A=t.value;let L=0;if(p){if(n.value=m,t.value=p,i&&i===x){i=null;return}L=A?p.position-A.position:0}else s(m);r.forEach(O=>{O(n.value,x,{delta:L,type:rn.pop,direction:L?L>0?Jt.forward:Jt.back:Jt.unknown})})};function l(){i=n.value}function d(p){r.push(p);const m=()=>{const x=r.indexOf(p);x>-1&&r.splice(x,1)};return o.push(m),m}function a(){const{history:p}=window;p.state&&p.replaceState(Z({},p.state,{scroll:Kn()}),\"\")}function h(){for(const p of o)p();o=[],window.removeEventListener(\"popstate\",c),window.removeEventListener(\"beforeunload\",a)}return window.addEventListener(\"popstate\",c),window.addEventListener(\"beforeunload\",a,{passive:!0}),{pauseListeners:l,listen:d,destroy:h}}function Vr(e,t,n,s=!1,r=!1){return{back:e,current:t,forward:n,replaced:s,position:window.history.length,scroll:r?Kn():null}}function Au(e){const{history:t,location:n}=window,s={value:pi(e,n)},r={value:t.state};r.value||o(s.value,{back:null,current:s.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0);function o(l,d,a){const h=e.indexOf(\"#\"),p=h>-1?(n.host&&document.querySelector(\"base\")?e:e.slice(h))+l:Su()+e+l;try{t[a?\"replaceState\":\"pushState\"](d,\"\",p),r.value=d}catch(m){console.error(m),n[a?\"replace\":\"assign\"](p)}}function i(l,d){const a=Z({},t.state,Vr(r.value.back,l,r.value.forward,!0),d,{position:r.value.position});o(l,a,!0),s.value=l}function c(l,d){const a=Z({},r.value,t.state,{forward:l,scroll:Kn()});o(a.current,a,!0);const h=Z({},Vr(s.value,l,null),{position:a.position+1},d);o(l,h,!1),s.value=l}return{location:s,state:r,push:c,replace:i}}function Tu(e){e=vu(e);const t=Au(e),n=Ru(e,t.state,t.location,t.replace);function s(o,i=!0){i||n.pauseListeners(),history.go(o)}const r=Z({location:\"\",base:e,go:s,createHref:bu.bind(null,e)},t,n);return Object.defineProperty(r,\"location\",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(r,\"state\",{enumerable:!0,get:()=>t.state.value}),r}function Pu(e){return typeof e==\"string\"||e&&typeof e==\"object\"}function gi(e){return typeof e==\"string\"||typeof e==\"symbol\"}const nt={path:\"/\",name:void 0,params:{},query:{},hash:\"\",fullPath:\"/\",matched:[],meta:{},redirectedFrom:void 0},mi=Symbol(\"\");var Ur;(function(e){e[e.aborted=4]=\"aborted\",e[e.cancelled=8]=\"cancelled\",e[e.duplicated=16]=\"duplicated\"})(Ur||(Ur={}));function Nt(e,t){return Z(new Error,{type:e,[mi]:!0},t)}function Qe(e,t){return e instanceof Error&&mi in e&&(t==null||!!(e.type&t))}const Dr=\"[^/]+?\",Ou={sensitive:!1,strict:!1,start:!0,end:!0},Iu=/[.+*?^${}()[\\]/\\\\]/g;function Mu(e,t){const n=Z({},Ou,t),s=[];let r=n.start?\"^\":\"\";const o=[];for(const d of e){const a=d.length?[]:[90];n.strict&&!d.length&&(r+=\"/\");for(let h=0;h<d.length;h++){const p=d[h];let m=40+(n.sensitive?.25:0);if(p.type===0)h||(r+=\"/\"),r+=p.value.replace(Iu,\"\\\\$&\"),m+=40;else if(p.type===1){const{value:x,repeatable:A,optional:L,regexp:O}=p;o.push({name:x,repeatable:A,optional:L});const F=O||Dr;if(F!==Dr){m+=10;try{new RegExp(`(${F})`)}catch(D){throw new Error(`Invalid custom RegExp for param \"${x}\" (${F}): `+D.message)}}let B=A?`((?:${F})(?:/(?:${F}))*)`:`(${F})`;h||(B=L&&d.length<2?`(?:/${B})`:\"/\"+B),L&&(B+=\"?\"),r+=B,m+=20,L&&(m+=-8),A&&(m+=-20),F===\".*\"&&(m+=-50)}a.push(m)}s.push(a)}if(n.strict&&n.end){const d=s.length-1;s[d][s[d].length-1]+=.7000000000000001}n.strict||(r+=\"/?\"),n.end?r+=\"$\":n.strict&&(r+=\"(?:/|$)\");const i=new RegExp(r,n.sensitive?\"\":\"i\");function c(d){const a=d.match(i),h={};if(!a)return null;for(let p=1;p<a.length;p++){const m=a[p]||\"\",x=o[p-1];h[x.name]=m&&x.repeatable?m.split(\"/\"):m}return h}function l(d){let a=\"\",h=!1;for(const p of e){(!h||!a.endsWith(\"/\"))&&(a+=\"/\"),h=!1;for(const m of p)if(m.type===0)a+=m.value;else if(m.type===1){const{value:x,repeatable:A,optional:L}=m,O=x in d?d[x]:\"\";if(je(O)&&!A)throw new Error(`Provided param \"${x}\" is an array but it is not repeatable (* or + modifiers)`);const F=je(O)?O.join(\"/\"):O;if(!F)if(L)p.length<2&&(a.endsWith(\"/\")?a=a.slice(0,-1):h=!0);else throw new Error(`Missing required param \"${x}\"`);a+=F}}return a||\"/\"}return{re:i,score:s,keys:o,parse:c,stringify:l}}function Lu(e,t){let n=0;for(;n<e.length&&n<t.length;){const s=t[n]-e[n];if(s)return s;n++}return e.length<t.length?e.length===1&&e[0]===40+40?-1:1:e.length>t.length?t.length===1&&t[0]===40+40?1:-1:0}function $u(e,t){let n=0;const s=e.score,r=t.score;for(;n<s.length&&n<r.length;){const o=Lu(s[n],r[n]);if(o)return o;n++}if(Math.abs(r.length-s.length)===1){if(Kr(s))return 1;if(Kr(r))return-1}return r.length-s.length}function Kr(e){const t=e[e.length-1];return e.length>0&&t[t.length-1]<0}const Nu={type:0,value:\"\"},Fu=/[a-zA-Z0-9_]/;function ku(e){if(!e)return[[]];if(e===\"/\")return[[Nu]];if(!e.startsWith(\"/\"))throw new Error(`Invalid path \"${e}\"`);function t(m){throw new Error(`ERR (${n})/\"${d}\": ${m}`)}let n=0,s=n;const r=[];let o;function i(){o&&r.push(o),o=[]}let c=0,l,d=\"\",a=\"\";function h(){d&&(n===0?o.push({type:0,value:d}):n===1||n===2||n===3?(o.length>1&&(l===\"*\"||l===\"+\")&&t(`A repeatable param (${d}) must be alone in its segment. eg: '/:ids+.`),o.push({type:1,value:d,regexp:a,repeatable:l===\"*\"||l===\"+\",optional:l===\"*\"||l===\"?\"})):t(\"Invalid state to consume buffer\"),d=\"\")}function p(){d+=l}for(;c<e.length;){if(l=e[c++],l===\"\\\\\"&&n!==2){s=n,n=4;continue}switch(n){case 0:l===\"/\"?(d&&h(),i()):l===\":\"?(h(),n=1):p();break;case 4:p(),n=s;break;case 1:l===\"(\"?n=2:Fu.test(l)?p():(h(),n=0,l!==\"*\"&&l!==\"?\"&&l!==\"+\"&&c--);break;case 2:l===\")\"?a[a.length-1]==\"\\\\\"?a=a.slice(0,-1)+l:n=3:a+=l;break;case 3:h(),n=0,l!==\"*\"&&l!==\"?\"&&l!==\"+\"&&c--,a=\"\";break;default:t(\"Unknown state\");break}}return n===2&&t(`Unfinished custom RegExp for param \"${d}\"`),h(),i(),r}function Bu(e,t,n){const s=Mu(ku(e.path),n),r=Z(s,{record:e,parent:t,children:[],alias:[]});return t&&!r.record.aliasOf==!t.record.aliasOf&&t.children.push(r),r}function Hu(e,t){const n=[],s=new Map;t=zr({strict:!1,end:!0,sensitive:!1},t);function r(a){return s.get(a)}function o(a,h,p){const m=!p,x=ju(a);x.aliasOf=p&&p.record;const A=zr(t,a),L=[x];if(\"alias\"in a){const B=typeof a.alias==\"string\"?[a.alias]:a.alias;for(const D of B)L.push(Z({},x,{components:p?p.record.components:x.components,path:D,aliasOf:p?p.record:x}))}let O,F;for(const B of L){const{path:D}=B;if(h&&D[0]!==\"/\"){const z=h.record.path,$=z[z.length-1]===\"/\"?\"\":\"/\";B.path=h.record.path+(D&&$+D)}if(O=Bu(B,h,A),p?p.alias.push(O):(F=F||O,F!==O&&F.alias.push(O),m&&a.name&&!qr(O)&&i(a.name)),x.children){const z=x.children;for(let $=0;$<z.length;$++)o(z[$],O,p&&p.children[$])}p=p||O,(O.record.components&&Object.keys(O.record.components).length||O.record.name||O.record.redirect)&&l(O)}return F?()=>{i(F)}:Yt}function i(a){if(gi(a)){const h=s.get(a);h&&(s.delete(a),n.splice(n.indexOf(h),1),h.children.forEach(i),h.alias.forEach(i))}else{const h=n.indexOf(a);h>-1&&(n.splice(h,1),a.record.name&&s.delete(a.record.name),a.children.forEach(i),a.alias.forEach(i))}}function c(){return n}function l(a){let h=0;for(;h<n.length&&$u(a,n[h])>=0&&(a.record.path!==n[h].record.path||!_i(a,n[h]));)h++;n.splice(h,0,a),a.record.name&&!qr(a)&&s.set(a.record.name,a)}function d(a,h){let p,m={},x,A;if(\"name\"in a&&a.name){if(p=s.get(a.name),!p)throw Nt(1,{location:a});A=p.record.name,m=Z(Wr(h.params,p.keys.filter(F=>!F.optional).concat(p.parent?p.parent.keys.filter(F=>F.optional):[]).map(F=>F.name)),a.params&&Wr(a.params,p.keys.map(F=>F.name))),x=p.stringify(m)}else if(a.path!=null)x=a.path,p=n.find(F=>F.re.test(x)),p&&(m=p.parse(x),A=p.record.name);else{if(p=h.name?s.get(h.name):n.find(F=>F.re.test(h.path)),!p)throw Nt(1,{location:a,currentLocation:h});A=p.record.name,m=Z({},h.params,a.params),x=p.stringify(m)}const L=[];let O=p;for(;O;)L.unshift(O.record),O=O.parent;return{name:A,path:x,params:m,matched:L,meta:Uu(L)}}return e.forEach(a=>o(a)),{addRoute:o,resolve:d,removeRoute:i,getRoutes:c,getRecordMatcher:r}}function Wr(e,t){const n={};for(const s of t)s in e&&(n[s]=e[s]);return n}function ju(e){return{path:e.path,redirect:e.redirect,name:e.name,meta:e.meta||{},aliasOf:void 0,beforeEnter:e.beforeEnter,props:Vu(e),children:e.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:\"components\"in e?e.components||null:e.component&&{default:e.component}}}function Vu(e){const t={},n=e.props||!1;if(\"component\"in e)t.default=n;else for(const s in e.components)t[s]=typeof n==\"object\"?n[s]:n;return t}function qr(e){for(;e;){if(e.record.aliasOf)return!0;e=e.parent}return!1}function Uu(e){return e.reduce((t,n)=>Z(t,n.meta),{})}function zr(e,t){const n={};for(const s in e)n[s]=s in t?t[s]:e[s];return n}function _i(e,t){return t.children.some(n=>n===e||_i(e,n))}function Du(e){const t={};if(e===\"\"||e===\"?\")return t;const s=(e[0]===\"?\"?e.slice(1):e).split(\"&\");for(let r=0;r<s.length;++r){const o=s[r].replace(ui,\" \"),i=o.indexOf(\"=\"),c=sn(i<0?o:o.slice(0,i)),l=i<0?null:sn(o.slice(i+1));if(c in t){let d=t[c];je(d)||(d=t[c]=[d]),d.push(l)}else t[c]=l}return t}function Gr(e){let t=\"\";for(let n in e){const s=e[n];if(n=uu(n),s==null){s!==void 0&&(t+=(t.length?\"&\":\"\")+n);continue}(je(s)?s.map(o=>o&&ws(o)):[s&&ws(s)]).forEach(o=>{o!==void 0&&(t+=(t.length?\"&\":\"\")+n,o!=null&&(t+=\"=\"+o))})}return t}function Ku(e){const t={};for(const n in e){const s=e[n];s!==void 0&&(t[n]=je(s)?s.map(r=>r==null?null:\"\"+r):s==null?s:\"\"+s)}return t}const Wu=Symbol(\"\"),Qr=Symbol(\"\"),Wn=Symbol(\"\"),Qs=Symbol(\"\"),Cs=Symbol(\"\");function jt(){let e=[];function t(s){return e.push(s),()=>{const r=e.indexOf(s);r>-1&&e.splice(r,1)}}function n(){e=[]}return{add:t,list:()=>e.slice(),reset:n}}function lt(e,t,n,s,r,o=i=>i()){const i=s&&(s.enterCallbacks[r]=s.enterCallbacks[r]||[]);return()=>new Promise((c,l)=>{const d=p=>{p===!1?l(Nt(4,{from:n,to:t})):p instanceof Error?l(p):Pu(p)?l(Nt(2,{from:t,to:p})):(i&&s.enterCallbacks[r]===i&&typeof p==\"function\"&&i.push(p),c())},a=o(()=>e.call(s&&s.instances[r],t,n,d));let h=Promise.resolve(a);e.length<3&&(h=h.then(d)),h.catch(p=>l(p))})}function is(e,t,n,s,r=o=>o()){const o=[];for(const i of e)for(const c in i.components){let l=i.components[c];if(!(t!==\"beforeRouteEnter\"&&!i.instances[c]))if(qu(l)){const a=(l.__vccOpts||l)[t];a&&o.push(lt(a,n,s,i,c,r))}else{let d=l();o.push(()=>d.then(a=>{if(!a)return Promise.reject(new Error(`Couldn't resolve component \"${c}\" at \"${i.path}\"`));const h=Xc(a)?a.default:a;i.components[c]=h;const m=(h.__vccOpts||h)[t];return m&&lt(m,n,s,i,c,r)()}))}}return o}function qu(e){return typeof e==\"object\"||\"displayName\"in e||\"props\"in e||\"__vccOpts\"in e}function Yr(e){const t=He(Wn),n=He(Qs),s=me(()=>t.resolve(ae(e.to))),r=me(()=>{const{matched:l}=s.value,{length:d}=l,a=l[d-1],h=n.matched;if(!a||!h.length)return-1;const p=h.findIndex($t.bind(null,a));if(p>-1)return p;const m=Jr(l[d-2]);return d>1&&Jr(a)===m&&h[h.length-1].path!==m?h.findIndex($t.bind(null,l[d-2])):p}),o=me(()=>r.value>-1&&Yu(n.params,s.value.params)),i=me(()=>r.value>-1&&r.value===n.matched.length-1&&hi(n.params,s.value.params));function c(l={}){return Qu(l)?t[ae(e.replace)?\"replace\":\"push\"](ae(e.to)).catch(Yt):Promise.resolve()}return{route:s,href:me(()=>s.value.href),isActive:o,isExactActive:i,navigate:c}}const zu=ze({name:\"RouterLink\",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:\"page\"}},useLink:Yr,setup(e,{slots:t}){const n=on(Yr(e)),{options:s}=He(Wn),r=me(()=>({[Xr(e.activeClass,s.linkActiveClass,\"router-link-active\")]:n.isActive,[Xr(e.exactActiveClass,s.linkExactActiveClass,\"router-link-exact-active\")]:n.isExactActive}));return()=>{const o=t.default&&t.default(n);return e.custom?o:qs(\"a\",{\"aria-current\":n.isExactActive?e.ariaCurrentValue:null,href:n.href,onClick:n.navigate,class:r.value},o)}}}),Gu=zu;function Qu(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&!e.defaultPrevented&&!(e.button!==void 0&&e.button!==0)){if(e.currentTarget&&e.currentTarget.getAttribute){const t=e.currentTarget.getAttribute(\"target\");if(/\\b_blank\\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function Yu(e,t){for(const n in t){const s=t[n],r=e[n];if(typeof s==\"string\"){if(s!==r)return!1}else if(!je(r)||r.length!==s.length||s.some((o,i)=>o!==r[i]))return!1}return!0}function Jr(e){return e?e.aliasOf?e.aliasOf.path:e.path:\"\"}const Xr=(e,t,n)=>e??t??n,Ju=ze({name:\"RouterView\",inheritAttrs:!1,props:{name:{type:String,default:\"default\"},route:Object},compatConfig:{MODE:3},setup(e,{attrs:t,slots:n}){const s=He(Cs),r=me(()=>e.route||s.value),o=He(Qr,0),i=me(()=>{let d=ae(o);const{matched:a}=r.value;let h;for(;(h=a[d])&&!h.components;)d++;return d}),c=me(()=>r.value.matched[i.value]);_n(Qr,me(()=>i.value+1)),_n(Wu,c),_n(Cs,r);const l=Te();return Kt(()=>[l.value,c.value,e.name],([d,a,h],[p,m,x])=>{a&&(a.instances[h]=d,m&&m!==a&&d&&d===p&&(a.leaveGuards.size||(a.leaveGuards=m.leaveGuards),a.updateGuards.size||(a.updateGuards=m.updateGuards))),d&&a&&(!m||!$t(a,m)||!p)&&(a.enterCallbacks[h]||[]).forEach(A=>A(d))},{flush:\"post\"}),()=>{const d=r.value,a=e.name,h=c.value,p=h&&h.components[a];if(!p)return Zr(n.default,{Component:p,route:d});const m=h.props[a],x=m?m===!0?d.params:typeof m==\"function\"?m(d):m:null,L=qs(p,Z({},x,t,{onVnodeUnmounted:O=>{O.component.isUnmounted&&(h.instances[a]=null)},ref:l}));return Zr(n.default,{Component:L,route:d})||L}}});function Zr(e,t){if(!e)return null;const n=e(t);return n.length===1?n[0]:n}const vi=Ju;function Xu(e){const t=Hu(e.routes,e),n=e.parseQuery||Du,s=e.stringifyQuery||Gr,r=e.history,o=jt(),i=jt(),c=jt(),l=ol(nt);let d=nt;Rt&&e.scrollBehavior&&\"scrollRestoration\"in history&&(history.scrollRestoration=\"manual\");const a=rs.bind(null,v=>\"\"+v),h=rs.bind(null,fu),p=rs.bind(null,sn);function m(v,T){let S,M;return gi(v)?(S=t.getRecordMatcher(v),M=T):M=v,t.addRoute(M,S)}function x(v){const T=t.getRecordMatcher(v);T&&t.removeRoute(T)}function A(){return t.getRoutes().map(v=>v.record)}function L(v){return!!t.getRecordMatcher(v)}function O(v,T){if(T=Z({},T||l.value),typeof v==\"string\"){const f=os(n,v,T.path),g=t.resolve({path:f.path},T),y=r.createHref(f.fullPath);return Z(f,g,{params:p(g.params),hash:sn(f.hash),redirectedFrom:void 0,href:y})}let S;if(v.path!=null)S=Z({},v,{path:os(n,v.path,T.path).path});else{const f=Z({},v.params);for(const g in f)f[g]==null&&delete f[g];S=Z({},v,{params:h(f)}),T.params=h(T.params)}const M=t.resolve(S,T),X=v.hash||\"\";M.params=a(p(M.params));const oe=pu(s,Z({},v,{hash:cu(X),path:M.path})),u=r.createHref(oe);return Z({fullPath:oe,hash:X,query:s===Gr?Ku(v.query):v.query||{}},M,{redirectedFrom:void 0,href:u})}function F(v){return typeof v==\"string\"?os(n,v,l.value.path):Z({},v)}function B(v,T){if(d!==v)return Nt(8,{from:T,to:v})}function D(v){return ne(v)}function z(v){return D(Z(F(v),{replace:!0}))}function $(v){const T=v.matched[v.matched.length-1];if(T&&T.redirect){const{redirect:S}=T;let M=typeof S==\"function\"?S(v):S;return typeof M==\"string\"&&(M=M.includes(\"?\")||M.includes(\"#\")?M=F(M):{path:M},M.params={}),Z({query:v.query,hash:v.hash,params:M.path!=null?{}:v.params},M)}}function ne(v,T){const S=d=O(v),M=l.value,X=v.state,oe=v.force,u=v.replace===!0,f=$(S);if(f)return ne(Z(F(f),{state:typeof f==\"object\"?Z({},X,f.state):X,force:oe,replace:u}),T||S);const g=S;g.redirectedFrom=T;let y;return!oe&&gu(s,M,S)&&(y=Nt(16,{to:g,from:M}),Ve(M,M,!0,!1)),(y?Promise.resolve(y):q(g,M)).catch(_=>Qe(_)?Qe(_,2)?_:Xe(_):U(_,g,M)).then(_=>{if(_){if(Qe(_,2))return ne(Z({replace:u},F(_.to),{state:typeof _.to==\"object\"?Z({},X,_.to.state):X,force:oe}),T||g)}else _=I(g,M,!0,u,X);return re(g,M,_),_})}function j(v,T){const S=B(v,T);return S?Promise.reject(S):Promise.resolve()}function ee(v){const T=Ct.values().next().value;return T&&typeof T.runWithContext==\"function\"?T.runWithContext(v):v()}function q(v,T){let S;const[M,X,oe]=Zu(v,T);S=is(M.reverse(),\"beforeRouteLeave\",v,T);for(const f of M)f.leaveGuards.forEach(g=>{S.push(lt(g,v,T))});const u=j.bind(null,v,T);return S.push(u),ve(S).then(()=>{S=[];for(const f of o.list())S.push(lt(f,v,T));return S.push(u),ve(S)}).then(()=>{S=is(X,\"beforeRouteUpdate\",v,T);for(const f of X)f.updateGuards.forEach(g=>{S.push(lt(g,v,T))});return S.push(u),ve(S)}).then(()=>{S=[];for(const f of oe)if(f.beforeEnter)if(je(f.beforeEnter))for(const g of f.beforeEnter)S.push(lt(g,v,T));else S.push(lt(f.beforeEnter,v,T));return S.push(u),ve(S)}).then(()=>(v.matched.forEach(f=>f.enterCallbacks={}),S=is(oe,\"beforeRouteEnter\",v,T,ee),S.push(u),ve(S))).then(()=>{S=[];for(const f of i.list())S.push(lt(f,v,T));return S.push(u),ve(S)}).catch(f=>Qe(f,8)?f:Promise.reject(f))}function re(v,T,S){c.list().forEach(M=>ee(()=>M(v,T,S)))}function I(v,T,S,M,X){const oe=B(v,T);if(oe)return oe;const u=T===nt,f=Rt?history.state:{};S&&(M||u?r.replace(v.fullPath,Z({scroll:u&&f&&f.scroll},X)):r.push(v.fullPath,X)),l.value=v,Ve(v,T,S,u),Xe()}let G;function pe(){G||(G=r.listen((v,T,S)=>{if(!cn.listening)return;const M=O(v),X=$(M);if(X){ne(Z(X,{replace:!0}),M).catch(Yt);return}d=M;const oe=l.value;Rt&&xu(jr(oe.fullPath,S.delta),Kn()),q(M,oe).catch(u=>Qe(u,12)?u:Qe(u,2)?(ne(u.to,M).then(f=>{Qe(f,20)&&!S.delta&&S.type===rn.pop&&r.go(-1,!1)}).catch(Yt),Promise.reject()):(S.delta&&r.go(-S.delta,!1),U(u,M,oe))).then(u=>{u=u||I(M,oe,!1),u&&(S.delta&&!Qe(u,8)?r.go(-S.delta,!1):S.type===rn.pop&&Qe(u,20)&&r.go(-1,!1)),re(M,oe,u)}).catch(Yt)}))}let Me=jt(),se=jt(),J;function U(v,T,S){Xe(v);const M=se.list();return M.length?M.forEach(X=>X(v,T,S)):console.error(v),Promise.reject(v)}function Ge(){return J&&l.value!==nt?Promise.resolve():new Promise((v,T)=>{Me.add([v,T])})}function Xe(v){return J||(J=!v,pe(),Me.list().forEach(([T,S])=>v?S(v):T()),Me.reset()),v}function Ve(v,T,S,M){const{scrollBehavior:X}=e;if(!Rt||!X)return Promise.resolve();const oe=!S&&Cu(jr(v.fullPath,0))||(M||!S)&&history.state&&history.state.scroll||null;return ks().then(()=>X(v,T,oe)).then(u=>u&&wu(u)).catch(u=>U(u,v,T))}const Ce=v=>r.go(v);let xt;const Ct=new Set,cn={currentRoute:l,listening:!0,addRoute:m,removeRoute:x,hasRoute:L,getRoutes:A,resolve:O,options:e,push:D,replace:z,go:Ce,back:()=>Ce(-1),forward:()=>Ce(1),beforeEach:o.add,beforeResolve:i.add,afterEach:c.add,onError:se.add,isReady:Ge,install(v){const T=this;v.component(\"RouterLink\",Gu),v.component(\"RouterView\",vi),v.config.globalProperties.$router=T,Object.defineProperty(v.config.globalProperties,\"$route\",{enumerable:!0,get:()=>ae(l)}),Rt&&!xt&&l.value===nt&&(xt=!0,D(r.location).catch(X=>{}));const S={};for(const X in nt)Object.defineProperty(S,X,{get:()=>l.value[X],enumerable:!0});v.provide(Wn,T),v.provide(Qs,Eo(S)),v.provide(Cs,l);const M=v.unmount;Ct.add(v),v.unmount=function(){Ct.delete(v),Ct.size<1&&(d=nt,G&&G(),G=null,l.value=nt,xt=!1,J=!1),M()}}};function ve(v){return v.reduce((T,S)=>T.then(()=>ee(S)),Promise.resolve())}return cn}function Zu(e,t){const n=[],s=[],r=[],o=Math.max(t.matched.length,e.matched.length);for(let i=0;i<o;i++){const c=t.matched[i];c&&(e.matched.find(d=>$t(d,c))?s.push(c):n.push(c));const l=e.matched[i];l&&(t.matched.find(d=>$t(d,l))||r.push(l))}return[n,s,r]}function ea(){return He(Wn)}function yi(){return He(Qs)}const ta=ze({__name:\"App\",setup(e){const t=yi();ea();let n=Te(t.meta.background),s=Te(t.meta.background);return(r,o)=>(Ie(),Lt(ae(vi),null,{default:Cn(({Component:i,route:c})=>[ye(\"div\",{class:\"main-container\",style:Mn({\"--background\":`url(${ae(n)})`,\"--fg-background\":`url(${ae(s)})`})},[ce(zs,{name:\"kk\",mode:\"out-in\",onBeforeEnter:o[0]||(o[0]=l=>{fe(n)?n.value=ae(t).meta.previousBackground:n=ae(t).meta.previousBackground,fe(s)?s.value=ae(t).meta.background:s=ae(t).meta.background}),onBeforeLeave:o[1]||(o[1]=l=>{fe(n)?n.value=ae(t).meta.previousBackground:n=ae(t).meta.previousBackground,fe(s)?s.value=ae(t).meta.background:s=ae(t).meta.background}),onAfterEnter:o[2]||(o[2]=l=>fe(n)?n.value=ae(t).meta.background:n=ae(t).meta.background)},{default:Cn(()=>[(Ie(),Lt(bl(i)))]),_:2},1024)],4)]),_:1}))}}),na=[\"src\",\"alt\",\"width\",\"height\"],Vt=ze({__name:\"MenuButton\",props:{name:{},alt:{},active:{type:Boolean},link:{},dimensions:{}},setup(e){const t=Te(!1);return(n,s)=>{const r=Fo(\"RouterLink\");return Ie(),Lt(r,{to:`/${n.link??n.name}`,class:\"menu-button\",onMousedown:s[0]||(s[0]=o=>t.value=!0),onMouseup:s[1]||(s[1]=o=>t.value=!1),onMouseleave:s[2]||(s[2]=o=>t.value=!1)},{default:Cn(()=>[ye(\"img\",{src:`/img/button/${t.value!==n.active?\"on\":\"off\"}/${n.name}.png`,alt:n.alt,width:n.dimensions?n.dimensions[0]:76,height:n.dimensions?n.dimensions[1]:20,role:\"button\"},null,8,na)]),_:1},8,[\"to\"])}}});const sa={class:\"title-box\"},ra=[\"src\",\"alt\"],oa=ye(\"p\",{class:\"tagline glow\"},\"A SILLY CAT RPG :3\",-1),ia=ye(\"div\",{class:\"divider\"},null,-1),la={class:\"main-content\"},ca={class:\"article-container\"},ua={class:\"main-article glow\"},aa={class:\"cat-container\"},fa=[\"src\"],da={class:\"button-container\"},ha={class:\"back-container\"},Ys=ze({__name:\"MainView\",props:{logo:{},logoAlt:{},current:{},text:{},cat:{},invertMenu:{type:Boolean}},setup(e){Ic(s=>({\"34784a36\":n.value}));const t=e;yi();const n=me(()=>t.invertMenu?\"row-reverse\":\"row\");return(s,r)=>{const o=Fo(\"TextBox\");return Ie(),wt(\"main\",null,[ye(\"div\",sa,[ye(\"img\",{src:s.$props.logo,width:\"176\",height:\"86\",alt:s.logoAlt},null,8,ra),oa]),ia,ye(\"section\",la,[ye(\"section\",ca,[ye(\"article\",ua,[ye(\"section\",aa,[ye(\"img\",{src:s.cat,alt:\"Cat\",width:\"79\",height:\"92\"},null,8,fa)]),ye(\"section\",da,[ce(Vt,{name:\"timeline\",alt:\"Timeline\",active:s.current===\"timeline\"},null,8,[\"active\"]),ce(Vt,{name:\"cats\",alt:\"The Cats\",active:s.current===\"cats\"},null,8,[\"active\"]),ce(Vt,{name:\"team\",alt:\"Our Team\",active:s.current===\"team\"},null,8,[\"active\"]),ce(Vt,{name:\"contact\",alt:\"Contact Us\",active:s.current===\"contact\"},null,8,[\"active\"])])])]),ce(o,{class:\"text-box\",text:s.text},null,8,[\"text\"]),ye(\"div\",ha,[s.current!==\"home\"?(Ie(),Lt(Vt,{key:0,name:\"back\",alt:\"Home\",active:s.current===\"home\",link:\"\",dimensions:[50,20]},null,8,[\"active\"])):uc(\"\",!0)])]),Vs(s.$slots,\"default\")])}}});const pa={class:\"content-wrapper\"},ga=ze({__name:\"HomeView\",setup(e){return(t,n)=>(Ie(),wt(\"div\",pa,[ce(Ys,{logo:\"/img/logo/kitgate.png\",logoAlt:\"Kitgate\",text:\"MIAUUUUUUUU\",current:\"home\",cat:\"/img/cat/m.png\"})]))}}),qn=(e,t)=>{const n=e.__vccOpts||e;for(const[s,r]of t)n[s]=r;return n},ma={};function _a(e,t){return Ie(),wt(\"h1\",null,\"todo\")}const va=qn(ma,[[\"render\",_a]]),ya={class:\"content-wrapper\"},ba=ze({__name:\"TeamView\",setup(e){return(t,n)=>(Ie(),wt(\"div\",ya,[ce(Ys,{logo:\"/img/temp/important.png\",logoAlt:\"Team\",text:\"team\",current:\"team\",cat:\"/img/temp/Untitled500_20240308193811.png\"})]))}}),Ea=\"/img/timeline/computercat.png\",wa=\"/img/timeline/masscomputercat.png\",xa=\"/img/timeline/cats.png\",Ca={class:\"content-wrapper\"},Sa=cc('<section class=\"timeline-container\" data-v-0bb57dd5><article class=\"timeline-box\" data-v-0bb57dd5><div class=\"inner-box\" data-v-0bb57dd5><section class=\"timeline-section\" data-v-0bb57dd5><div data-v-0bb57dd5><h1 data-v-0bb57dd5>DEVELOPMENT</h1><h2 class=\"special\" data-v-0bb57dd5>current phase</h2><h2 data-v-0bb57dd5>2022 - ????</h2><p data-v-0bb57dd5>meowmeo mwoemoe wmoewme owmeo mwe text here</p></div><img src=\"'+Ea+'\" alt=\"singular cat using computer\" data-v-0bb57dd5></section><section class=\"timeline-section\" data-v-0bb57dd5><img src=\"'+wa+'\" alt=\"multiple cats using computer\" data-v-0bb57dd5><div data-v-0bb57dd5><h1 data-v-0bb57dd5>DEMO + KICKSTARTER</h1><h2 data-v-0bb57dd5>???? - ????</h2><p data-v-0bb57dd5>me owmeom woemoew moewme owme omwe text here</p></div></section><section class=\"timeline-section\" data-v-0bb57dd5><div data-v-0bb57dd5><h1 data-v-0bb57dd5>PUBLIC LAUNCH</h1><h2 data-v-0bb57dd5>???? - ????</h2><p data-v-0bb57dd5>meow meomw oemo ewmo ewmeowm eomwe text here</p></div><img class=\"large\" src=\"'+xa+'\" alt=\"cats along with one wielding a pickaxe\" data-v-0bb57dd5><div class=\"image-spacer\" data-v-0bb57dd5></div></section></div></article></section>',1),Ra=ze({__name:\"TimelineView\",setup(e){return(t,n)=>(Ie(),wt(\"div\",Ca,[ce(Ys,{logo:\"/img/logo/timeline.png\",logoAlt:\"Timeline\",text:\"timeline\",current:\"timeline\",cat:\"/img/cat/b.png\",invertMenu:\"\"}),Sa]))}});const Aa=qn(Ra,[[\"__scopeId\",\"data-v-0bb57dd5\"]]),Ta={};function Pa(e,t){return Ie(),wt(\"h1\",null,\"todo\")}const Oa=qn(Ta,[[\"render\",Pa]]),bi=Xu({history:Tu(\"/\"),routes:[{path:\"/\",name:\"Kitgate\",component:ga,meta:{background:\"/img/background/home.png\"}},{path:\"/cats\",name:\"Kitgate - The Cats\",component:va},{path:\"/team\",name:\"Kitgate - Our Team\",component:ba,meta:{background:\"/img/temp/image.jpg\"}},{path:\"/timeline\",name:\"Kitgate - Timeline\",component:Aa,meta:{background:\"/img/background/timeline.png\"}},{path:\"/contact\",name:\"Kitgate - Contact\",component:Oa}]});bi.beforeEach((e,t,n)=>{document.title=e.name??\"Kitgate\",e.meta.previousBackground=t.meta.background,n()});function eo(e){return Array.from(document.querySelectorAll(e))}const Ia=ze({props:{flipKey:null},setup(e){const t=e,{flipKey:n}=Po(t),s=()=>{let r=eo(\"[data-key]\"),o={};return r.forEach(i=>{var c=i.getAttribute(\"data-key\");o[c]=i.getBoundingClientRect()}),o};return Kt(n,()=>{let r=s();ks(()=>{let o=s();eo(\"[data-key]\").forEach(c=>{let l=c.getAttribute(\"data-key\");var d=r[l],a=o[l];if(!(!d||!a)){var h=d.y-a.y,p=d.x-a.x;c.animate([{transform:`translate(${p}px, ${h}px)`,width:`${d.width}px`,height:`${d.height}px`},{}],{duration:500,easing:\"ease-in-out\"})}})})}),(r,o)=>Vs(r.$slots,\"default\")}});var Ma={install:e=>{e.component(\"Flipper\",Ia)}};/**\n* Typewriter Compostable 1.3.0\n* (c) 2022-2022 undefined\n* @license MIT\n*/function to(e){const t=[...e];for(let n=e.length-1;n>0;n--){const s=Math.floor(Math.random()*(n+1)),r=t[n];t[n]=t[s],t[s]=r}return t}const ls={typeInterval:100,deleteInterval:50,holdFor:1e3,holdEmptyFor:200,loop:!0,iterations:0,startEmpty:!1,startPaused:!1,finishEmpty:!1,shuffle:!1};var xe;function La(e,t={}){const n=Te(e);let s;if(!Array.isArray(n.value))throw new TypeError(\"Words must be an array of strings.\");if(n.value.length===0)throw new Error(\"Words array must contain at least one string.\");const{typeInterval:r,deleteInterval:o,holdFor:i,holdEmptyFor:c,loop:l,iterations:d,finishEmpty:a}=Po(on({...ls,...t})),h=t.startPaused??ls.startPaused,p=Te(xe.Typing),m=Te(h),x=Te(0),A=Te(0),L=Te(1),O=Te(!1),F=Te(t.shuffle??ls.shuffle),B=me(()=>x.value===n.value.length-1),D=me(()=>A.value>=ne.value.length),z=me(()=>!l.value||d.value!==0&&L.value>=d.value);let $;const ne=me(()=>n.value[x.value]),j=me(()=>{const U=ne.value;return U?(U.length<A.value&&console.warn(\"The current string is shorter than the typed length. Resetting to first string.\"),U.slice(0,A.value)):(console.warn(\"Wasn't able to find a string to type out. Resetting to first string.\"),G(),\"\")}),ee=me(()=>ne.value.slice(A.value));function q(){if(D.value){if(p.value=xe.Waiting,B.value&&z.value&&!a.value)return void se();O.value?(O.value=!1,m.value=!0,p.value=xe.Deleting):i.value===0?I():$=setTimeout(I,i.value)}else A.value++,$=setTimeout(q,r.value)}function re(){p.value=xe.Deleting,A.value===0?function(){if(s)return void(s&&s.length>0&&(n.value=s,s=null,G(!0)));if(p.value=xe.Typing,B.value)if(l.value){if(F.value&&(n.value=to(n.value)),z.value)return void se();L.value++}else se();x.value=(x.value+1)%n.value.length,c.value===0?q():$=setTimeout(q,c.value)}():(A.value--,$=setTimeout(re,o.value))}function I(){p.value=xe.Deleting,$=setTimeout(re,o.value)}function G(U){x.value=0,A.value=0,L.value=1,U?q():h?m.value=!0:a.value?q():re()}function pe(){m.value=!0,clearTimeout($)}function Me(){switch(m.value=!1,p.value){case xe.Typing:q();break;case xe.Deleting:re();break;case xe.Waiting:I();break;case xe.Complete:A.value!==0?I():G();break;default:G()}}function se(){p.value=xe.Complete,pe(),O.value=!1,L.value=1,a.value&&(x.value=0)}function J(U){if(!U||U.length===0)throw new Error(\"The strings array is empty.\");A.value!==0?s=U:n.value=U}return Hn(()=>{t.startEmpty?p.value=xe.Typing:(x.value=n.value.length-1,p.value=xe.Waiting),t.startPaused||Me()}),jn(()=>{clearTimeout($)}),{text:j,remainingText:ee,strings:n,currentString:ne,currentAction:p,stringIndex:x,typedLength:A,iteration:L,typeInterval:r,deleteInterval:o,holdFor:i,holdEmptyFor:c,loop:l,iterations:d,isPaused:m,isAtLastLetter:D,isAtLastString:B,isLastIteration:z,isPausingAtEnd:O,willShuffle:F,finishEmpty:a,pause:pe,pauseAtEndOfWord:function(){O.value=!0},play:Me,shuffle:function(){J(to(n.value))},updateStrings:J,safeUpdateStrings:function(U){J(U)}}}(function(e){e[e.Typing=0]=\"Typing\",e[e.Deleting=1]=\"Deleting\",e[e.Waiting=2]=\"Waiting\",e[e.Complete=3]=\"Complete\"})(xe||(xe={}));const $a={class:\"textbox\"},Na=ze({__name:\"TextBox\",props:{text:{}},setup(e){const n=Te([e.text]),{text:s,currentString:r,isAtLastLetter:o}=La(n,{loop:!1,typeInterval:10});return(i,c)=>(Ie(),wt(\"div\",$a,[ye(\"span\",{class:Ln({\"blinking-cursor\":ae(o)})},$i(ae(s)),3),Vs(i.$slots,\"default\",{},void 0,!0)]))}});const Fa=qn(Na,[[\"__scopeId\",\"data-v-c12e94d6\"]]),zn=Qc(ta);zn.component(\"TextBox\",Fa);zn.use(bi);zn.use(Ma);zn.mount(\"#app\");\n","map":null,"preliminaryFileName":"assets/index-!~{001}~.js","sourcemapFileName":null}}